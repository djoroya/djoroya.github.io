import{r as We}from"./index.DhYZZe0J.js";function K0(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var j0={exports:{}},ch={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var uS=We,hS=Symbol.for("react.element"),dS=Symbol.for("react.fragment"),fS=Object.prototype.hasOwnProperty,pS=uS.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,mS={key:!0,ref:!0,__self:!0,__source:!0};function Q0(r,e,t){var n,i={},s=null,a=null;t!==void 0&&(s=""+t),e.key!==void 0&&(s=""+e.key),e.ref!==void 0&&(a=e.ref);for(n in e)fS.call(e,n)&&!mS.hasOwnProperty(n)&&(i[n]=e[n]);if(r&&r.defaultProps)for(n in e=r.defaultProps,e)i[n]===void 0&&(i[n]=e[n]);return{$$typeof:hS,type:r,key:s,ref:a,props:i,_owner:pS.current}}ch.Fragment=dS;ch.jsx=Q0;ch.jsxs=Q0;j0.exports=ch;var fn=j0.exports;/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const uh="170",gS={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},_S={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},$0=0,tp=1,ev=2,vS=3,tv=0,hh=1,Na=2,Ri=3,xr=0,Gn=1,Zi=2,vr=0,Rs=1,np=2,ip=3,rp=4,nv=5,Wr=100,iv=101,rv=102,sv=103,ov=104,av=200,lv=201,cv=202,uv=203,Mu=204,Eu=205,hv=206,dv=207,fv=208,pv=209,mv=210,gv=211,_v=212,vv=213,yv=214,Tu=0,wu=1,Au=2,Us=3,bu=4,Cu=5,Ru=6,Pu=7,cl=0,xv=1,Sv=2,ji=0,Mv=1,Ev=2,Tv=3,Mp=4,wv=5,Av=6,bv=7,sp="attached",Cv="detached",dh=300,Sr=301,Xr=302,Ya=303,qa=304,Go=306,Za=1e3,Si=1001,Ja=1002,wn=1003,Ep=1004,yS=1004,Io=1005,xS=1005,pn=1006,Fa=1007,SS=1007,Ji=1008,MS=1008,Ii=1009,Tp=1010,wp=1011,zo=1012,fh=1013,Mr=1014,ti=1015,Wo=1016,ph=1017,mh=1018,Os=1020,Ap=35902,bp=1021,Cp=1022,On=1023,Rp=1024,Pp=1025,Ps=1026,Ns=1027,gh=1028,ul=1029,Ip=1030,_h=1031,ES=1032,vh=1033,za=33776,Ba=33777,ka=33778,Ha=33779,Iu=35840,Lu=35841,Du=35842,Uu=35843,Ou=36196,Nu=37492,Fu=37496,zu=37808,Bu=37809,ku=37810,Hu=37811,Vu=37812,Gu=37813,Wu=37814,Xu=37815,Yu=37816,qu=37817,Zu=37818,Ju=37819,Ku=37820,ju=37821,Va=36492,Qu=36494,$u=36495,Lp=36283,eh=36284,th=36285,nh=36286,Rv=2200,Pv=2201,Iv=2202,Ka=2300,ih=2301,yu=2302,ws=2400,As=2401,ja=2402,yh=2500,Dp=2501,TS=0,wS=1,AS=2,Lv=3200,Dv=3201,bS=3202,CS=3203,qr=0,Uv=1,mr="",$n="srgb",Bs="srgb-linear",hl="linear",Bt="srgb",RS=0,Ms=7680,PS=7681,IS=7682,LS=7683,DS=34055,US=34056,OS=5386,NS=512,FS=513,zS=514,BS=515,kS=516,HS=517,VS=518,op=519,Ov=512,Nv=513,Fv=514,Up=515,zv=516,Bv=517,kv=518,Hv=519,Qa=35044,GS=35048,WS=35040,XS=35045,YS=35049,qS=35041,ZS=35046,JS=35050,KS=35042,jS="100",ap="300 es",Ki=2e3,$a=2001;let er=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,a=i.length;s<a;s++)i[s].call(this,e);e.target=null}}};const Ln=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Wg=1234567;const Is=Math.PI/180,Bo=180/Math.PI;function ci(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Ln[r&255]+Ln[r>>8&255]+Ln[r>>16&255]+Ln[r>>24&255]+"-"+Ln[e&255]+Ln[e>>8&255]+"-"+Ln[e>>16&15|64]+Ln[e>>24&255]+"-"+Ln[t&63|128]+Ln[t>>8&255]+"-"+Ln[t>>16&255]+Ln[t>>24&255]+Ln[n&255]+Ln[n>>8&255]+Ln[n>>16&255]+Ln[n>>24&255]).toLowerCase()}function nn(r,e,t){return Math.max(e,Math.min(t,r))}function Op(r,e){return(r%e+e)%e}function QS(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function $S(r,e,t){return r!==e?(t-r)/(e-r):0}function Ga(r,e,t){return(1-t)*r+t*e}function eM(r,e,t,n){return Ga(r,e,1-Math.exp(-t*n))}function tM(r,e=1){return e-Math.abs(Op(r,e*2)-e)}function nM(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function iM(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function rM(r,e){return r+Math.floor(Math.random()*(e-r+1))}function sM(r,e){return r+Math.random()*(e-r)}function oM(r){return r*(.5-Math.random())}function aM(r){r!==void 0&&(Wg=r);let e=Wg+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function lM(r){return r*Is}function cM(r){return r*Bo}function uM(r){return(r&r-1)===0&&r!==0}function hM(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function dM(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function fM(r,e,t,n,i){const s=Math.cos,a=Math.sin,c=s(t/2),u=a(t/2),h=s((e+n)/2),d=a((e+n)/2),p=s((e-n)/2),m=a((e-n)/2),_=s((n-e)/2),y=a((n-e)/2);switch(i){case"XYX":r.set(c*d,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*d,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*d,c*h);break;case"XZX":r.set(c*d,u*y,u*_,c*h);break;case"YXY":r.set(u*_,c*d,u*y,c*h);break;case"ZYZ":r.set(u*y,u*_,c*d,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Vn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function gt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const Vv={DEG2RAD:Is,RAD2DEG:Bo,generateUUID:ci,clamp:nn,euclideanModulo:Op,mapLinear:QS,inverseLerp:$S,lerp:Ga,damp:eM,pingpong:tM,smoothstep:nM,smootherstep:iM,randInt:rM,randFloat:sM,randFloatSpread:oM,seededRandom:aM,degToRad:lM,radToDeg:cM,isPowerOfTwo:uM,ceilPowerOfTwo:hM,floorPowerOfTwo:dM,setQuaternionFromProperEuler:fM,normalize:gt,denormalize:Vn};class fe{constructor(e=0,t=0){fe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(nn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*n-a*i+e.x,this.y=s*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class mt{constructor(e,t,n,i,s,a,c,u,h){mt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,a,c,u,h)}set(e,t,n,i,s,a,c,u,h){const d=this.elements;return d[0]=e,d[1]=i,d[2]=c,d[3]=t,d[4]=s,d[5]=u,d[6]=n,d[7]=a,d[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],c=n[3],u=n[6],h=n[1],d=n[4],p=n[7],m=n[2],_=n[5],y=n[8],S=i[0],x=i[3],g=i[6],E=i[1],w=i[4],T=i[7],I=i[2],C=i[5],L=i[8];return s[0]=a*S+c*E+u*I,s[3]=a*x+c*w+u*C,s[6]=a*g+c*T+u*L,s[1]=h*S+d*E+p*I,s[4]=h*x+d*w+p*C,s[7]=h*g+d*T+p*L,s[2]=m*S+_*E+y*I,s[5]=m*x+_*w+y*C,s[8]=m*g+_*T+y*L,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],d=e[8];return t*a*d-t*c*h-n*s*d+n*c*u+i*s*h-i*a*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=d*a-c*h,m=c*u-d*s,_=h*s-a*u,y=t*p+n*m+i*_;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const S=1/y;return e[0]=p*S,e[1]=(i*h-d*n)*S,e[2]=(c*n-i*a)*S,e[3]=m*S,e[4]=(d*t-i*u)*S,e[5]=(i*s-c*t)*S,e[6]=_*S,e[7]=(n*u-h*t)*S,e[8]=(a*t-n*s)*S,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,a,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*a+h*c)+a+e,-i*h,i*u,-i*(-h*a+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Zd.makeScale(e,t)),this}rotate(e){return this.premultiply(Zd.makeRotation(-e)),this}translate(e,t){return this.premultiply(Zd.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Zd=new mt;function Gv(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const pM={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Lo(r,e){return new pM[r](e)}function el(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function Wv(){const r=el("canvas");return r.style.display="block",r}const Xg={};function Da(r){r in Xg||(Xg[r]=!0,console.warn(r))}function mM(r,e,t){return new Promise(function(n,i){function s(){switch(r.clientWaitSync(e,r.SYNC_FLUSH_COMMANDS_BIT,0)){case r.WAIT_FAILED:i();break;case r.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:n()}}setTimeout(s,t)})}function gM(r){const e=r.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function _M(r){const e=r.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const Rt={enabled:!0,workingColorSpace:Bs,spaces:{},convert:function(r,e,t){return this.enabled===!1||e===t||!e||!t||(this.spaces[e].transfer===Bt&&(r.r=yr(r.r),r.g=yr(r.g),r.b=yr(r.b)),this.spaces[e].primaries!==this.spaces[t].primaries&&(r.applyMatrix3(this.spaces[e].toXYZ),r.applyMatrix3(this.spaces[t].fromXYZ)),this.spaces[t].transfer===Bt&&(r.r=Fo(r.r),r.g=Fo(r.g),r.b=Fo(r.b))),r},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)},getPrimaries:function(r){return this.spaces[r].primaries},getTransfer:function(r){return r===mr?hl:this.spaces[r].transfer},getLuminanceCoefficients:function(r,e=this.workingColorSpace){return r.fromArray(this.spaces[e].luminanceCoefficients)},define:function(r){Object.assign(this.spaces,r)},_getMatrix:function(r,e,t){return r.copy(this.spaces[e].toXYZ).multiply(this.spaces[t].fromXYZ)},_getDrawingBufferColorSpace:function(r){return this.spaces[r].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(r=this.workingColorSpace){return this.spaces[r].workingColorSpaceConfig.unpackColorSpace}};function yr(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Fo(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const Yg=[.64,.33,.3,.6,.15,.06],qg=[.2126,.7152,.0722],Zg=[.3127,.329],Jg=new mt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Kg=new mt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);Rt.define({[Bs]:{primaries:Yg,whitePoint:Zg,transfer:hl,toXYZ:Jg,fromXYZ:Kg,luminanceCoefficients:qg,workingColorSpaceConfig:{unpackColorSpace:$n},outputColorSpaceConfig:{drawingBufferColorSpace:$n}},[$n]:{primaries:Yg,whitePoint:Zg,transfer:Bt,toXYZ:Jg,fromXYZ:Kg,luminanceCoefficients:qg,outputColorSpaceConfig:{drawingBufferColorSpace:$n}}});let ro;class Xv{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{ro===void 0&&(ro=el("canvas")),ro.width=e.width,ro.height=e.height;const n=ro.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=ro}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=el("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let a=0;a<s.length;a++)s[a]=yr(s[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(yr(t[n]/255)*255):t[n]=yr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let vM=0;class bs{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:vM++}),this.uuid=ci(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let a=0,c=i.length;a<c;a++)i[a].isDataTexture?s.push(Jd(i[a].image)):s.push(Jd(i[a]))}else s=Jd(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Jd(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Xv.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let yM=0;class $t extends er{constructor(e=$t.DEFAULT_IMAGE,t=$t.DEFAULT_MAPPING,n=Si,i=Si,s=pn,a=Ji,c=On,u=Ii,h=$t.DEFAULT_ANISOTROPY,d=mr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:yM++}),this.uuid=ci(),this.name="",this.source=new bs(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=a,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new fe(0,0),this.repeat=new fe(1,1),this.center=new fe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new mt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==dh)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Za:e.x=e.x-Math.floor(e.x);break;case Si:e.x=e.x<0?0:1;break;case Ja:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Za:e.y=e.y-Math.floor(e.y);break;case Si:e.y=e.y<0?0:1;break;case Ja:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}$t.DEFAULT_IMAGE=null;$t.DEFAULT_MAPPING=dh;$t.DEFAULT_ANISOTROPY=1;class Pt{constructor(e=0,t=0,n=0,i=1){Pt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*s,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*s,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*s,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],d=u[4],p=u[8],m=u[1],_=u[5],y=u[9],S=u[2],x=u[6],g=u[10];if(Math.abs(d-m)<.01&&Math.abs(p-S)<.01&&Math.abs(y-x)<.01){if(Math.abs(d+m)<.1&&Math.abs(p+S)<.1&&Math.abs(y+x)<.1&&Math.abs(h+_+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const w=(h+1)/2,T=(_+1)/2,I=(g+1)/2,C=(d+m)/4,L=(p+S)/4,U=(y+x)/4;return w>T&&w>I?w<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(w),i=C/n,s=L/n):T>I?T<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(T),n=C/i,s=U/i):I<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(I),n=L/s,i=U/s),this.set(n,i,s,t),this}let E=Math.sqrt((x-y)*(x-y)+(p-S)*(p-S)+(m-d)*(m-d));return Math.abs(E)<.001&&(E=1),this.x=(x-y)/E,this.y=(p-S)/E,this.z=(m-d)/E,this.w=Math.acos((h+_+g-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Yv extends er{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Pt(0,0,e,t),this.scissorTest=!1,this.viewport=new Pt(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:pn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const s=new $t(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const a=n.count;for(let c=0;c<a;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new bs(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Li extends Yv{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class xh extends $t{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=wn,this.minFilter=wn,this.wrapR=Si,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class xM extends Li{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new xh(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Np extends $t{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=wn,this.minFilter=wn,this.wrapR=Si,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class SM extends Li{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Np(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Wn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,a,c){let u=n[i+0],h=n[i+1],d=n[i+2],p=n[i+3];const m=s[a+0],_=s[a+1],y=s[a+2],S=s[a+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=_,e[t+2]=y,e[t+3]=S;return}if(p!==S||u!==m||h!==_||d!==y){let x=1-c;const g=u*m+h*_+d*y+p*S,E=g>=0?1:-1,w=1-g*g;if(w>Number.EPSILON){const I=Math.sqrt(w),C=Math.atan2(I,g*E);x=Math.sin(x*C)/I,c=Math.sin(c*C)/I}const T=c*E;if(u=u*x+m*T,h=h*x+_*T,d=d*x+y*T,p=p*x+S*T,x===1-c){const I=1/Math.sqrt(u*u+h*h+d*d+p*p);u*=I,h*=I,d*=I,p*=I}}e[t]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,a){const c=n[i],u=n[i+1],h=n[i+2],d=n[i+3],p=s[a],m=s[a+1],_=s[a+2],y=s[a+3];return e[t]=c*y+d*p+u*_-h*m,e[t+1]=u*y+d*m+h*p-c*_,e[t+2]=h*y+d*_+c*m-u*p,e[t+3]=d*y-c*p-u*m-h*_,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,a=e._order,c=Math.cos,u=Math.sin,h=c(n/2),d=c(i/2),p=c(s/2),m=u(n/2),_=u(i/2),y=u(s/2);switch(a){case"XYZ":this._x=m*d*p+h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p-m*_*y;break;case"YXZ":this._x=m*d*p+h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p+m*_*y;break;case"ZXY":this._x=m*d*p-h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p-m*_*y;break;case"ZYX":this._x=m*d*p-h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p+m*_*y;break;case"YZX":this._x=m*d*p+h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p-m*_*y;break;case"XZY":this._x=m*d*p-h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p+m*_*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],a=t[1],c=t[5],u=t[9],h=t[2],d=t[6],p=t[10],m=n+c+p;if(m>0){const _=.5/Math.sqrt(m+1);this._w=.25/_,this._x=(d-u)*_,this._y=(s-h)*_,this._z=(a-i)*_}else if(n>c&&n>p){const _=2*Math.sqrt(1+n-c-p);this._w=(d-u)/_,this._x=.25*_,this._y=(i+a)/_,this._z=(s+h)/_}else if(c>p){const _=2*Math.sqrt(1+c-n-p);this._w=(s-h)/_,this._x=(i+a)/_,this._y=.25*_,this._z=(u+d)/_}else{const _=2*Math.sqrt(1+p-n-c);this._w=(a-i)/_,this._x=(s+h)/_,this._y=(u+d)/_,this._z=.25*_}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(nn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,a=e._w,c=t._x,u=t._y,h=t._z,d=t._w;return this._x=n*d+a*c+i*h-s*u,this._y=i*d+a*u+s*c-n*h,this._z=s*d+a*h+n*u-i*c,this._w=a*d-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,a=this._w;let c=a*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=a,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const _=1-t;return this._w=_*a+t*this._w,this._x=_*n+t*this._x,this._y=_*i+t*this._y,this._z=_*s+t*this._z,this.normalize(),this}const h=Math.sqrt(u),d=Math.atan2(h,c),p=Math.sin((1-t)*d)/h,m=Math.sin(t*d)/h;return this._w=a*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class F{constructor(e=0,t=0,n=0){F.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(jg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(jg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,a=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*a,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*a,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,a=e.y,c=e.z,u=e.w,h=2*(a*i-c*n),d=2*(c*t-s*i),p=2*(s*n-a*t);return this.x=t+u*h+a*p-c*d,this.y=n+u*d+c*h-s*p,this.z=i+u*p+s*d-a*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,a=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*a-n*u,this.z=n*c-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Kd.copy(this).projectOnVector(e),this.sub(Kd)}reflect(e){return this.sub(Kd.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(nn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Kd=new F,jg=new Wn;class Nn{constructor(e=new F(1/0,1/0,1/0),t=new F(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(wi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(wi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=wi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let a=0,c=s.count;a<c;a++)e.isMesh===!0?e.getVertexPosition(a,wi):wi.fromBufferAttribute(s,a),wi.applyMatrix4(e.matrixWorld),this.expandByPoint(wi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Mc.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Mc.copy(n.boundingBox)),Mc.applyMatrix4(e.matrixWorld),this.union(Mc)}const i=e.children;for(let s=0,a=i.length;s<a;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,wi),wi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(pa),Ec.subVectors(this.max,pa),so.subVectors(e.a,pa),oo.subVectors(e.b,pa),ao.subVectors(e.c,pa),Or.subVectors(oo,so),Nr.subVectors(ao,oo),as.subVectors(so,ao);let t=[0,-Or.z,Or.y,0,-Nr.z,Nr.y,0,-as.z,as.y,Or.z,0,-Or.x,Nr.z,0,-Nr.x,as.z,0,-as.x,-Or.y,Or.x,0,-Nr.y,Nr.x,0,-as.y,as.x,0];return!jd(t,so,oo,ao,Ec)||(t=[1,0,0,0,1,0,0,0,1],!jd(t,so,oo,ao,Ec))?!1:(Tc.crossVectors(Or,Nr),t=[Tc.x,Tc.y,Tc.z],jd(t,so,oo,ao,Ec))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,wi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(wi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(lr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),lr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),lr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),lr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),lr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),lr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),lr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),lr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(lr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const lr=[new F,new F,new F,new F,new F,new F,new F,new F],wi=new F,Mc=new Nn,so=new F,oo=new F,ao=new F,Or=new F,Nr=new F,as=new F,pa=new F,Ec=new F,Tc=new F,ls=new F;function jd(r,e,t,n,i){for(let s=0,a=r.length-3;s<=a;s+=3){ls.fromArray(r,s);const c=i.x*Math.abs(ls.x)+i.y*Math.abs(ls.y)+i.z*Math.abs(ls.z),u=e.dot(ls),h=t.dot(ls),d=n.dot(ls);if(Math.max(-Math.max(u,h,d),Math.min(u,h,d))>c)return!1}return!0}const MM=new Nn,ma=new F,Qd=new F;class An{constructor(e=new F,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):MM.setFromPoints(e).getCenter(n);let i=0;for(let s=0,a=e.length;s<a;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ma.subVectors(e,this.center);const t=ma.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ma,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Qd.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ma.copy(e.center).add(Qd)),this.expandByPoint(ma.copy(e.center).sub(Qd))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const cr=new F,$d=new F,wc=new F,Fr=new F,ef=new F,Ac=new F,tf=new F;class Xo{constructor(e=new F,t=new F(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,cr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=cr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(cr.copy(this.origin).addScaledVector(this.direction,t),cr.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){$d.copy(e).add(t).multiplyScalar(.5),wc.copy(t).sub(e).normalize(),Fr.copy(this.origin).sub($d);const s=e.distanceTo(t)*.5,a=-this.direction.dot(wc),c=Fr.dot(this.direction),u=-Fr.dot(wc),h=Fr.lengthSq(),d=Math.abs(1-a*a);let p,m,_,y;if(d>0)if(p=a*u-c,m=a*c-u,y=s*d,p>=0)if(m>=-y)if(m<=y){const S=1/d;p*=S,m*=S,_=p*(p+a*m+2*c)+m*(a*p+m+2*u)+h}else m=s,p=Math.max(0,-(a*m+c)),_=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(a*m+c)),_=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-a*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),_=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),_=m*(m+2*u)+h):(p=Math.max(0,-(a*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),_=-p*p+m*(m+2*u)+h);else m=a>0?-s:s,p=Math.max(0,-(a*m+c)),_=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy($d).addScaledVector(wc,m),_}intersectSphere(e,t){cr.subVectors(e.center,this.origin);const n=cr.dot(this.direction),i=cr.dot(cr)-n*n,s=e.radius*e.radius;if(i>s)return null;const a=Math.sqrt(s-i),c=n-a,u=n+a;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,a,c,u;const h=1/this.direction.x,d=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),d>=0?(s=(e.min.y-m.y)*d,a=(e.max.y-m.y)*d):(s=(e.max.y-m.y)*d,a=(e.min.y-m.y)*d),n>a||s>i||((s>n||isNaN(n))&&(n=s),(a<i||isNaN(i))&&(i=a),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,cr)!==null}intersectTriangle(e,t,n,i,s){ef.subVectors(t,e),Ac.subVectors(n,e),tf.crossVectors(ef,Ac);let a=this.direction.dot(tf),c;if(a>0){if(i)return null;c=1}else if(a<0)c=-1,a=-a;else return null;Fr.subVectors(this.origin,e);const u=c*this.direction.dot(Ac.crossVectors(Fr,Ac));if(u<0)return null;const h=c*this.direction.dot(ef.cross(Fr));if(h<0||u+h>a)return null;const d=-c*Fr.dot(tf);return d<0?null:this.at(d/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class rt{constructor(e,t,n,i,s,a,c,u,h,d,p,m,_,y,S,x){rt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,a,c,u,h,d,p,m,_,y,S,x)}set(e,t,n,i,s,a,c,u,h,d,p,m,_,y,S,x){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=i,g[1]=s,g[5]=a,g[9]=c,g[13]=u,g[2]=h,g[6]=d,g[10]=p,g[14]=m,g[3]=_,g[7]=y,g[11]=S,g[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new rt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/lo.setFromMatrixColumn(e,0).length(),s=1/lo.setFromMatrixColumn(e,1).length(),a=1/lo.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,a=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),d=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=a*d,_=a*p,y=c*d,S=c*p;t[0]=u*d,t[4]=-u*p,t[8]=h,t[1]=_+y*h,t[5]=m-S*h,t[9]=-c*u,t[2]=S-m*h,t[6]=y+_*h,t[10]=a*u}else if(e.order==="YXZ"){const m=u*d,_=u*p,y=h*d,S=h*p;t[0]=m+S*c,t[4]=y*c-_,t[8]=a*h,t[1]=a*p,t[5]=a*d,t[9]=-c,t[2]=_*c-y,t[6]=S+m*c,t[10]=a*u}else if(e.order==="ZXY"){const m=u*d,_=u*p,y=h*d,S=h*p;t[0]=m-S*c,t[4]=-a*p,t[8]=y+_*c,t[1]=_+y*c,t[5]=a*d,t[9]=S-m*c,t[2]=-a*h,t[6]=c,t[10]=a*u}else if(e.order==="ZYX"){const m=a*d,_=a*p,y=c*d,S=c*p;t[0]=u*d,t[4]=y*h-_,t[8]=m*h+S,t[1]=u*p,t[5]=S*h+m,t[9]=_*h-y,t[2]=-h,t[6]=c*u,t[10]=a*u}else if(e.order==="YZX"){const m=a*u,_=a*h,y=c*u,S=c*h;t[0]=u*d,t[4]=S-m*p,t[8]=y*p+_,t[1]=p,t[5]=a*d,t[9]=-c*d,t[2]=-h*d,t[6]=_*p+y,t[10]=m-S*p}else if(e.order==="XZY"){const m=a*u,_=a*h,y=c*u,S=c*h;t[0]=u*d,t[4]=-p,t[8]=h*d,t[1]=m*p+S,t[5]=a*d,t[9]=_*p-y,t[2]=y*p-_,t[6]=c*d,t[10]=S*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(EM,e,TM)}lookAt(e,t,n){const i=this.elements;return ai.subVectors(e,t),ai.lengthSq()===0&&(ai.z=1),ai.normalize(),zr.crossVectors(n,ai),zr.lengthSq()===0&&(Math.abs(n.z)===1?ai.x+=1e-4:ai.z+=1e-4,ai.normalize(),zr.crossVectors(n,ai)),zr.normalize(),bc.crossVectors(ai,zr),i[0]=zr.x,i[4]=bc.x,i[8]=ai.x,i[1]=zr.y,i[5]=bc.y,i[9]=ai.y,i[2]=zr.z,i[6]=bc.z,i[10]=ai.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],c=n[4],u=n[8],h=n[12],d=n[1],p=n[5],m=n[9],_=n[13],y=n[2],S=n[6],x=n[10],g=n[14],E=n[3],w=n[7],T=n[11],I=n[15],C=i[0],L=i[4],U=i[8],R=i[12],b=i[1],O=i[5],q=i[9],Y=i[13],Q=i[2],ae=i[6],$=i[10],pe=i[14],z=i[3],Z=i[7],J=i[11],re=i[15];return s[0]=a*C+c*b+u*Q+h*z,s[4]=a*L+c*O+u*ae+h*Z,s[8]=a*U+c*q+u*$+h*J,s[12]=a*R+c*Y+u*pe+h*re,s[1]=d*C+p*b+m*Q+_*z,s[5]=d*L+p*O+m*ae+_*Z,s[9]=d*U+p*q+m*$+_*J,s[13]=d*R+p*Y+m*pe+_*re,s[2]=y*C+S*b+x*Q+g*z,s[6]=y*L+S*O+x*ae+g*Z,s[10]=y*U+S*q+x*$+g*J,s[14]=y*R+S*Y+x*pe+g*re,s[3]=E*C+w*b+T*Q+I*z,s[7]=E*L+w*O+T*ae+I*Z,s[11]=E*U+w*q+T*$+I*J,s[15]=E*R+w*Y+T*pe+I*re,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],a=e[1],c=e[5],u=e[9],h=e[13],d=e[2],p=e[6],m=e[10],_=e[14],y=e[3],S=e[7],x=e[11],g=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*_-n*u*_)+S*(+t*u*_-t*h*m+s*a*m-i*a*_+i*h*d-s*u*d)+x*(+t*h*p-t*c*_-s*a*p+n*a*_+s*c*d-n*h*d)+g*(-i*c*d-t*u*p+t*c*m+i*a*p-n*a*m+n*u*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=e[9],m=e[10],_=e[11],y=e[12],S=e[13],x=e[14],g=e[15],E=p*x*h-S*m*h+S*u*_-c*x*_-p*u*g+c*m*g,w=y*m*h-d*x*h-y*u*_+a*x*_+d*u*g-a*m*g,T=d*S*h-y*p*h+y*c*_-a*S*_-d*c*g+a*p*g,I=y*p*u-d*S*u-y*c*m+a*S*m+d*c*x-a*p*x,C=t*E+n*w+i*T+s*I;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const L=1/C;return e[0]=E*L,e[1]=(S*m*s-p*x*s-S*i*_+n*x*_+p*i*g-n*m*g)*L,e[2]=(c*x*s-S*u*s+S*i*h-n*x*h-c*i*g+n*u*g)*L,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*_-n*u*_)*L,e[4]=w*L,e[5]=(d*x*s-y*m*s+y*i*_-t*x*_-d*i*g+t*m*g)*L,e[6]=(y*u*s-a*x*s-y*i*h+t*x*h+a*i*g-t*u*g)*L,e[7]=(a*m*s-d*u*s+d*i*h-t*m*h-a*i*_+t*u*_)*L,e[8]=T*L,e[9]=(y*p*s-d*S*s-y*n*_+t*S*_+d*n*g-t*p*g)*L,e[10]=(a*S*s-y*c*s+y*n*h-t*S*h-a*n*g+t*c*g)*L,e[11]=(d*c*s-a*p*s-d*n*h+t*p*h+a*n*_-t*c*_)*L,e[12]=I*L,e[13]=(d*S*i-y*p*i+y*n*m-t*S*m-d*n*x+t*p*x)*L,e[14]=(y*c*i-a*S*i-y*n*u+t*S*u+a*n*x-t*c*x)*L,e[15]=(a*p*i-d*c*i+d*n*u-t*p*u-a*n*m+t*c*m)*L,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,a=e.x,c=e.y,u=e.z,h=s*a,d=s*c;return this.set(h*a+n,h*c-i*u,h*u+i*c,0,h*c+i*u,d*c+n,d*u-i*a,0,h*u-i*c,d*u+i*a,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,a){return this.set(1,n,s,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,a=t._y,c=t._z,u=t._w,h=s+s,d=a+a,p=c+c,m=s*h,_=s*d,y=s*p,S=a*d,x=a*p,g=c*p,E=u*h,w=u*d,T=u*p,I=n.x,C=n.y,L=n.z;return i[0]=(1-(S+g))*I,i[1]=(_+T)*I,i[2]=(y-w)*I,i[3]=0,i[4]=(_-T)*C,i[5]=(1-(m+g))*C,i[6]=(x+E)*C,i[7]=0,i[8]=(y+w)*L,i[9]=(x-E)*L,i[10]=(1-(m+S))*L,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=lo.set(i[0],i[1],i[2]).length();const a=lo.set(i[4],i[5],i[6]).length(),c=lo.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],Ai.copy(this);const h=1/s,d=1/a,p=1/c;return Ai.elements[0]*=h,Ai.elements[1]*=h,Ai.elements[2]*=h,Ai.elements[4]*=d,Ai.elements[5]*=d,Ai.elements[6]*=d,Ai.elements[8]*=p,Ai.elements[9]*=p,Ai.elements[10]*=p,t.setFromRotationMatrix(Ai),n.x=s,n.y=a,n.z=c,this}makePerspective(e,t,n,i,s,a,c=Ki){const u=this.elements,h=2*s/(t-e),d=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let _,y;if(c===Ki)_=-(a+s)/(a-s),y=-2*a*s/(a-s);else if(c===$a)_=-a/(a-s),y=-a*s/(a-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=d,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=_,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,a,c=Ki){const u=this.elements,h=1/(t-e),d=1/(n-i),p=1/(a-s),m=(t+e)*h,_=(n+i)*d;let y,S;if(c===Ki)y=(a+s)*p,S=-2*p;else if(c===$a)y=s*p,S=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*d,u[9]=0,u[13]=-_,u[2]=0,u[6]=0,u[10]=S,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const lo=new F,Ai=new rt,EM=new F(0,0,0),TM=new F(1,1,1),zr=new F,bc=new F,ai=new F,Qg=new rt,$g=new Wn;class ui{constructor(e=0,t=0,n=0,i=ui.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],a=i[4],c=i[8],u=i[1],h=i[5],d=i[9],p=i[2],m=i[6],_=i[10];switch(t){case"XYZ":this._y=Math.asin(nn(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,_),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-nn(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,_),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(nn(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,_),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-nn(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,_),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(nn(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,_));break;case"XZY":this._z=Math.asin(-nn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-d,_),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Qg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Qg,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return $g.setFromEuler(this),this.setFromQuaternion($g,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ui.DEFAULT_ORDER="XYZ";class Ls{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let wM=0;const e_=new F,co=new Wn,ur=new rt,Cc=new F,ga=new F,AM=new F,bM=new Wn,t_=new F(1,0,0),n_=new F(0,1,0),i_=new F(0,0,1),r_={type:"added"},CM={type:"removed"},uo={type:"childadded",child:null},nf={type:"childremoved",child:null};class Lt extends er{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:wM++}),this.uuid=ci(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Lt.DEFAULT_UP.clone();const e=new F,t=new ui,n=new Wn,i=new F(1,1,1);function s(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new rt},normalMatrix:{value:new mt}}),this.matrix=new rt,this.matrixWorld=new rt,this.matrixAutoUpdate=Lt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Lt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ls,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return co.setFromAxisAngle(e,t),this.quaternion.multiply(co),this}rotateOnWorldAxis(e,t){return co.setFromAxisAngle(e,t),this.quaternion.premultiply(co),this}rotateX(e){return this.rotateOnAxis(t_,e)}rotateY(e){return this.rotateOnAxis(n_,e)}rotateZ(e){return this.rotateOnAxis(i_,e)}translateOnAxis(e,t){return e_.copy(e).applyQuaternion(this.quaternion),this.position.add(e_.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(t_,e)}translateY(e){return this.translateOnAxis(n_,e)}translateZ(e){return this.translateOnAxis(i_,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(ur.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Cc.copy(e):Cc.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ga.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ur.lookAt(ga,Cc,this.up):ur.lookAt(Cc,ga,this.up),this.quaternion.setFromRotationMatrix(ur),i&&(ur.extractRotation(i.matrixWorld),co.setFromRotationMatrix(ur),this.quaternion.premultiply(co.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(r_),uo.child=e,this.dispatchEvent(uo),uo.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(CM),nf.child=e,this.dispatchEvent(nf),nf.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),ur.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),ur.multiply(e.parent.matrixWorld)),e.applyMatrix4(ur),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(r_),uo.child=e,this.dispatchEvent(uo),uo.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,a=i.length;s<a;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ga,e,AM),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ga,bM,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let s=0,a=i.length;s<a;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,d=u.length;h<d;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=a(e.geometries),u=a(e.materials),h=a(e.textures),d=a(e.images),p=a(e.shapes),m=a(e.skeletons),_=a(e.animations),y=a(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),d.length>0&&(n.images=d),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),_.length>0&&(n.animations=_),y.length>0&&(n.nodes=y)}return n.object=i,n;function a(c){const u=[];for(const h in c){const d=c[h];delete d.metadata,u.push(d)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Lt.DEFAULT_UP=new F(0,1,0);Lt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Lt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const bi=new F,hr=new F,rf=new F,dr=new F,ho=new F,fo=new F,s_=new F,sf=new F,of=new F,af=new F,lf=new Pt,cf=new Pt,uf=new Pt;class ei{constructor(e=new F,t=new F,n=new F){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),bi.subVectors(e,t),i.cross(bi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){bi.subVectors(i,t),hr.subVectors(n,t),rf.subVectors(e,t);const a=bi.dot(bi),c=bi.dot(hr),u=bi.dot(rf),h=hr.dot(hr),d=hr.dot(rf),p=a*h-c*c;if(p===0)return s.set(0,0,0),null;const m=1/p,_=(h*u-c*d)*m,y=(a*d-c*u)*m;return s.set(1-_-y,y,_)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,dr)===null?!1:dr.x>=0&&dr.y>=0&&dr.x+dr.y<=1}static getInterpolation(e,t,n,i,s,a,c,u){return this.getBarycoord(e,t,n,i,dr)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,dr.x),u.addScaledVector(a,dr.y),u.addScaledVector(c,dr.z),u)}static getInterpolatedAttribute(e,t,n,i,s,a){return lf.setScalar(0),cf.setScalar(0),uf.setScalar(0),lf.fromBufferAttribute(e,t),cf.fromBufferAttribute(e,n),uf.fromBufferAttribute(e,i),a.setScalar(0),a.addScaledVector(lf,s.x),a.addScaledVector(cf,s.y),a.addScaledVector(uf,s.z),a}static isFrontFacing(e,t,n,i){return bi.subVectors(n,t),hr.subVectors(e,t),bi.cross(hr).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return bi.subVectors(this.c,this.b),hr.subVectors(this.a,this.b),bi.cross(hr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ei.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ei.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return ei.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return ei.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ei.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let a,c;ho.subVectors(i,n),fo.subVectors(s,n),sf.subVectors(e,n);const u=ho.dot(sf),h=fo.dot(sf);if(u<=0&&h<=0)return t.copy(n);of.subVectors(e,i);const d=ho.dot(of),p=fo.dot(of);if(d>=0&&p<=d)return t.copy(i);const m=u*p-d*h;if(m<=0&&u>=0&&d<=0)return a=u/(u-d),t.copy(n).addScaledVector(ho,a);af.subVectors(e,s);const _=ho.dot(af),y=fo.dot(af);if(y>=0&&_<=y)return t.copy(s);const S=_*h-u*y;if(S<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(fo,c);const x=d*y-_*p;if(x<=0&&p-d>=0&&_-y>=0)return s_.subVectors(s,i),c=(p-d)/(p-d+(_-y)),t.copy(i).addScaledVector(s_,c);const g=1/(x+S+m);return a=S*g,c=m*g,t.copy(n).addScaledVector(ho,a).addScaledVector(fo,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const qv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Br={h:0,s:0,l:0},Rc={h:0,s:0,l:0};function hf(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Ne{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=$n){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Rt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Rt.workingColorSpace){return this.r=e,this.g=t,this.b=n,Rt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Rt.workingColorSpace){if(e=Op(e,1),t=nn(t,0,1),n=nn(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,a=2*n-s;this.r=hf(a,s,e+1/3),this.g=hf(a,s,e),this.b=hf(a,s,e-1/3)}return Rt.toWorkingColorSpace(this,i),this}setStyle(e,t=$n){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const a=i[1],c=i[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],a=s.length;if(a===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=$n){const n=qv[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=yr(e.r),this.g=yr(e.g),this.b=yr(e.b),this}copyLinearToSRGB(e){return this.r=Fo(e.r),this.g=Fo(e.g),this.b=Fo(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=$n){return Rt.fromWorkingColorSpace(Dn.copy(this),e),Math.round(nn(Dn.r*255,0,255))*65536+Math.round(nn(Dn.g*255,0,255))*256+Math.round(nn(Dn.b*255,0,255))}getHexString(e=$n){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Rt.workingColorSpace){Rt.fromWorkingColorSpace(Dn.copy(this),t);const n=Dn.r,i=Dn.g,s=Dn.b,a=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const d=(c+a)/2;if(c===a)u=0,h=0;else{const p=a-c;switch(h=d<=.5?p/(a+c):p/(2-a-c),a){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=d,e}getRGB(e,t=Rt.workingColorSpace){return Rt.fromWorkingColorSpace(Dn.copy(this),t),e.r=Dn.r,e.g=Dn.g,e.b=Dn.b,e}getStyle(e=$n){Rt.fromWorkingColorSpace(Dn.copy(this),e);const t=Dn.r,n=Dn.g,i=Dn.b;return e!==$n?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Br),this.setHSL(Br.h+e,Br.s+t,Br.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Br),e.getHSL(Rc);const n=Ga(Br.h,Rc.h,t),i=Ga(Br.s,Rc.s,t),s=Ga(Br.l,Rc.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Dn=new Ne;Ne.NAMES=qv;let RM=0;class bn extends er{static get type(){return"Material"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:RM++}),this.uuid=ci(),this.name="",this.blending=Rs,this.side=xr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Mu,this.blendDst=Eu,this.blendEquation=Wr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ne(0,0,0),this.blendAlpha=0,this.depthFunc=Us,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=op,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ms,this.stencilZFail=Ms,this.stencilZPass=Ms,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Rs&&(n.blending=this.blending),this.side!==xr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Mu&&(n.blendSrc=this.blendSrc),this.blendDst!==Eu&&(n.blendDst=this.blendDst),this.blendEquation!==Wr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Us&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==op&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ms&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Ms&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Ms&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const a=[];for(const c in s){const u=s[c];delete u.metadata,a.push(u)}return a}if(t){const s=i(e.textures),a=i(e.images);s.length>0&&(n.textures=s),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Zr extends bn{static get type(){return"MeshBasicMaterial"}constructor(e){super(),this.isMeshBasicMaterial=!0,this.color=new Ne(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ui,this.combine=cl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const gr=PM();function PM(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,d=0;for(;!(h&8388608);)h<<=1,d-=8388608;h&=-8388609,d+=947912704,s[u]=h|d}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)a[u]=u<<23;a[31]=1199570944,a[32]=2147483648;for(let u=33;u<63;++u)a[u]=2147483648+(u-32<<23);a[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:a,offsetTable:c}}function Qn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=nn(r,-65504,65504),gr.floatView[0]=r;const e=gr.uint32View[0],t=e>>23&511;return gr.baseTable[t]+((e&8388607)>>gr.shiftTable[t])}function Ua(r){const e=r>>10;return gr.uint32View[0]=gr.mantissaTable[gr.offsetTable[e]+(r&1023)]+gr.exponentTable[e],gr.floatView[0]}const IM={toHalfFloat:Qn,fromHalfFloat:Ua},cn=new F,Pc=new fe;class Vt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Qa,this.updateRanges=[],this.gpuType=ti,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Pc.fromBufferAttribute(this,t),Pc.applyMatrix3(e),this.setXY(t,Pc.x,Pc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)cn.fromBufferAttribute(this,t),cn.applyMatrix3(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)cn.fromBufferAttribute(this,t),cn.applyMatrix4(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)cn.fromBufferAttribute(this,t),cn.applyNormalMatrix(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)cn.fromBufferAttribute(this,t),cn.transformDirection(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Vn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=gt(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Vn(t,this.array)),t}setX(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Vn(t,this.array)),t}setY(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Vn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Vn(t,this.array)),t}setW(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array),s=gt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Qa&&(e.usage=this.usage),e}}class LM extends Vt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class DM extends Vt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class UM extends Vt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class OM extends Vt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Fp extends Vt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class NM extends Vt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class zp extends Vt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class FM extends Vt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Ua(this.array[e*this.itemSize]);return this.normalized&&(t=Vn(t,this.array)),t}setX(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize]=Qn(t),this}getY(e){let t=Ua(this.array[e*this.itemSize+1]);return this.normalized&&(t=Vn(t,this.array)),t}setY(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+1]=Qn(t),this}getZ(e){let t=Ua(this.array[e*this.itemSize+2]);return this.normalized&&(t=Vn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+2]=Qn(t),this}getW(e){let t=Ua(this.array[e*this.itemSize+3]);return this.normalized&&(t=Vn(t,this.array)),t}setW(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+3]=Qn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array)),this.array[e+0]=Qn(t),this.array[e+1]=Qn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array)),this.array[e+0]=Qn(t),this.array[e+1]=Qn(n),this.array[e+2]=Qn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array),s=gt(s,this.array)),this.array[e+0]=Qn(t),this.array[e+1]=Qn(n),this.array[e+2]=Qn(i),this.array[e+3]=Qn(s),this}}class Ze extends Vt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let zM=0;const yi=new rt,df=new Lt,po=new F,li=new Nn,_a=new Nn,Mn=new F;class _t extends er{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:zM++}),this.uuid=ci(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Gv(e)?zp:Fp)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new mt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return yi.makeRotationFromQuaternion(e),this.applyMatrix4(yi),this}rotateX(e){return yi.makeRotationX(e),this.applyMatrix4(yi),this}rotateY(e){return yi.makeRotationY(e),this.applyMatrix4(yi),this}rotateZ(e){return yi.makeRotationZ(e),this.applyMatrix4(yi),this}translate(e,t,n){return yi.makeTranslation(e,t,n),this.applyMatrix4(yi),this}scale(e,t,n){return yi.makeScale(e,t,n),this.applyMatrix4(yi),this}lookAt(e){return df.lookAt(e),df.updateMatrix(),this.applyMatrix4(df.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(po).negate(),this.translate(po.x,po.y,po.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,s=e.length;i<s;i++){const a=e[i];n.push(a.x,a.y,a.z||0)}this.setAttribute("position",new Ze(n,3))}else{for(let n=0,i=t.count;n<i;n++){const s=e[n];t.setXYZ(n,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Nn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new F(-1/0,-1/0,-1/0),new F(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];li.setFromBufferAttribute(s),this.morphTargetsRelative?(Mn.addVectors(this.boundingBox.min,li.min),this.boundingBox.expandByPoint(Mn),Mn.addVectors(this.boundingBox.max,li.max),this.boundingBox.expandByPoint(Mn)):(this.boundingBox.expandByPoint(li.min),this.boundingBox.expandByPoint(li.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new An);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new F,1/0);return}if(e){const n=this.boundingSphere.center;if(li.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const c=t[s];_a.setFromBufferAttribute(c),this.morphTargetsRelative?(Mn.addVectors(li.min,_a.min),li.expandByPoint(Mn),Mn.addVectors(li.max,_a.max),li.expandByPoint(Mn)):(li.expandByPoint(_a.min),li.expandByPoint(_a.max))}li.getCenter(n);let i=0;for(let s=0,a=e.count;s<a;s++)Mn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(Mn));if(t)for(let s=0,a=t.length;s<a;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,d=c.count;h<d;h++)Mn.fromBufferAttribute(c,h),u&&(po.fromBufferAttribute(e,h),Mn.add(po)),i=Math.max(i,n.distanceToSquared(Mn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Vt(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),c=[],u=[];for(let U=0;U<n.count;U++)c[U]=new F,u[U]=new F;const h=new F,d=new F,p=new F,m=new fe,_=new fe,y=new fe,S=new F,x=new F;function g(U,R,b){h.fromBufferAttribute(n,U),d.fromBufferAttribute(n,R),p.fromBufferAttribute(n,b),m.fromBufferAttribute(s,U),_.fromBufferAttribute(s,R),y.fromBufferAttribute(s,b),d.sub(h),p.sub(h),_.sub(m),y.sub(m);const O=1/(_.x*y.y-y.x*_.y);isFinite(O)&&(S.copy(d).multiplyScalar(y.y).addScaledVector(p,-_.y).multiplyScalar(O),x.copy(p).multiplyScalar(_.x).addScaledVector(d,-y.x).multiplyScalar(O),c[U].add(S),c[R].add(S),c[b].add(S),u[U].add(x),u[R].add(x),u[b].add(x))}let E=this.groups;E.length===0&&(E=[{start:0,count:e.count}]);for(let U=0,R=E.length;U<R;++U){const b=E[U],O=b.start,q=b.count;for(let Y=O,Q=O+q;Y<Q;Y+=3)g(e.getX(Y+0),e.getX(Y+1),e.getX(Y+2))}const w=new F,T=new F,I=new F,C=new F;function L(U){I.fromBufferAttribute(i,U),C.copy(I);const R=c[U];w.copy(R),w.sub(I.multiplyScalar(I.dot(R))).normalize(),T.crossVectors(C,R);const O=T.dot(u[U])<0?-1:1;a.setXYZW(U,w.x,w.y,w.z,O)}for(let U=0,R=E.length;U<R;++U){const b=E[U],O=b.start,q=b.count;for(let Y=O,Q=O+q;Y<Q;Y+=3)L(e.getX(Y+0)),L(e.getX(Y+1)),L(e.getX(Y+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Vt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,_=n.count;m<_;m++)n.setXYZ(m,0,0,0);const i=new F,s=new F,a=new F,c=new F,u=new F,h=new F,d=new F,p=new F;if(e)for(let m=0,_=e.count;m<_;m+=3){const y=e.getX(m+0),S=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,S),a.fromBufferAttribute(t,x),d.subVectors(a,s),p.subVectors(i,s),d.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,S),h.fromBufferAttribute(n,x),c.add(d),u.add(d),h.add(d),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(S,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,_=t.count;m<_;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),a.fromBufferAttribute(t,m+2),d.subVectors(a,s),p.subVectors(i,s),d.cross(p),n.setXYZ(m+0,d.x,d.y,d.z),n.setXYZ(m+1,d.x,d.y,d.z),n.setXYZ(m+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Mn.fromBufferAttribute(e,t),Mn.normalize(),e.setXYZ(t,Mn.x,Mn.y,Mn.z)}toNonIndexed(){function e(c,u){const h=c.array,d=c.itemSize,p=c.normalized,m=new h.constructor(u.length*d);let _=0,y=0;for(let S=0,x=u.length;S<x;S++){c.isInterleavedBufferAttribute?_=u[S]*c.data.stride+c.offset:_=u[S]*d;for(let g=0;g<d;g++)m[y++]=h[_++]}return new Vt(m,d,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new _t,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,p=h.length;d<p;d++){const m=h[d],_=e(m,n);u.push(_)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let c=0,u=a.length;c<u;c++){const h=a[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],d=[];for(let p=0,m=h.length;p<m;p++){const _=h[p];d.push(_.toJSON(e.data))}d.length>0&&(i[u]=d,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const d=i[h];this.setAttribute(h,d.clone(t))}const s=e.morphAttributes;for(const h in s){const d=[],p=s[h];for(let m=0,_=p.length;m<_;m++)d.push(p[m].clone(t));this.morphAttributes[h]=d}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let h=0,d=a.length;h<d;h++){const p=a[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const o_=new rt,cs=new Xo,Ic=new An,a_=new F,Lc=new F,Dc=new F,Uc=new F,ff=new F,Oc=new F,l_=new F,Nc=new F;class un extends Lt{constructor(e=new _t,t=new Zr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){Oc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const d=c[u],p=s[u];d!==0&&(ff.fromBufferAttribute(p,e),a?Oc.addScaledVector(ff,d):Oc.addScaledVector(ff.sub(t),d))}t.add(Oc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Ic.copy(n.boundingSphere),Ic.applyMatrix4(s),cs.copy(e.ray).recast(e.near),!(Ic.containsPoint(cs.origin)===!1&&(cs.intersectSphere(Ic,a_)===null||cs.origin.distanceToSquared(a_)>(e.far-e.near)**2))&&(o_.copy(s).invert(),cs.copy(e.ray).applyMatrix4(o_),!(n.boundingBox!==null&&cs.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,cs)))}_computeIntersections(e,t,n){let i;const s=this.geometry,a=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,d=s.attributes.uv1,p=s.attributes.normal,m=s.groups,_=s.drawRange;if(c!==null)if(Array.isArray(a))for(let y=0,S=m.length;y<S;y++){const x=m[y],g=a[x.materialIndex],E=Math.max(x.start,_.start),w=Math.min(c.count,Math.min(x.start+x.count,_.start+_.count));for(let T=E,I=w;T<I;T+=3){const C=c.getX(T),L=c.getX(T+1),U=c.getX(T+2);i=Fc(this,g,e,n,h,d,p,C,L,U),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,_.start),S=Math.min(c.count,_.start+_.count);for(let x=y,g=S;x<g;x+=3){const E=c.getX(x),w=c.getX(x+1),T=c.getX(x+2);i=Fc(this,a,e,n,h,d,p,E,w,T),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(a))for(let y=0,S=m.length;y<S;y++){const x=m[y],g=a[x.materialIndex],E=Math.max(x.start,_.start),w=Math.min(u.count,Math.min(x.start+x.count,_.start+_.count));for(let T=E,I=w;T<I;T+=3){const C=T,L=T+1,U=T+2;i=Fc(this,g,e,n,h,d,p,C,L,U),i&&(i.faceIndex=Math.floor(T/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,_.start),S=Math.min(u.count,_.start+_.count);for(let x=y,g=S;x<g;x+=3){const E=x,w=x+1,T=x+2;i=Fc(this,a,e,n,h,d,p,E,w,T),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function BM(r,e,t,n,i,s,a,c){let u;if(e.side===Gn?u=n.intersectTriangle(a,s,i,!0,c):u=n.intersectTriangle(i,s,a,e.side===xr,c),u===null)return null;Nc.copy(c),Nc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(Nc);return h<t.near||h>t.far?null:{distance:h,point:Nc.clone(),object:r}}function Fc(r,e,t,n,i,s,a,c,u,h){r.getVertexPosition(c,Lc),r.getVertexPosition(u,Dc),r.getVertexPosition(h,Uc);const d=BM(r,e,t,n,Lc,Dc,Uc,l_);if(d){const p=new F;ei.getBarycoord(l_,Lc,Dc,Uc,p),i&&(d.uv=ei.getInterpolatedAttribute(i,c,u,h,p,new fe)),s&&(d.uv1=ei.getInterpolatedAttribute(s,c,u,h,p,new fe)),a&&(d.normal=ei.getInterpolatedAttribute(a,c,u,h,p,new F),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const m={a:c,b:u,c:h,normal:new F,materialIndex:0};ei.getNormal(Lc,Dc,Uc,m.normal),d.face=m,d.barycoord=p}return d}class ks extends _t{constructor(e=1,t=1,n=1,i=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:a};const c=this;i=Math.floor(i),s=Math.floor(s),a=Math.floor(a);const u=[],h=[],d=[],p=[];let m=0,_=0;y("z","y","x",-1,-1,n,t,e,a,s,0),y("z","y","x",1,-1,n,t,-e,a,s,1),y("x","z","y",1,1,e,n,t,i,a,2),y("x","z","y",1,-1,e,n,-t,i,a,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new Ze(h,3)),this.setAttribute("normal",new Ze(d,3)),this.setAttribute("uv",new Ze(p,2));function y(S,x,g,E,w,T,I,C,L,U,R){const b=T/L,O=I/U,q=T/2,Y=I/2,Q=C/2,ae=L+1,$=U+1;let pe=0,z=0;const Z=new F;for(let J=0;J<$;J++){const re=J*O-Y;for(let xe=0;xe<ae;xe++){const Be=xe*b-q;Z[S]=Be*E,Z[x]=re*w,Z[g]=Q,h.push(Z.x,Z.y,Z.z),Z[S]=0,Z[x]=0,Z[g]=C>0?1:-1,d.push(Z.x,Z.y,Z.z),p.push(xe/L),p.push(1-J/U),pe+=1}}for(let J=0;J<U;J++)for(let re=0;re<L;re++){const xe=m+re+ae*J,Be=m+re+ae*(J+1),ne=m+(re+1)+ae*(J+1),ge=m+(re+1)+ae*J;u.push(xe,Be,ge),u.push(Be,ne,ge),z+=6}c.addGroup(_,z,R),_+=z,m+=pe}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ks(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function ko(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Hn(r){const e={};for(let t=0;t<r.length;t++){const n=ko(r[t]);for(const i in n)e[i]=n[i]}return e}function kM(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function Zv(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Rt.workingColorSpace}const Jv={clone:ko,merge:Hn};var HM=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,VM=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Di extends bn{static get type(){return"ShaderMaterial"}constructor(e){super(),this.isShaderMaterial=!0,this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=HM,this.fragmentShader=VM,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ko(e.uniforms),this.uniformsGroups=kM(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class dl extends Lt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new rt,this.projectionMatrix=new rt,this.projectionMatrixInverse=new rt,this.coordinateSystem=Ki}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const kr=new F,c_=new fe,u_=new fe;class En extends dl{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Bo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Is*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Bo*2*Math.atan(Math.tan(Is*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){kr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(kr.x,kr.y).multiplyScalar(-e/kr.z),kr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(kr.x,kr.y).multiplyScalar(-e/kr.z)}getViewSize(e,t){return this.getViewBounds(e,c_,u_),t.subVectors(u_,c_)}setViewOffset(e,t,n,i,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Is*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const u=a.fullWidth,h=a.fullHeight;s+=a.offsetX*i/u,t-=a.offsetY*n/h,i*=a.width/u,n*=a.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const mo=-90,go=1;class Kv extends Lt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new En(mo,go,e,t);i.layers=this.layers,this.add(i);const s=new En(mo,go,e,t);s.layers=this.layers,this.add(s);const a=new En(mo,go,e,t);a.layers=this.layers,this.add(a);const c=new En(mo,go,e,t);c.layers=this.layers,this.add(c);const u=new En(mo,go,e,t);u.layers=this.layers,this.add(u);const h=new En(mo,go,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,a,c,u]=t;for(const h of t)this.remove(h);if(e===Ki)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===$a)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,a,c,u,h,d]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),_=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const S=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,a),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=S,e.setRenderTarget(n,5,i),e.render(t,d),e.setRenderTarget(p,m,_),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class fl extends $t{constructor(e,t,n,i,s,a,c,u,h,d){e=e!==void 0?e:[],t=t!==void 0?t:Sr,super(e,t,n,i,s,a,c,u,h,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class jv extends Li{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new fl(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:pn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new ks(5,5,5),s=new Di({name:"CubemapFromEquirect",uniforms:ko(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Gn,blending:vr});s.uniforms.tEquirect.value=t;const a=new un(i,s),c=t.minFilter;return t.minFilter===Ji&&(t.minFilter=pn),new Kv(1,10,this).update(e,a),t.minFilter=c,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(s)}}const pf=new F,GM=new F,WM=new mt;class Gr{constructor(e=new F(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=pf.subVectors(n,t).cross(GM.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(pf),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||WM.getNormalMatrix(e),i=this.coplanarPoint(pf).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const us=new An,zc=new F;class pl{constructor(e=new Gr,t=new Gr,n=new Gr,i=new Gr,s=new Gr,a=new Gr){this.planes=[e,t,n,i,s,a]}set(e,t,n,i,s,a){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Ki){const n=this.planes,i=e.elements,s=i[0],a=i[1],c=i[2],u=i[3],h=i[4],d=i[5],p=i[6],m=i[7],_=i[8],y=i[9],S=i[10],x=i[11],g=i[12],E=i[13],w=i[14],T=i[15];if(n[0].setComponents(u-s,m-h,x-_,T-g).normalize(),n[1].setComponents(u+s,m+h,x+_,T+g).normalize(),n[2].setComponents(u+a,m+d,x+y,T+E).normalize(),n[3].setComponents(u-a,m-d,x-y,T-E).normalize(),n[4].setComponents(u-c,m-p,x-S,T-w).normalize(),t===Ki)n[5].setComponents(u+c,m+p,x+S,T+w).normalize();else if(t===$a)n[5].setComponents(c,p,S,w).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),us.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),us.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(us)}intersectsSprite(e){return us.center.set(0,0,0),us.radius=.7071067811865476,us.applyMatrix4(e.matrixWorld),this.intersectsSphere(us)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(zc.x=i.normal.x>0?e.max.x:e.min.x,zc.y=i.normal.y>0?e.max.y:e.min.y,zc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(zc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Qv(){let r=null,e=!1,t=null,n=null;function i(s,a){t(s,a),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function XM(r){const e=new WeakMap;function t(c,u){const h=c.array,d=c.usage,p=h.byteLength,m=r.createBuffer();r.bindBuffer(u,m),r.bufferData(u,h,d),c.onUploadCallback();let _;if(h instanceof Float32Array)_=r.FLOAT;else if(h instanceof Uint16Array)c.isFloat16BufferAttribute?_=r.HALF_FLOAT:_=r.UNSIGNED_SHORT;else if(h instanceof Int16Array)_=r.SHORT;else if(h instanceof Uint32Array)_=r.UNSIGNED_INT;else if(h instanceof Int32Array)_=r.INT;else if(h instanceof Int8Array)_=r.BYTE;else if(h instanceof Uint8Array)_=r.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)_=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:m,type:_,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version,size:p}}function n(c,u,h){const d=u.array,p=u.updateRanges;if(r.bindBuffer(h,c),p.length===0)r.bufferSubData(h,0,d);else{p.sort((_,y)=>_.start-y.start);let m=0;for(let _=1;_<p.length;_++){const y=p[m],S=p[_];S.start<=y.start+y.count+1?y.count=Math.max(y.count,S.start+S.count-y.start):(++m,p[m]=S)}p.length=m+1;for(let _=0,y=p.length;_<y;_++){const S=p[_];r.bufferSubData(h,S.start*d.BYTES_PER_ELEMENT,d,S.start,S.count)}u.clearUpdateRanges()}u.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=e.get(c);u&&(r.deleteBuffer(u.buffer),e.delete(c))}function a(c,u){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const d=e.get(c);(!d||d.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const h=e.get(c);if(h===void 0)e.set(c,t(c,u));else if(h.version<c.version){if(h.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(h.buffer,c,u),h.version=c.version}}return{get:i,remove:s,update:a}}class Yo extends _t{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,a=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,d=u+1,p=e/c,m=t/u,_=[],y=[],S=[],x=[];for(let g=0;g<d;g++){const E=g*m-a;for(let w=0;w<h;w++){const T=w*p-s;y.push(T,-E,0),S.push(0,0,1),x.push(w/c),x.push(1-g/u)}}for(let g=0;g<u;g++)for(let E=0;E<c;E++){const w=E+h*g,T=E+h*(g+1),I=E+1+h*(g+1),C=E+1+h*g;_.push(w,T,C),_.push(T,I,C)}this.setIndex(_),this.setAttribute("position",new Ze(y,3)),this.setAttribute("normal",new Ze(S,3)),this.setAttribute("uv",new Ze(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Yo(e.width,e.height,e.widthSegments,e.heightSegments)}}var YM=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,qM=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,ZM=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,JM=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,KM=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,jM=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,QM=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,$M=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,eE=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,tE=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,nE=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,iE=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,rE=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,sE=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,oE=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,aE=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,lE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,cE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,uE=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,hE=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,dE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,fE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,pE=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,mE=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,gE=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,_E=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,vE=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,yE=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,xE=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,SE=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,ME="gl_FragColor = linearToOutputTexel( gl_FragColor );",EE=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,TE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,wE=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,AE=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,bE=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,CE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,RE=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,PE=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,IE=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,LE=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,DE=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,UE=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,OE=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,NE=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,FE=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,zE=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,BE=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,kE=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,HE=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,VE=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,GE=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,WE=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,XE=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,YE=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,qE=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,ZE=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,JE=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,KE=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,jE=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,QE=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,$E=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,e1=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,t1=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,n1=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,i1=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,r1=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,s1=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,o1=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,a1=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,l1=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,c1=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,u1=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,h1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,d1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,f1=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,p1=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,m1=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,g1=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,_1=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,v1=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,y1=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,x1=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,S1=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,M1=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,E1=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,T1=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,w1=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,A1=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,b1=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,C1=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,R1=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,P1=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,I1=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,L1=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,D1=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,U1=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,O1=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,N1=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,F1=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,z1=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,B1=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,k1=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,H1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,V1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,G1=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,W1=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const X1=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Y1=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,q1=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Z1=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,J1=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,K1=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,j1=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Q1=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,$1=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,eT=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,tT=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,nT=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,iT=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,rT=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,sT=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,oT=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aT=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lT=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cT=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,uT=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hT=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,dT=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,fT=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,pT=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,mT=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,gT=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,_T=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,vT=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yT=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,xT=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,ST=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,MT=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ET=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,TT=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,xt={alphahash_fragment:YM,alphahash_pars_fragment:qM,alphamap_fragment:ZM,alphamap_pars_fragment:JM,alphatest_fragment:KM,alphatest_pars_fragment:jM,aomap_fragment:QM,aomap_pars_fragment:$M,batching_pars_vertex:eE,batching_vertex:tE,begin_vertex:nE,beginnormal_vertex:iE,bsdfs:rE,iridescence_fragment:sE,bumpmap_pars_fragment:oE,clipping_planes_fragment:aE,clipping_planes_pars_fragment:lE,clipping_planes_pars_vertex:cE,clipping_planes_vertex:uE,color_fragment:hE,color_pars_fragment:dE,color_pars_vertex:fE,color_vertex:pE,common:mE,cube_uv_reflection_fragment:gE,defaultnormal_vertex:_E,displacementmap_pars_vertex:vE,displacementmap_vertex:yE,emissivemap_fragment:xE,emissivemap_pars_fragment:SE,colorspace_fragment:ME,colorspace_pars_fragment:EE,envmap_fragment:TE,envmap_common_pars_fragment:wE,envmap_pars_fragment:AE,envmap_pars_vertex:bE,envmap_physical_pars_fragment:zE,envmap_vertex:CE,fog_vertex:RE,fog_pars_vertex:PE,fog_fragment:IE,fog_pars_fragment:LE,gradientmap_pars_fragment:DE,lightmap_pars_fragment:UE,lights_lambert_fragment:OE,lights_lambert_pars_fragment:NE,lights_pars_begin:FE,lights_toon_fragment:BE,lights_toon_pars_fragment:kE,lights_phong_fragment:HE,lights_phong_pars_fragment:VE,lights_physical_fragment:GE,lights_physical_pars_fragment:WE,lights_fragment_begin:XE,lights_fragment_maps:YE,lights_fragment_end:qE,logdepthbuf_fragment:ZE,logdepthbuf_pars_fragment:JE,logdepthbuf_pars_vertex:KE,logdepthbuf_vertex:jE,map_fragment:QE,map_pars_fragment:$E,map_particle_fragment:e1,map_particle_pars_fragment:t1,metalnessmap_fragment:n1,metalnessmap_pars_fragment:i1,morphinstance_vertex:r1,morphcolor_vertex:s1,morphnormal_vertex:o1,morphtarget_pars_vertex:a1,morphtarget_vertex:l1,normal_fragment_begin:c1,normal_fragment_maps:u1,normal_pars_fragment:h1,normal_pars_vertex:d1,normal_vertex:f1,normalmap_pars_fragment:p1,clearcoat_normal_fragment_begin:m1,clearcoat_normal_fragment_maps:g1,clearcoat_pars_fragment:_1,iridescence_pars_fragment:v1,opaque_fragment:y1,packing:x1,premultiplied_alpha_fragment:S1,project_vertex:M1,dithering_fragment:E1,dithering_pars_fragment:T1,roughnessmap_fragment:w1,roughnessmap_pars_fragment:A1,shadowmap_pars_fragment:b1,shadowmap_pars_vertex:C1,shadowmap_vertex:R1,shadowmask_pars_fragment:P1,skinbase_vertex:I1,skinning_pars_vertex:L1,skinning_vertex:D1,skinnormal_vertex:U1,specularmap_fragment:O1,specularmap_pars_fragment:N1,tonemapping_fragment:F1,tonemapping_pars_fragment:z1,transmission_fragment:B1,transmission_pars_fragment:k1,uv_pars_fragment:H1,uv_pars_vertex:V1,uv_vertex:G1,worldpos_vertex:W1,background_vert:X1,background_frag:Y1,backgroundCube_vert:q1,backgroundCube_frag:Z1,cube_vert:J1,cube_frag:K1,depth_vert:j1,depth_frag:Q1,distanceRGBA_vert:$1,distanceRGBA_frag:eT,equirect_vert:tT,equirect_frag:nT,linedashed_vert:iT,linedashed_frag:rT,meshbasic_vert:sT,meshbasic_frag:oT,meshlambert_vert:aT,meshlambert_frag:lT,meshmatcap_vert:cT,meshmatcap_frag:uT,meshnormal_vert:hT,meshnormal_frag:dT,meshphong_vert:fT,meshphong_frag:pT,meshphysical_vert:mT,meshphysical_frag:gT,meshtoon_vert:_T,meshtoon_frag:vT,points_vert:yT,points_frag:xT,shadow_vert:ST,shadow_frag:MT,sprite_vert:ET,sprite_frag:TT},Ae={common:{diffuse:{value:new Ne(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new mt},alphaMap:{value:null},alphaMapTransform:{value:new mt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new mt}},envmap:{envMap:{value:null},envMapRotation:{value:new mt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new mt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new mt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new mt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new mt},normalScale:{value:new fe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new mt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new mt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new mt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new mt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ne(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ne(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new mt},alphaTest:{value:0},uvTransform:{value:new mt}},sprite:{diffuse:{value:new Ne(16777215)},opacity:{value:1},center:{value:new fe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new mt},alphaMap:{value:null},alphaMapTransform:{value:new mt},alphaTest:{value:0}}},Pi={basic:{uniforms:Hn([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.fog]),vertexShader:xt.meshbasic_vert,fragmentShader:xt.meshbasic_frag},lambert:{uniforms:Hn([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,Ae.lights,{emissive:{value:new Ne(0)}}]),vertexShader:xt.meshlambert_vert,fragmentShader:xt.meshlambert_frag},phong:{uniforms:Hn([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,Ae.lights,{emissive:{value:new Ne(0)},specular:{value:new Ne(1118481)},shininess:{value:30}}]),vertexShader:xt.meshphong_vert,fragmentShader:xt.meshphong_frag},standard:{uniforms:Hn([Ae.common,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.roughnessmap,Ae.metalnessmap,Ae.fog,Ae.lights,{emissive:{value:new Ne(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:xt.meshphysical_vert,fragmentShader:xt.meshphysical_frag},toon:{uniforms:Hn([Ae.common,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.gradientmap,Ae.fog,Ae.lights,{emissive:{value:new Ne(0)}}]),vertexShader:xt.meshtoon_vert,fragmentShader:xt.meshtoon_frag},matcap:{uniforms:Hn([Ae.common,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,{matcap:{value:null}}]),vertexShader:xt.meshmatcap_vert,fragmentShader:xt.meshmatcap_frag},points:{uniforms:Hn([Ae.points,Ae.fog]),vertexShader:xt.points_vert,fragmentShader:xt.points_frag},dashed:{uniforms:Hn([Ae.common,Ae.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:xt.linedashed_vert,fragmentShader:xt.linedashed_frag},depth:{uniforms:Hn([Ae.common,Ae.displacementmap]),vertexShader:xt.depth_vert,fragmentShader:xt.depth_frag},normal:{uniforms:Hn([Ae.common,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,{opacity:{value:1}}]),vertexShader:xt.meshnormal_vert,fragmentShader:xt.meshnormal_frag},sprite:{uniforms:Hn([Ae.sprite,Ae.fog]),vertexShader:xt.sprite_vert,fragmentShader:xt.sprite_frag},background:{uniforms:{uvTransform:{value:new mt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:xt.background_vert,fragmentShader:xt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new mt}},vertexShader:xt.backgroundCube_vert,fragmentShader:xt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:xt.cube_vert,fragmentShader:xt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:xt.equirect_vert,fragmentShader:xt.equirect_frag},distanceRGBA:{uniforms:Hn([Ae.common,Ae.displacementmap,{referencePosition:{value:new F},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:xt.distanceRGBA_vert,fragmentShader:xt.distanceRGBA_frag},shadow:{uniforms:Hn([Ae.lights,Ae.fog,{color:{value:new Ne(0)},opacity:{value:1}}]),vertexShader:xt.shadow_vert,fragmentShader:xt.shadow_frag}};Pi.physical={uniforms:Hn([Pi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new mt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new mt},clearcoatNormalScale:{value:new fe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new mt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new mt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new mt},sheen:{value:0},sheenColor:{value:new Ne(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new mt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new mt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new mt},transmissionSamplerSize:{value:new fe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new mt},attenuationDistance:{value:0},attenuationColor:{value:new Ne(0)},specularColor:{value:new Ne(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new mt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new mt},anisotropyVector:{value:new fe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new mt}}]),vertexShader:xt.meshphysical_vert,fragmentShader:xt.meshphysical_frag};const Bc={r:0,b:0,g:0},hs=new ui,wT=new rt;function AT(r,e,t,n,i,s,a){const c=new Ne(0);let u=s===!0?0:1,h,d,p=null,m=0,_=null;function y(E){let w=E.isScene===!0?E.background:null;return w&&w.isTexture&&(w=(E.backgroundBlurriness>0?t:e).get(w)),w}function S(E){let w=!1;const T=y(E);T===null?g(c,u):T&&T.isColor&&(g(T,1),w=!0);const I=r.xr.getEnvironmentBlendMode();I==="additive"?n.buffers.color.setClear(0,0,0,1,a):I==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(r.autoClear||w)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil))}function x(E,w){const T=y(w);T&&(T.isCubeTexture||T.mapping===Go)?(d===void 0&&(d=new un(new ks(1,1,1),new Di({name:"BackgroundCubeMaterial",uniforms:ko(Pi.backgroundCube.uniforms),vertexShader:Pi.backgroundCube.vertexShader,fragmentShader:Pi.backgroundCube.fragmentShader,side:Gn,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(I,C,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(d)),hs.copy(w.backgroundRotation),hs.x*=-1,hs.y*=-1,hs.z*=-1,T.isCubeTexture&&T.isRenderTargetTexture===!1&&(hs.y*=-1,hs.z*=-1),d.material.uniforms.envMap.value=T,d.material.uniforms.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=w.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=w.backgroundIntensity,d.material.uniforms.backgroundRotation.value.setFromMatrix4(wT.makeRotationFromEuler(hs)),d.material.toneMapped=Rt.getTransfer(T.colorSpace)!==Bt,(p!==T||m!==T.version||_!==r.toneMapping)&&(d.material.needsUpdate=!0,p=T,m=T.version,_=r.toneMapping),d.layers.enableAll(),E.unshift(d,d.geometry,d.material,0,0,null)):T&&T.isTexture&&(h===void 0&&(h=new un(new Yo(2,2),new Di({name:"BackgroundMaterial",uniforms:ko(Pi.background.uniforms),vertexShader:Pi.background.vertexShader,fragmentShader:Pi.background.fragmentShader,side:xr,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=T,h.material.uniforms.backgroundIntensity.value=w.backgroundIntensity,h.material.toneMapped=Rt.getTransfer(T.colorSpace)!==Bt,T.matrixAutoUpdate===!0&&T.updateMatrix(),h.material.uniforms.uvTransform.value.copy(T.matrix),(p!==T||m!==T.version||_!==r.toneMapping)&&(h.material.needsUpdate=!0,p=T,m=T.version,_=r.toneMapping),h.layers.enableAll(),E.unshift(h,h.geometry,h.material,0,0,null))}function g(E,w){E.getRGB(Bc,Zv(r)),n.buffers.color.setClear(Bc.r,Bc.g,Bc.b,w,a)}return{getClearColor:function(){return c},setClearColor:function(E,w=1){c.set(E),u=w,g(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(E){u=E,g(c,u)},render:S,addToRenderList:x}}function bT(r,e){const t=r.getParameter(r.MAX_VERTEX_ATTRIBS),n={},i=m(null);let s=i,a=!1;function c(b,O,q,Y,Q){let ae=!1;const $=p(Y,q,O);s!==$&&(s=$,h(s.object)),ae=_(b,Y,q,Q),ae&&y(b,Y,q,Q),Q!==null&&e.update(Q,r.ELEMENT_ARRAY_BUFFER),(ae||a)&&(a=!1,T(b,O,q,Y),Q!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(Q).buffer))}function u(){return r.createVertexArray()}function h(b){return r.bindVertexArray(b)}function d(b){return r.deleteVertexArray(b)}function p(b,O,q){const Y=q.wireframe===!0;let Q=n[b.id];Q===void 0&&(Q={},n[b.id]=Q);let ae=Q[O.id];ae===void 0&&(ae={},Q[O.id]=ae);let $=ae[Y];return $===void 0&&($=m(u()),ae[Y]=$),$}function m(b){const O=[],q=[],Y=[];for(let Q=0;Q<t;Q++)O[Q]=0,q[Q]=0,Y[Q]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:O,enabledAttributes:q,attributeDivisors:Y,object:b,attributes:{},index:null}}function _(b,O,q,Y){const Q=s.attributes,ae=O.attributes;let $=0;const pe=q.getAttributes();for(const z in pe)if(pe[z].location>=0){const J=Q[z];let re=ae[z];if(re===void 0&&(z==="instanceMatrix"&&b.instanceMatrix&&(re=b.instanceMatrix),z==="instanceColor"&&b.instanceColor&&(re=b.instanceColor)),J===void 0||J.attribute!==re||re&&J.data!==re.data)return!0;$++}return s.attributesNum!==$||s.index!==Y}function y(b,O,q,Y){const Q={},ae=O.attributes;let $=0;const pe=q.getAttributes();for(const z in pe)if(pe[z].location>=0){let J=ae[z];J===void 0&&(z==="instanceMatrix"&&b.instanceMatrix&&(J=b.instanceMatrix),z==="instanceColor"&&b.instanceColor&&(J=b.instanceColor));const re={};re.attribute=J,J&&J.data&&(re.data=J.data),Q[z]=re,$++}s.attributes=Q,s.attributesNum=$,s.index=Y}function S(){const b=s.newAttributes;for(let O=0,q=b.length;O<q;O++)b[O]=0}function x(b){g(b,0)}function g(b,O){const q=s.newAttributes,Y=s.enabledAttributes,Q=s.attributeDivisors;q[b]=1,Y[b]===0&&(r.enableVertexAttribArray(b),Y[b]=1),Q[b]!==O&&(r.vertexAttribDivisor(b,O),Q[b]=O)}function E(){const b=s.newAttributes,O=s.enabledAttributes;for(let q=0,Y=O.length;q<Y;q++)O[q]!==b[q]&&(r.disableVertexAttribArray(q),O[q]=0)}function w(b,O,q,Y,Q,ae,$){$===!0?r.vertexAttribIPointer(b,O,q,Q,ae):r.vertexAttribPointer(b,O,q,Y,Q,ae)}function T(b,O,q,Y){S();const Q=Y.attributes,ae=q.getAttributes(),$=O.defaultAttributeValues;for(const pe in ae){const z=ae[pe];if(z.location>=0){let Z=Q[pe];if(Z===void 0&&(pe==="instanceMatrix"&&b.instanceMatrix&&(Z=b.instanceMatrix),pe==="instanceColor"&&b.instanceColor&&(Z=b.instanceColor)),Z!==void 0){const J=Z.normalized,re=Z.itemSize,xe=e.get(Z);if(xe===void 0)continue;const Be=xe.buffer,ne=xe.type,ge=xe.bytesPerElement,we=ne===r.INT||ne===r.UNSIGNED_INT||Z.gpuType===fh;if(Z.isInterleavedBufferAttribute){const ve=Z.data,Qe=ve.stride,st=Z.offset;if(ve.isInstancedInterleavedBuffer){for(let $e=0;$e<z.locationSize;$e++)g(z.location+$e,ve.meshPerAttribute);b.isInstancedMesh!==!0&&Y._maxInstanceCount===void 0&&(Y._maxInstanceCount=ve.meshPerAttribute*ve.count)}else for(let $e=0;$e<z.locationSize;$e++)x(z.location+$e);r.bindBuffer(r.ARRAY_BUFFER,Be);for(let $e=0;$e<z.locationSize;$e++)w(z.location+$e,re/z.locationSize,ne,J,Qe*ge,(st+re/z.locationSize*$e)*ge,we)}else{if(Z.isInstancedBufferAttribute){for(let ve=0;ve<z.locationSize;ve++)g(z.location+ve,Z.meshPerAttribute);b.isInstancedMesh!==!0&&Y._maxInstanceCount===void 0&&(Y._maxInstanceCount=Z.meshPerAttribute*Z.count)}else for(let ve=0;ve<z.locationSize;ve++)x(z.location+ve);r.bindBuffer(r.ARRAY_BUFFER,Be);for(let ve=0;ve<z.locationSize;ve++)w(z.location+ve,re/z.locationSize,ne,J,re*ge,re/z.locationSize*ve*ge,we)}}else if($!==void 0){const J=$[pe];if(J!==void 0)switch(J.length){case 2:r.vertexAttrib2fv(z.location,J);break;case 3:r.vertexAttrib3fv(z.location,J);break;case 4:r.vertexAttrib4fv(z.location,J);break;default:r.vertexAttrib1fv(z.location,J)}}}}E()}function I(){U();for(const b in n){const O=n[b];for(const q in O){const Y=O[q];for(const Q in Y)d(Y[Q].object),delete Y[Q];delete O[q]}delete n[b]}}function C(b){if(n[b.id]===void 0)return;const O=n[b.id];for(const q in O){const Y=O[q];for(const Q in Y)d(Y[Q].object),delete Y[Q];delete O[q]}delete n[b.id]}function L(b){for(const O in n){const q=n[O];if(q[b.id]===void 0)continue;const Y=q[b.id];for(const Q in Y)d(Y[Q].object),delete Y[Q];delete q[b.id]}}function U(){R(),a=!0,s!==i&&(s=i,h(s.object))}function R(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:U,resetDefaultState:R,dispose:I,releaseStatesOfGeometry:C,releaseStatesOfProgram:L,initAttributes:S,enableAttribute:x,disableUnusedAttributes:E}}function CT(r,e,t){let n;function i(h){n=h}function s(h,d){r.drawArrays(n,h,d),t.update(d,n,1)}function a(h,d,p){p!==0&&(r.drawArraysInstanced(n,h,d,p),t.update(d,n,p))}function c(h,d,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,h,0,d,0,p);let _=0;for(let y=0;y<p;y++)_+=d[y];t.update(_,n,1)}function u(h,d,p,m){if(p===0)return;const _=e.get("WEBGL_multi_draw");if(_===null)for(let y=0;y<h.length;y++)a(h[y],d[y],m[y]);else{_.multiDrawArraysInstancedWEBGL(n,h,0,d,0,m,0,p);let y=0;for(let S=0;S<p;S++)y+=d[S]*m[S];t.update(y,n,1)}}this.setMode=i,this.render=s,this.renderInstances=a,this.renderMultiDraw=c,this.renderMultiDrawInstances=u}function RT(r,e,t,n){let i;function s(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const L=e.get("EXT_texture_filter_anisotropic");i=r.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function a(L){return!(L!==On&&n.convert(L)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(L){const U=L===Wo&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(L!==Ii&&n.convert(L)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&L!==ti&&!U)}function u(L){if(L==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";L="mediump"}return L==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let h=t.precision!==void 0?t.precision:"highp";const d=u(h);d!==h&&(console.warn("THREE.WebGLRenderer:",h,"not supported, using",d,"instead."),h=d);const p=t.logarithmicDepthBuffer===!0,m=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),_=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),y=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),S=r.getParameter(r.MAX_TEXTURE_SIZE),x=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),g=r.getParameter(r.MAX_VERTEX_ATTRIBS),E=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),w=r.getParameter(r.MAX_VARYING_VECTORS),T=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),I=y>0,C=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:u,textureFormatReadable:a,textureTypeReadable:c,precision:h,logarithmicDepthBuffer:p,reverseDepthBuffer:m,maxTextures:_,maxVertexTextures:y,maxTextureSize:S,maxCubemapSize:x,maxAttributes:g,maxVertexUniforms:E,maxVaryings:w,maxFragmentUniforms:T,vertexTextures:I,maxSamples:C}}function PT(r){const e=this;let t=null,n=0,i=!1,s=!1;const a=new Gr,c=new mt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const _=p.length!==0||m||n!==0||i;return i=m,n=p.length,_},this.beginShadows=function(){s=!0,d(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=d(p,m,0)},this.setState=function(p,m,_){const y=p.clippingPlanes,S=p.clipIntersection,x=p.clipShadows,g=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?d(null):h();else{const E=s?0:n,w=E*4;let T=g.clippingState||null;u.value=T,T=d(y,m,w,_);for(let I=0;I!==w;++I)T[I]=t[I];g.clippingState=T,this.numIntersection=S?this.numPlanes:0,this.numPlanes+=E}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(p,m,_,y){const S=p!==null?p.length:0;let x=null;if(S!==0){if(x=u.value,y!==!0||x===null){const g=_+S*4,E=m.matrixWorldInverse;c.getNormalMatrix(E),(x===null||x.length<g)&&(x=new Float32Array(g));for(let w=0,T=_;w!==S;++w,T+=4)a.copy(p[w]).applyMatrix4(E,c),a.normal.toArray(x,T),x[T+3]=a.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=S,e.numIntersection=0,x}}function IT(r){let e=new WeakMap;function t(a,c){return c===Ya?a.mapping=Sr:c===qa&&(a.mapping=Xr),a}function n(a){if(a&&a.isTexture){const c=a.mapping;if(c===Ya||c===qa)if(e.has(a)){const u=e.get(a).texture;return t(u,a.mapping)}else{const u=a.image;if(u&&u.height>0){const h=new jv(u.height);return h.fromEquirectangularTexture(r,a),e.set(a,h),a.addEventListener("dispose",i),t(h.texture,a.mapping)}else return null}}return a}function i(a){const c=a.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class ml extends dl{constructor(e=-1,t=1,n=1,i=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,a=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,a=s+h*this.view.width,c-=d*this.view.offsetY,u=c-d*this.view.height}this.projectionMatrix.makeOrthographic(s,a,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Do=4,h_=[.125,.215,.35,.446,.526,.582],Ts=20,mf=new ml,d_=new Ne;let gf=null,_f=0,vf=0,yf=!1;const Es=(1+Math.sqrt(5))/2,_o=1/Es,f_=[new F(-Es,_o,0),new F(Es,_o,0),new F(-_o,0,Es),new F(_o,0,Es),new F(0,Es,-_o),new F(0,Es,_o),new F(-1,1,-1),new F(1,1,-1),new F(-1,1,1),new F(1,1,1)];class lp{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){gf=this._renderer.getRenderTarget(),_f=this._renderer.getActiveCubeFace(),vf=this._renderer.getActiveMipmapLevel(),yf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=g_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=m_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(gf,_f,vf),this._renderer.xr.enabled=yf,e.scissorTest=!1,kc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Sr||e.mapping===Xr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),gf=this._renderer.getRenderTarget(),_f=this._renderer.getActiveCubeFace(),vf=this._renderer.getActiveMipmapLevel(),yf=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:pn,minFilter:pn,generateMipmaps:!1,type:Wo,format:On,colorSpace:Bs,depthBuffer:!1},i=p_(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=p_(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=LT(s)),this._blurMaterial=DT(s,e,t)}return i}_compileMaterial(e){const t=new un(this._lodPlanes[0],e);this._renderer.compile(t,mf)}_sceneToCubeUV(e,t,n,i){const c=new En(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,p=d.autoClear,m=d.toneMapping;d.getClearColor(d_),d.toneMapping=ji,d.autoClear=!1;const _=new Zr({name:"PMREM.Background",side:Gn,depthWrite:!1,depthTest:!1}),y=new un(new ks,_);let S=!1;const x=e.background;x?x.isColor&&(_.color.copy(x),e.background=null,S=!0):(_.color.copy(d_),S=!0);for(let g=0;g<6;g++){const E=g%3;E===0?(c.up.set(0,u[g],0),c.lookAt(h[g],0,0)):E===1?(c.up.set(0,0,u[g]),c.lookAt(0,h[g],0)):(c.up.set(0,u[g],0),c.lookAt(0,0,h[g]));const w=this._cubeSize;kc(i,E*w,g>2?w:0,w,w),d.setRenderTarget(i),S&&d.render(y,c),d.render(e,c)}y.geometry.dispose(),y.material.dispose(),d.toneMapping=m,d.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Sr||e.mapping===Xr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=g_()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=m_());const s=i?this._cubemapMaterial:this._equirectMaterial,a=new un(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;kc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(a,mf)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let s=1;s<i;s++){const a=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),c=f_[(i-s-1)%f_.length];this._blur(e,s-1,s,a,c)}t.autoClear=n}_blur(e,t,n,i,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",s),this._halfBlur(a,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,a,c){const u=this._renderer,h=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,p=new un(this._lodPlanes[i],h),m=h.uniforms,_=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*_):2*Math.PI/(2*Ts-1),S=s/y,x=isFinite(s)?1+Math.floor(d*S):Ts;x>Ts&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${Ts}`);const g=[];let E=0;for(let L=0;L<Ts;++L){const U=L/S,R=Math.exp(-U*U/2);g.push(R),L===0?E+=R:L<x&&(E+=2*R)}for(let L=0;L<g.length;L++)g[L]=g[L]/E;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=g,m.latitudinal.value=a==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:w}=this;m.dTheta.value=y,m.mipInt.value=w-n;const T=this._sizeLods[i],I=3*T*(i>w-Do?i-w+Do:0),C=4*(this._cubeSize-T);kc(t,I,C,3*T,2*T),u.setRenderTarget(t),u.render(p,mf)}}function LT(r){const e=[],t=[],n=[];let i=r;const s=r-Do+1+h_.length;for(let a=0;a<s;a++){const c=Math.pow(2,i);t.push(c);let u=1/c;a>r-Do?u=h_[a-r+Do-1]:a===0&&(u=0),n.push(u);const h=1/(c-2),d=-h,p=1+h,m=[d,d,p,d,p,p,d,d,p,p,d,p],_=6,y=6,S=3,x=2,g=1,E=new Float32Array(S*y*_),w=new Float32Array(x*y*_),T=new Float32Array(g*y*_);for(let C=0;C<_;C++){const L=C%3*2/3-1,U=C>2?0:-1,R=[L,U,0,L+2/3,U,0,L+2/3,U+1,0,L,U,0,L+2/3,U+1,0,L,U+1,0];E.set(R,S*y*C),w.set(m,x*y*C);const b=[C,C,C,C,C,C];T.set(b,g*y*C)}const I=new _t;I.setAttribute("position",new Vt(E,S)),I.setAttribute("uv",new Vt(w,x)),I.setAttribute("faceIndex",new Vt(T,g)),e.push(I),i>Do&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function p_(r,e,t){const n=new Li(r,e,t);return n.texture.mapping=Go,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function kc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function DT(r,e,t){const n=new Float32Array(Ts),i=new F(0,1,0);return new Di({name:"SphericalGaussianBlur",defines:{n:Ts,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Bp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:vr,depthTest:!1,depthWrite:!1})}function m_(){return new Di({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Bp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:vr,depthTest:!1,depthWrite:!1})}function g_(){return new Di({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Bp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:vr,depthTest:!1,depthWrite:!1})}function Bp(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function UT(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===Ya||u===qa,d=u===Sr||u===Xr;if(h||d){let p=e.get(c);const m=p!==void 0?p.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==m)return t===null&&(t=new lp(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),p.texture;if(p!==void 0)return p.texture;{const _=c.image;return h&&_&&_.height>0||d&&_&&i(_)?(t===null&&(t=new lp(r)),p=h?t.fromEquirectangular(c):t.fromCubemap(c),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),c.addEventListener("dispose",s),p.texture):null}}}return c}function i(c){let u=0;const h=6;for(let d=0;d<h;d++)c[d]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function OT(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const i=t(n);return i===null&&Da("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function NT(r,e,t,n){const i={},s=new WeakMap;function a(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const S=m.morphAttributes[y];for(let x=0,g=S.length;x<g;x++)e.remove(S[x])}m.removeEventListener("dispose",a),delete i[m.id];const _=s.get(m);_&&(e.remove(_),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",a),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],r.ARRAY_BUFFER);const _=p.morphAttributes;for(const y in _){const S=_[y];for(let x=0,g=S.length;x<g;x++)e.update(S[x],r.ARRAY_BUFFER)}}function h(p){const m=[],_=p.index,y=p.attributes.position;let S=0;if(_!==null){const E=_.array;S=_.version;for(let w=0,T=E.length;w<T;w+=3){const I=E[w+0],C=E[w+1],L=E[w+2];m.push(I,C,C,L,L,I)}}else if(y!==void 0){const E=y.array;S=y.version;for(let w=0,T=E.length/3-1;w<T;w+=3){const I=w+0,C=w+1,L=w+2;m.push(I,C,C,L,L,I)}}else return;const x=new(Gv(m)?zp:Fp)(m,1);x.version=S;const g=s.get(p);g&&e.remove(g),s.set(p,x)}function d(p){const m=s.get(p);if(m){const _=p.index;_!==null&&m.version<_.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:d}}function FT(r,e,t){let n;function i(m){n=m}let s,a;function c(m){s=m.type,a=m.bytesPerElement}function u(m,_){r.drawElements(n,_,s,m*a),t.update(_,n,1)}function h(m,_,y){y!==0&&(r.drawElementsInstanced(n,_,s,m*a,y),t.update(_,n,y))}function d(m,_,y){if(y===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,_,0,s,m,0,y);let x=0;for(let g=0;g<y;g++)x+=_[g];t.update(x,n,1)}function p(m,_,y,S){if(y===0)return;const x=e.get("WEBGL_multi_draw");if(x===null)for(let g=0;g<m.length;g++)h(m[g]/a,_[g],S[g]);else{x.multiDrawElementsInstancedWEBGL(n,_,0,s,m,0,S,0,y);let g=0;for(let E=0;E<y;E++)g+=_[E]*S[E];t.update(g,n,1)}}this.setMode=i,this.setIndex=c,this.render=u,this.renderInstances=h,this.renderMultiDraw=d,this.renderMultiDrawInstances=p}function zT(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,a,c){switch(t.calls++,a){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function BT(r,e,t){const n=new WeakMap,i=new Pt;function s(a,c,u){const h=a.morphTargetInfluences,d=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=d!==void 0?d.length:0;let m=n.get(c);if(m===void 0||m.count!==p){let R=function(){L.dispose(),n.delete(c),c.removeEventListener("dispose",R)};m!==void 0&&m.texture.dispose();const _=c.morphAttributes.position!==void 0,y=c.morphAttributes.normal!==void 0,S=c.morphAttributes.color!==void 0,x=c.morphAttributes.position||[],g=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let w=0;_===!0&&(w=1),y===!0&&(w=2),S===!0&&(w=3);let T=c.attributes.position.count*w,I=1;T>e.maxTextureSize&&(I=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const C=new Float32Array(T*I*4*p),L=new xh(C,T,I,p);L.type=ti,L.needsUpdate=!0;const U=w*4;for(let b=0;b<p;b++){const O=x[b],q=g[b],Y=E[b],Q=T*I*4*b;for(let ae=0;ae<O.count;ae++){const $=ae*U;_===!0&&(i.fromBufferAttribute(O,ae),C[Q+$+0]=i.x,C[Q+$+1]=i.y,C[Q+$+2]=i.z,C[Q+$+3]=0),y===!0&&(i.fromBufferAttribute(q,ae),C[Q+$+4]=i.x,C[Q+$+5]=i.y,C[Q+$+6]=i.z,C[Q+$+7]=0),S===!0&&(i.fromBufferAttribute(Y,ae),C[Q+$+8]=i.x,C[Q+$+9]=i.y,C[Q+$+10]=i.z,C[Q+$+11]=Y.itemSize===4?i.w:1)}}m={count:p,texture:L,size:new fe(T,I)},n.set(c,m),c.addEventListener("dispose",R)}if(a.isInstancedMesh===!0&&a.morphTexture!==null)u.getUniforms().setValue(r,"morphTexture",a.morphTexture,t);else{let _=0;for(let S=0;S<h.length;S++)_+=h[S];const y=c.morphTargetsRelative?1:1-_;u.getUniforms().setValue(r,"morphTargetBaseInfluence",y),u.getUniforms().setValue(r,"morphTargetInfluences",h)}u.getUniforms().setValue(r,"morphTargetsTexture",m.texture,t),u.getUniforms().setValue(r,"morphTargetsTextureSize",m.size)}return{update:s}}function kT(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,d=u.geometry,p=e.get(u,d);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function a(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:a}}class kp extends $t{constructor(e,t,n,i,s,a,c,u,h,d=Ps){if(d!==Ps&&d!==Ns)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===Ps&&(n=Mr),n===void 0&&d===Ns&&(n=Os),super(null,i,s,a,c,u,d,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:wn,this.minFilter=u!==void 0?u:wn,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const $v=new $t,__=new kp(1,1),ey=new xh,ty=new Np,ny=new fl,v_=[],y_=[],x_=new Float32Array(16),S_=new Float32Array(9),M_=new Float32Array(4);function qo(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=v_[i];if(s===void 0&&(s=new Float32Array(i),v_[i]=s),e!==0){n.toArray(s,0);for(let a=1,c=0;a!==e;++a)c+=t,r[a].toArray(s,c)}return s}function mn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function gn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function Sh(r,e){let t=y_[e];t===void 0&&(t=new Int32Array(e),y_[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function HT(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function VT(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(mn(t,e))return;r.uniform2fv(this.addr,e),gn(t,e)}}function GT(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(mn(t,e))return;r.uniform3fv(this.addr,e),gn(t,e)}}function WT(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(mn(t,e))return;r.uniform4fv(this.addr,e),gn(t,e)}}function XT(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(mn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),gn(t,e)}else{if(mn(t,n))return;M_.set(n),r.uniformMatrix2fv(this.addr,!1,M_),gn(t,n)}}function YT(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(mn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),gn(t,e)}else{if(mn(t,n))return;S_.set(n),r.uniformMatrix3fv(this.addr,!1,S_),gn(t,n)}}function qT(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(mn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),gn(t,e)}else{if(mn(t,n))return;x_.set(n),r.uniformMatrix4fv(this.addr,!1,x_),gn(t,n)}}function ZT(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function JT(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(mn(t,e))return;r.uniform2iv(this.addr,e),gn(t,e)}}function KT(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(mn(t,e))return;r.uniform3iv(this.addr,e),gn(t,e)}}function jT(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(mn(t,e))return;r.uniform4iv(this.addr,e),gn(t,e)}}function QT(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function $T(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(mn(t,e))return;r.uniform2uiv(this.addr,e),gn(t,e)}}function ew(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(mn(t,e))return;r.uniform3uiv(this.addr,e),gn(t,e)}}function tw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(mn(t,e))return;r.uniform4uiv(this.addr,e),gn(t,e)}}function nw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);let s;this.type===r.SAMPLER_2D_SHADOW?(__.compareFunction=Up,s=__):s=$v,t.setTexture2D(e||s,i)}function iw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||ty,i)}function rw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||ny,i)}function sw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||ey,i)}function ow(r){switch(r){case 5126:return HT;case 35664:return VT;case 35665:return GT;case 35666:return WT;case 35674:return XT;case 35675:return YT;case 35676:return qT;case 5124:case 35670:return ZT;case 35667:case 35671:return JT;case 35668:case 35672:return KT;case 35669:case 35673:return jT;case 5125:return QT;case 36294:return $T;case 36295:return ew;case 36296:return tw;case 35678:case 36198:case 36298:case 36306:case 35682:return nw;case 35679:case 36299:case 36307:return iw;case 35680:case 36300:case 36308:case 36293:return rw;case 36289:case 36303:case 36311:case 36292:return sw}}function aw(r,e){r.uniform1fv(this.addr,e)}function lw(r,e){const t=qo(e,this.size,2);r.uniform2fv(this.addr,t)}function cw(r,e){const t=qo(e,this.size,3);r.uniform3fv(this.addr,t)}function uw(r,e){const t=qo(e,this.size,4);r.uniform4fv(this.addr,t)}function hw(r,e){const t=qo(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function dw(r,e){const t=qo(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function fw(r,e){const t=qo(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function pw(r,e){r.uniform1iv(this.addr,e)}function mw(r,e){r.uniform2iv(this.addr,e)}function gw(r,e){r.uniform3iv(this.addr,e)}function _w(r,e){r.uniform4iv(this.addr,e)}function vw(r,e){r.uniform1uiv(this.addr,e)}function yw(r,e){r.uniform2uiv(this.addr,e)}function xw(r,e){r.uniform3uiv(this.addr,e)}function Sw(r,e){r.uniform4uiv(this.addr,e)}function Mw(r,e,t){const n=this.cache,i=e.length,s=Sh(t,i);mn(n,s)||(r.uniform1iv(this.addr,s),gn(n,s));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||$v,s[a])}function Ew(r,e,t){const n=this.cache,i=e.length,s=Sh(t,i);mn(n,s)||(r.uniform1iv(this.addr,s),gn(n,s));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||ty,s[a])}function Tw(r,e,t){const n=this.cache,i=e.length,s=Sh(t,i);mn(n,s)||(r.uniform1iv(this.addr,s),gn(n,s));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||ny,s[a])}function ww(r,e,t){const n=this.cache,i=e.length,s=Sh(t,i);mn(n,s)||(r.uniform1iv(this.addr,s),gn(n,s));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||ey,s[a])}function Aw(r){switch(r){case 5126:return aw;case 35664:return lw;case 35665:return cw;case 35666:return uw;case 35674:return hw;case 35675:return dw;case 35676:return fw;case 5124:case 35670:return pw;case 35667:case 35671:return mw;case 35668:case 35672:return gw;case 35669:case 35673:return _w;case 5125:return vw;case 36294:return yw;case 36295:return xw;case 36296:return Sw;case 35678:case 36198:case 36298:case 36306:case 35682:return Mw;case 35679:case 36299:case 36307:return Ew;case 35680:case 36300:case 36308:case 36293:return Tw;case 36289:case 36303:case 36311:case 36292:return ww}}class bw{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=ow(t.type)}}class Cw{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=Aw(t.type)}}class Rw{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,a=i.length;s!==a;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const xf=/(\w+)(\])?(\[|\.)?/g;function E_(r,e){r.seq.push(e),r.map[e.id]=e}function Pw(r,e,t){const n=r.name,i=n.length;for(xf.lastIndex=0;;){const s=xf.exec(n),a=xf.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&a+2===i){E_(t,h===void 0?new bw(c,r,e):new Cw(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new Rw(c),E_(t,p)),t=p}}}class xu{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),a=e.getUniformLocation(t,s.name);Pw(s,a,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,a=t.length;s!==a;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const a=e[i];a.id in t&&n.push(a)}return n}}function T_(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const Iw=37297;let Lw=0;function Dw(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let a=i;a<s;a++){const c=a+1;n.push(`${c===e?">":" "} ${c}: ${t[a]}`)}return n.join(`
`)}const w_=new mt;function Uw(r){Rt._getMatrix(w_,Rt.workingColorSpace,r);const e=`mat3( ${w_.elements.map(t=>t.toFixed(4))} )`;switch(Rt.getTransfer(r)){case hl:return[e,"LinearTransferOETF"];case Bt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",r),[e,"LinearTransferOETF"]}}function A_(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const a=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+Dw(r.getShaderSource(e),a)}else return i}function Ow(r,e){const t=Uw(e);return[`vec4 ${r}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function Nw(r,e){let t;switch(e){case Mv:t="Linear";break;case Ev:t="Reinhard";break;case Tv:t="Cineon";break;case Mp:t="ACESFilmic";break;case Av:t="AgX";break;case bv:t="Neutral";break;case wv:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Hc=new F;function Fw(){Rt.getLuminanceCoefficients(Hc);const r=Hc.x.toFixed(4),e=Hc.y.toFixed(4),t=Hc.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${r}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function zw(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Oa).join(`
`)}function Bw(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function kw(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),a=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[a]={type:s.type,location:r.getAttribLocation(e,a),locationSize:c}}return t}function Oa(r){return r!==""}function b_(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function C_(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Hw=/^[ \t]*#include +<([\w\d./]+)>/gm;function cp(r){return r.replace(Hw,Gw)}const Vw=new Map;function Gw(r,e){let t=xt[e];if(t===void 0){const n=Vw.get(e);if(n!==void 0)t=xt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return cp(t)}const Ww=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function R_(r){return r.replace(Ww,Xw)}function Xw(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function P_(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Yw(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===hh?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===Na?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Ri&&(e="SHADOWMAP_TYPE_VSM"),e}function qw(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case Sr:case Xr:e="ENVMAP_TYPE_CUBE";break;case Go:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Zw(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Xr:e="ENVMAP_MODE_REFRACTION";break}return e}function Jw(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case cl:e="ENVMAP_BLENDING_MULTIPLY";break;case xv:e="ENVMAP_BLENDING_MIX";break;case Sv:e="ENVMAP_BLENDING_ADD";break}return e}function Kw(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function jw(r,e,t,n){const i=r.getContext(),s=t.defines;let a=t.vertexShader,c=t.fragmentShader;const u=Yw(t),h=qw(t),d=Zw(t),p=Jw(t),m=Kw(t),_=zw(t),y=Bw(s),S=i.createProgram();let x,g,E=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(Oa).join(`
`),x.length>0&&(x+=`
`),g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(Oa).join(`
`),g.length>0&&(g+=`
`)):(x=[P_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Oa).join(`
`),g=[P_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==ji?"#define TONE_MAPPING":"",t.toneMapping!==ji?xt.tonemapping_pars_fragment:"",t.toneMapping!==ji?Nw("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",xt.colorspace_pars_fragment,Ow("linearToOutputTexel",t.outputColorSpace),Fw(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Oa).join(`
`)),a=cp(a),a=b_(a,t),a=C_(a,t),c=cp(c),c=b_(c,t),c=C_(c,t),a=R_(a),c=R_(c),t.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,x=[_,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,g=["#define varying in",t.glslVersion===ap?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===ap?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const w=E+x+a,T=E+g+c,I=T_(i,i.VERTEX_SHADER,w),C=T_(i,i.FRAGMENT_SHADER,T);i.attachShader(S,I),i.attachShader(S,C),t.index0AttributeName!==void 0?i.bindAttribLocation(S,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(S,0,"position"),i.linkProgram(S);function L(O){if(r.debug.checkShaderErrors){const q=i.getProgramInfoLog(S).trim(),Y=i.getShaderInfoLog(I).trim(),Q=i.getShaderInfoLog(C).trim();let ae=!0,$=!0;if(i.getProgramParameter(S,i.LINK_STATUS)===!1)if(ae=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,S,I,C);else{const pe=A_(i,I,"vertex"),z=A_(i,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(S,i.VALIDATE_STATUS)+`

Material Name: `+O.name+`
Material Type: `+O.type+`

Program Info Log: `+q+`
`+pe+`
`+z)}else q!==""?console.warn("THREE.WebGLProgram: Program Info Log:",q):(Y===""||Q==="")&&($=!1);$&&(O.diagnostics={runnable:ae,programLog:q,vertexShader:{log:Y,prefix:x},fragmentShader:{log:Q,prefix:g}})}i.deleteShader(I),i.deleteShader(C),U=new xu(i,S),R=kw(i,S)}let U;this.getUniforms=function(){return U===void 0&&L(this),U};let R;this.getAttributes=function(){return R===void 0&&L(this),R};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=i.getProgramParameter(S,Iw)),b},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(S),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=Lw++,this.cacheKey=e,this.usedTimes=1,this.program=S,this.vertexShader=I,this.fragmentShader=C,this}let Qw=0;class $w{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new eA(e),t.set(e,n)),n}}class eA{constructor(e){this.id=Qw++,this.code=e,this.usedTimes=0}}function tA(r,e,t,n,i,s,a){const c=new Ls,u=new $w,h=new Set,d=[],p=i.logarithmicDepthBuffer,m=i.vertexTextures;let _=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function S(R){return h.add(R),R===0?"uv":`uv${R}`}function x(R,b,O,q,Y){const Q=q.fog,ae=Y.geometry,$=R.isMeshStandardMaterial?q.environment:null,pe=(R.isMeshStandardMaterial?t:e).get(R.envMap||$),z=pe&&pe.mapping===Go?pe.image.height:null,Z=y[R.type];R.precision!==null&&(_=i.getMaxPrecision(R.precision),_!==R.precision&&console.warn("THREE.WebGLProgram.getParameters:",R.precision,"not supported, using",_,"instead."));const J=ae.morphAttributes.position||ae.morphAttributes.normal||ae.morphAttributes.color,re=J!==void 0?J.length:0;let xe=0;ae.morphAttributes.position!==void 0&&(xe=1),ae.morphAttributes.normal!==void 0&&(xe=2),ae.morphAttributes.color!==void 0&&(xe=3);let Be,ne,ge,we;if(Z){const Dt=Pi[Z];Be=Dt.vertexShader,ne=Dt.fragmentShader}else Be=R.vertexShader,ne=R.fragmentShader,u.update(R),ge=u.getVertexShaderID(R),we=u.getFragmentShaderID(R);const ve=r.getRenderTarget(),Qe=r.state.buffers.depth.getReversed(),st=Y.isInstancedMesh===!0,$e=Y.isBatchedMesh===!0,ct=!!R.map,he=!!R.matcap,_e=!!pe,k=!!R.aoMap,Je=!!R.lightMap,ye=!!R.bumpMap,ze=!!R.normalMap,Te=!!R.displacementMap,nt=!!R.emissiveMap,De=!!R.metalnessMap,N=!!R.roughnessMap,P=R.anisotropy>0,K=R.clearcoat>0,ce=R.dispersion>0,me=R.iridescence>0,ue=R.sheen>0,qe=R.transmission>0,be=P&&!!R.anisotropyMap,Fe=K&&!!R.clearcoatMap,wt=K&&!!R.clearcoatNormalMap,Se=K&&!!R.clearcoatRoughnessMap,ke=me&&!!R.iridescenceMap,it=me&&!!R.iridescenceThicknessMap,at=ue&&!!R.sheenColorMap,He=ue&&!!R.sheenRoughnessMap,bt=!!R.specularMap,ht=!!R.specularColorMap,kt=!!R.specularIntensityMap,V=qe&&!!R.transmissionMap,Ce=qe&&!!R.thicknessMap,oe=!!R.gradientMap,de=!!R.alphaMap,Oe=R.alphaTest>0,Ie=!!R.alphaHash,ut=!!R.extensions;let Yt=ji;R.toneMapped&&(ve===null||ve.isXRRenderTarget===!0)&&(Yt=r.toneMapping);const hn={shaderID:Z,shaderType:R.type,shaderName:R.name,vertexShader:Be,fragmentShader:ne,defines:R.defines,customVertexShaderID:ge,customFragmentShaderID:we,isRawShaderMaterial:R.isRawShaderMaterial===!0,glslVersion:R.glslVersion,precision:_,batching:$e,batchingColor:$e&&Y._colorsTexture!==null,instancing:st,instancingColor:st&&Y.instanceColor!==null,instancingMorph:st&&Y.morphTexture!==null,supportsVertexTextures:m,outputColorSpace:ve===null?r.outputColorSpace:ve.isXRRenderTarget===!0?ve.texture.colorSpace:Bs,alphaToCoverage:!!R.alphaToCoverage,map:ct,matcap:he,envMap:_e,envMapMode:_e&&pe.mapping,envMapCubeUVHeight:z,aoMap:k,lightMap:Je,bumpMap:ye,normalMap:ze,displacementMap:m&&Te,emissiveMap:nt,normalMapObjectSpace:ze&&R.normalMapType===Uv,normalMapTangentSpace:ze&&R.normalMapType===qr,metalnessMap:De,roughnessMap:N,anisotropy:P,anisotropyMap:be,clearcoat:K,clearcoatMap:Fe,clearcoatNormalMap:wt,clearcoatRoughnessMap:Se,dispersion:ce,iridescence:me,iridescenceMap:ke,iridescenceThicknessMap:it,sheen:ue,sheenColorMap:at,sheenRoughnessMap:He,specularMap:bt,specularColorMap:ht,specularIntensityMap:kt,transmission:qe,transmissionMap:V,thicknessMap:Ce,gradientMap:oe,opaque:R.transparent===!1&&R.blending===Rs&&R.alphaToCoverage===!1,alphaMap:de,alphaTest:Oe,alphaHash:Ie,combine:R.combine,mapUv:ct&&S(R.map.channel),aoMapUv:k&&S(R.aoMap.channel),lightMapUv:Je&&S(R.lightMap.channel),bumpMapUv:ye&&S(R.bumpMap.channel),normalMapUv:ze&&S(R.normalMap.channel),displacementMapUv:Te&&S(R.displacementMap.channel),emissiveMapUv:nt&&S(R.emissiveMap.channel),metalnessMapUv:De&&S(R.metalnessMap.channel),roughnessMapUv:N&&S(R.roughnessMap.channel),anisotropyMapUv:be&&S(R.anisotropyMap.channel),clearcoatMapUv:Fe&&S(R.clearcoatMap.channel),clearcoatNormalMapUv:wt&&S(R.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Se&&S(R.clearcoatRoughnessMap.channel),iridescenceMapUv:ke&&S(R.iridescenceMap.channel),iridescenceThicknessMapUv:it&&S(R.iridescenceThicknessMap.channel),sheenColorMapUv:at&&S(R.sheenColorMap.channel),sheenRoughnessMapUv:He&&S(R.sheenRoughnessMap.channel),specularMapUv:bt&&S(R.specularMap.channel),specularColorMapUv:ht&&S(R.specularColorMap.channel),specularIntensityMapUv:kt&&S(R.specularIntensityMap.channel),transmissionMapUv:V&&S(R.transmissionMap.channel),thicknessMapUv:Ce&&S(R.thicknessMap.channel),alphaMapUv:de&&S(R.alphaMap.channel),vertexTangents:!!ae.attributes.tangent&&(ze||P),vertexColors:R.vertexColors,vertexAlphas:R.vertexColors===!0&&!!ae.attributes.color&&ae.attributes.color.itemSize===4,pointsUvs:Y.isPoints===!0&&!!ae.attributes.uv&&(ct||de),fog:!!Q,useFog:R.fog===!0,fogExp2:!!Q&&Q.isFogExp2,flatShading:R.flatShading===!0,sizeAttenuation:R.sizeAttenuation===!0,logarithmicDepthBuffer:p,reverseDepthBuffer:Qe,skinning:Y.isSkinnedMesh===!0,morphTargets:ae.morphAttributes.position!==void 0,morphNormals:ae.morphAttributes.normal!==void 0,morphColors:ae.morphAttributes.color!==void 0,morphTargetsCount:re,morphTextureStride:xe,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:R.dithering,shadowMapEnabled:r.shadowMap.enabled&&O.length>0,shadowMapType:r.shadowMap.type,toneMapping:Yt,decodeVideoTexture:ct&&R.map.isVideoTexture===!0&&Rt.getTransfer(R.map.colorSpace)===Bt,decodeVideoTextureEmissive:nt&&R.emissiveMap.isVideoTexture===!0&&Rt.getTransfer(R.emissiveMap.colorSpace)===Bt,premultipliedAlpha:R.premultipliedAlpha,doubleSided:R.side===Zi,flipSided:R.side===Gn,useDepthPacking:R.depthPacking>=0,depthPacking:R.depthPacking||0,index0AttributeName:R.index0AttributeName,extensionClipCullDistance:ut&&R.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(ut&&R.extensions.multiDraw===!0||$e)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:R.customProgramCacheKey()};return hn.vertexUv1s=h.has(1),hn.vertexUv2s=h.has(2),hn.vertexUv3s=h.has(3),h.clear(),hn}function g(R){const b=[];if(R.shaderID?b.push(R.shaderID):(b.push(R.customVertexShaderID),b.push(R.customFragmentShaderID)),R.defines!==void 0)for(const O in R.defines)b.push(O),b.push(R.defines[O]);return R.isRawShaderMaterial===!1&&(E(b,R),w(b,R),b.push(r.outputColorSpace)),b.push(R.customProgramCacheKey),b.join()}function E(R,b){R.push(b.precision),R.push(b.outputColorSpace),R.push(b.envMapMode),R.push(b.envMapCubeUVHeight),R.push(b.mapUv),R.push(b.alphaMapUv),R.push(b.lightMapUv),R.push(b.aoMapUv),R.push(b.bumpMapUv),R.push(b.normalMapUv),R.push(b.displacementMapUv),R.push(b.emissiveMapUv),R.push(b.metalnessMapUv),R.push(b.roughnessMapUv),R.push(b.anisotropyMapUv),R.push(b.clearcoatMapUv),R.push(b.clearcoatNormalMapUv),R.push(b.clearcoatRoughnessMapUv),R.push(b.iridescenceMapUv),R.push(b.iridescenceThicknessMapUv),R.push(b.sheenColorMapUv),R.push(b.sheenRoughnessMapUv),R.push(b.specularMapUv),R.push(b.specularColorMapUv),R.push(b.specularIntensityMapUv),R.push(b.transmissionMapUv),R.push(b.thicknessMapUv),R.push(b.combine),R.push(b.fogExp2),R.push(b.sizeAttenuation),R.push(b.morphTargetsCount),R.push(b.morphAttributeCount),R.push(b.numDirLights),R.push(b.numPointLights),R.push(b.numSpotLights),R.push(b.numSpotLightMaps),R.push(b.numHemiLights),R.push(b.numRectAreaLights),R.push(b.numDirLightShadows),R.push(b.numPointLightShadows),R.push(b.numSpotLightShadows),R.push(b.numSpotLightShadowsWithMaps),R.push(b.numLightProbes),R.push(b.shadowMapType),R.push(b.toneMapping),R.push(b.numClippingPlanes),R.push(b.numClipIntersection),R.push(b.depthPacking)}function w(R,b){c.disableAll(),b.supportsVertexTextures&&c.enable(0),b.instancing&&c.enable(1),b.instancingColor&&c.enable(2),b.instancingMorph&&c.enable(3),b.matcap&&c.enable(4),b.envMap&&c.enable(5),b.normalMapObjectSpace&&c.enable(6),b.normalMapTangentSpace&&c.enable(7),b.clearcoat&&c.enable(8),b.iridescence&&c.enable(9),b.alphaTest&&c.enable(10),b.vertexColors&&c.enable(11),b.vertexAlphas&&c.enable(12),b.vertexUv1s&&c.enable(13),b.vertexUv2s&&c.enable(14),b.vertexUv3s&&c.enable(15),b.vertexTangents&&c.enable(16),b.anisotropy&&c.enable(17),b.alphaHash&&c.enable(18),b.batching&&c.enable(19),b.dispersion&&c.enable(20),b.batchingColor&&c.enable(21),R.push(c.mask),c.disableAll(),b.fog&&c.enable(0),b.useFog&&c.enable(1),b.flatShading&&c.enable(2),b.logarithmicDepthBuffer&&c.enable(3),b.reverseDepthBuffer&&c.enable(4),b.skinning&&c.enable(5),b.morphTargets&&c.enable(6),b.morphNormals&&c.enable(7),b.morphColors&&c.enable(8),b.premultipliedAlpha&&c.enable(9),b.shadowMapEnabled&&c.enable(10),b.doubleSided&&c.enable(11),b.flipSided&&c.enable(12),b.useDepthPacking&&c.enable(13),b.dithering&&c.enable(14),b.transmission&&c.enable(15),b.sheen&&c.enable(16),b.opaque&&c.enable(17),b.pointsUvs&&c.enable(18),b.decodeVideoTexture&&c.enable(19),b.decodeVideoTextureEmissive&&c.enable(20),b.alphaToCoverage&&c.enable(21),R.push(c.mask)}function T(R){const b=y[R.type];let O;if(b){const q=Pi[b];O=Jv.clone(q.uniforms)}else O=R.uniforms;return O}function I(R,b){let O;for(let q=0,Y=d.length;q<Y;q++){const Q=d[q];if(Q.cacheKey===b){O=Q,++O.usedTimes;break}}return O===void 0&&(O=new jw(r,b,R,s),d.push(O)),O}function C(R){if(--R.usedTimes===0){const b=d.indexOf(R);d[b]=d[d.length-1],d.pop(),R.destroy()}}function L(R){u.remove(R)}function U(){u.dispose()}return{getParameters:x,getProgramCacheKey:g,getUniforms:T,acquireProgram:I,releaseProgram:C,releaseShaderCache:L,programs:d,dispose:U}}function nA(){let r=new WeakMap;function e(a){return r.has(a)}function t(a){let c=r.get(a);return c===void 0&&(c={},r.set(a,c)),c}function n(a){r.delete(a)}function i(a,c,u){r.get(a)[c]=u}function s(){r=new WeakMap}return{has:e,get:t,remove:n,update:i,dispose:s}}function iA(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function I_(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function L_(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function a(p,m,_,y,S,x){let g=r[e];return g===void 0?(g={id:p.id,object:p,geometry:m,material:_,groupOrder:y,renderOrder:p.renderOrder,z:S,group:x},r[e]=g):(g.id=p.id,g.object=p,g.geometry=m,g.material=_,g.groupOrder=y,g.renderOrder=p.renderOrder,g.z=S,g.group=x),e++,g}function c(p,m,_,y,S,x){const g=a(p,m,_,y,S,x);_.transmission>0?n.push(g):_.transparent===!0?i.push(g):t.push(g)}function u(p,m,_,y,S,x){const g=a(p,m,_,y,S,x);_.transmission>0?n.unshift(g):_.transparent===!0?i.unshift(g):t.unshift(g)}function h(p,m){t.length>1&&t.sort(p||iA),n.length>1&&n.sort(m||I_),i.length>1&&i.sort(m||I_)}function d(){for(let p=e,m=r.length;p<m;p++){const _=r[p];if(_.id===null)break;_.id=null,_.object=null,_.geometry=null,_.material=null,_.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:d,sort:h}}function rA(){let r=new WeakMap;function e(n,i){const s=r.get(n);let a;return s===void 0?(a=new L_,r.set(n,[a])):i>=s.length?(a=new L_,s.push(a)):a=s[i],a}function t(){r=new WeakMap}return{get:e,dispose:t}}function sA(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new F,color:new Ne};break;case"SpotLight":t={position:new F,direction:new F,color:new Ne,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new F,color:new Ne,distance:0,decay:0};break;case"HemisphereLight":t={direction:new F,skyColor:new Ne,groundColor:new Ne};break;case"RectAreaLight":t={color:new Ne,position:new F,halfWidth:new F,halfHeight:new F};break}return r[e.id]=t,t}}}function oA(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let aA=0;function lA(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function cA(r){const e=new sA,t=oA(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)n.probe.push(new F);const i=new F,s=new rt,a=new rt;function c(h){let d=0,p=0,m=0;for(let R=0;R<9;R++)n.probe[R].set(0,0,0);let _=0,y=0,S=0,x=0,g=0,E=0,w=0,T=0,I=0,C=0,L=0;h.sort(lA);for(let R=0,b=h.length;R<b;R++){const O=h[R],q=O.color,Y=O.intensity,Q=O.distance,ae=O.shadow&&O.shadow.map?O.shadow.map.texture:null;if(O.isAmbientLight)d+=q.r*Y,p+=q.g*Y,m+=q.b*Y;else if(O.isLightProbe){for(let $=0;$<9;$++)n.probe[$].addScaledVector(O.sh.coefficients[$],Y);L++}else if(O.isDirectionalLight){const $=e.get(O);if($.color.copy(O.color).multiplyScalar(O.intensity),O.castShadow){const pe=O.shadow,z=t.get(O);z.shadowIntensity=pe.intensity,z.shadowBias=pe.bias,z.shadowNormalBias=pe.normalBias,z.shadowRadius=pe.radius,z.shadowMapSize=pe.mapSize,n.directionalShadow[_]=z,n.directionalShadowMap[_]=ae,n.directionalShadowMatrix[_]=O.shadow.matrix,E++}n.directional[_]=$,_++}else if(O.isSpotLight){const $=e.get(O);$.position.setFromMatrixPosition(O.matrixWorld),$.color.copy(q).multiplyScalar(Y),$.distance=Q,$.coneCos=Math.cos(O.angle),$.penumbraCos=Math.cos(O.angle*(1-O.penumbra)),$.decay=O.decay,n.spot[S]=$;const pe=O.shadow;if(O.map&&(n.spotLightMap[I]=O.map,I++,pe.updateMatrices(O),O.castShadow&&C++),n.spotLightMatrix[S]=pe.matrix,O.castShadow){const z=t.get(O);z.shadowIntensity=pe.intensity,z.shadowBias=pe.bias,z.shadowNormalBias=pe.normalBias,z.shadowRadius=pe.radius,z.shadowMapSize=pe.mapSize,n.spotShadow[S]=z,n.spotShadowMap[S]=ae,T++}S++}else if(O.isRectAreaLight){const $=e.get(O);$.color.copy(q).multiplyScalar(Y),$.halfWidth.set(O.width*.5,0,0),$.halfHeight.set(0,O.height*.5,0),n.rectArea[x]=$,x++}else if(O.isPointLight){const $=e.get(O);if($.color.copy(O.color).multiplyScalar(O.intensity),$.distance=O.distance,$.decay=O.decay,O.castShadow){const pe=O.shadow,z=t.get(O);z.shadowIntensity=pe.intensity,z.shadowBias=pe.bias,z.shadowNormalBias=pe.normalBias,z.shadowRadius=pe.radius,z.shadowMapSize=pe.mapSize,z.shadowCameraNear=pe.camera.near,z.shadowCameraFar=pe.camera.far,n.pointShadow[y]=z,n.pointShadowMap[y]=ae,n.pointShadowMatrix[y]=O.shadow.matrix,w++}n.point[y]=$,y++}else if(O.isHemisphereLight){const $=e.get(O);$.skyColor.copy(O.color).multiplyScalar(Y),$.groundColor.copy(O.groundColor).multiplyScalar(Y),n.hemi[g]=$,g++}}x>0&&(r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ae.LTC_FLOAT_1,n.rectAreaLTC2=Ae.LTC_FLOAT_2):(n.rectAreaLTC1=Ae.LTC_HALF_1,n.rectAreaLTC2=Ae.LTC_HALF_2)),n.ambient[0]=d,n.ambient[1]=p,n.ambient[2]=m;const U=n.hash;(U.directionalLength!==_||U.pointLength!==y||U.spotLength!==S||U.rectAreaLength!==x||U.hemiLength!==g||U.numDirectionalShadows!==E||U.numPointShadows!==w||U.numSpotShadows!==T||U.numSpotMaps!==I||U.numLightProbes!==L)&&(n.directional.length=_,n.spot.length=S,n.rectArea.length=x,n.point.length=y,n.hemi.length=g,n.directionalShadow.length=E,n.directionalShadowMap.length=E,n.pointShadow.length=w,n.pointShadowMap.length=w,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=E,n.pointShadowMatrix.length=w,n.spotLightMatrix.length=T+I-C,n.spotLightMap.length=I,n.numSpotLightShadowsWithMaps=C,n.numLightProbes=L,U.directionalLength=_,U.pointLength=y,U.spotLength=S,U.rectAreaLength=x,U.hemiLength=g,U.numDirectionalShadows=E,U.numPointShadows=w,U.numSpotShadows=T,U.numSpotMaps=I,U.numLightProbes=L,n.version=aA++)}function u(h,d){let p=0,m=0,_=0,y=0,S=0;const x=d.matrixWorldInverse;for(let g=0,E=h.length;g<E;g++){const w=h[g];if(w.isDirectionalLight){const T=n.directional[p];T.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(x),p++}else if(w.isSpotLight){const T=n.spot[_];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(x),T.direction.setFromMatrixPosition(w.matrixWorld),i.setFromMatrixPosition(w.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(x),_++}else if(w.isRectAreaLight){const T=n.rectArea[y];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(x),a.identity(),s.copy(w.matrixWorld),s.premultiply(x),a.extractRotation(s),T.halfWidth.set(w.width*.5,0,0),T.halfHeight.set(0,w.height*.5,0),T.halfWidth.applyMatrix4(a),T.halfHeight.applyMatrix4(a),y++}else if(w.isPointLight){const T=n.point[m];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(x),m++}else if(w.isHemisphereLight){const T=n.hemi[S];T.direction.setFromMatrixPosition(w.matrixWorld),T.direction.transformDirection(x),S++}}}return{setup:c,setupView:u,state:n}}function D_(r){const e=new cA(r),t=[],n=[];function i(d){h.camera=d,t.length=0,n.length=0}function s(d){t.push(d)}function a(d){n.push(d)}function c(){e.setup(t)}function u(d){e.setupView(t,d)}const h={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:i,state:h,setupLights:c,setupLightsView:u,pushLight:s,pushShadow:a}}function uA(r){let e=new WeakMap;function t(i,s=0){const a=e.get(i);let c;return a===void 0?(c=new D_(r),e.set(i,[c])):s>=a.length?(c=new D_(r),a.push(c)):c=a[s],c}function n(){e=new WeakMap}return{get:t,dispose:n}}class Hp extends bn{static get type(){return"MeshDepthMaterial"}constructor(e){super(),this.isMeshDepthMaterial=!0,this.depthPacking=Lv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Vp extends bn{static get type(){return"MeshDistanceMaterial"}constructor(e){super(),this.isMeshDistanceMaterial=!0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const hA=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,dA=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function fA(r,e,t){let n=new pl;const i=new fe,s=new fe,a=new Pt,c=new Hp({depthPacking:Dv}),u=new Vp,h={},d=t.maxTextureSize,p={[xr]:Gn,[Gn]:xr,[Zi]:Zi},m=new Di({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new fe},radius:{value:4}},vertexShader:hA,fragmentShader:dA}),_=m.clone();_.defines.HORIZONTAL_PASS=1;const y=new _t;y.setAttribute("position",new Vt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const S=new un(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=hh;let g=this.type;this.render=function(C,L,U){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||C.length===0)return;const R=r.getRenderTarget(),b=r.getActiveCubeFace(),O=r.getActiveMipmapLevel(),q=r.state;q.setBlending(vr),q.buffers.color.setClear(1,1,1,1),q.buffers.depth.setTest(!0),q.setScissorTest(!1);const Y=g!==Ri&&this.type===Ri,Q=g===Ri&&this.type!==Ri;for(let ae=0,$=C.length;ae<$;ae++){const pe=C[ae],z=pe.shadow;if(z===void 0){console.warn("THREE.WebGLShadowMap:",pe,"has no shadow.");continue}if(z.autoUpdate===!1&&z.needsUpdate===!1)continue;i.copy(z.mapSize);const Z=z.getFrameExtents();if(i.multiply(Z),s.copy(z.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(s.x=Math.floor(d/Z.x),i.x=s.x*Z.x,z.mapSize.x=s.x),i.y>d&&(s.y=Math.floor(d/Z.y),i.y=s.y*Z.y,z.mapSize.y=s.y)),z.map===null||Y===!0||Q===!0){const re=this.type!==Ri?{minFilter:wn,magFilter:wn}:{};z.map!==null&&z.map.dispose(),z.map=new Li(i.x,i.y,re),z.map.texture.name=pe.name+".shadowMap",z.camera.updateProjectionMatrix()}r.setRenderTarget(z.map),r.clear();const J=z.getViewportCount();for(let re=0;re<J;re++){const xe=z.getViewport(re);a.set(s.x*xe.x,s.y*xe.y,s.x*xe.z,s.y*xe.w),q.viewport(a),z.updateMatrices(pe,re),n=z.getFrustum(),T(L,U,z.camera,pe,this.type)}z.isPointLightShadow!==!0&&this.type===Ri&&E(z,U),z.needsUpdate=!1}g=this.type,x.needsUpdate=!1,r.setRenderTarget(R,b,O)};function E(C,L){const U=e.update(S);m.defines.VSM_SAMPLES!==C.blurSamples&&(m.defines.VSM_SAMPLES=C.blurSamples,_.defines.VSM_SAMPLES=C.blurSamples,m.needsUpdate=!0,_.needsUpdate=!0),C.mapPass===null&&(C.mapPass=new Li(i.x,i.y)),m.uniforms.shadow_pass.value=C.map.texture,m.uniforms.resolution.value=C.mapSize,m.uniforms.radius.value=C.radius,r.setRenderTarget(C.mapPass),r.clear(),r.renderBufferDirect(L,null,U,m,S,null),_.uniforms.shadow_pass.value=C.mapPass.texture,_.uniforms.resolution.value=C.mapSize,_.uniforms.radius.value=C.radius,r.setRenderTarget(C.map),r.clear(),r.renderBufferDirect(L,null,U,_,S,null)}function w(C,L,U,R){let b=null;const O=U.isPointLight===!0?C.customDistanceMaterial:C.customDepthMaterial;if(O!==void 0)b=O;else if(b=U.isPointLight===!0?u:c,r.localClippingEnabled&&L.clipShadows===!0&&Array.isArray(L.clippingPlanes)&&L.clippingPlanes.length!==0||L.displacementMap&&L.displacementScale!==0||L.alphaMap&&L.alphaTest>0||L.map&&L.alphaTest>0){const q=b.uuid,Y=L.uuid;let Q=h[q];Q===void 0&&(Q={},h[q]=Q);let ae=Q[Y];ae===void 0&&(ae=b.clone(),Q[Y]=ae,L.addEventListener("dispose",I)),b=ae}if(b.visible=L.visible,b.wireframe=L.wireframe,R===Ri?b.side=L.shadowSide!==null?L.shadowSide:L.side:b.side=L.shadowSide!==null?L.shadowSide:p[L.side],b.alphaMap=L.alphaMap,b.alphaTest=L.alphaTest,b.map=L.map,b.clipShadows=L.clipShadows,b.clippingPlanes=L.clippingPlanes,b.clipIntersection=L.clipIntersection,b.displacementMap=L.displacementMap,b.displacementScale=L.displacementScale,b.displacementBias=L.displacementBias,b.wireframeLinewidth=L.wireframeLinewidth,b.linewidth=L.linewidth,U.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const q=r.properties.get(b);q.light=U}return b}function T(C,L,U,R,b){if(C.visible===!1)return;if(C.layers.test(L.layers)&&(C.isMesh||C.isLine||C.isPoints)&&(C.castShadow||C.receiveShadow&&b===Ri)&&(!C.frustumCulled||n.intersectsObject(C))){C.modelViewMatrix.multiplyMatrices(U.matrixWorldInverse,C.matrixWorld);const Y=e.update(C),Q=C.material;if(Array.isArray(Q)){const ae=Y.groups;for(let $=0,pe=ae.length;$<pe;$++){const z=ae[$],Z=Q[z.materialIndex];if(Z&&Z.visible){const J=w(C,Z,R,b);C.onBeforeShadow(r,C,L,U,Y,J,z),r.renderBufferDirect(U,null,Y,J,C,z),C.onAfterShadow(r,C,L,U,Y,J,z)}}}else if(Q.visible){const ae=w(C,Q,R,b);C.onBeforeShadow(r,C,L,U,Y,ae,null),r.renderBufferDirect(U,null,Y,ae,C,null),C.onAfterShadow(r,C,L,U,Y,ae,null)}}const q=C.children;for(let Y=0,Q=q.length;Y<Q;Y++)T(q[Y],L,U,R,b)}function I(C){C.target.removeEventListener("dispose",I);for(const U in h){const R=h[U],b=C.target.uuid;b in R&&(R[b].dispose(),delete R[b])}}}const pA={[Tu]:wu,[Au]:Ru,[bu]:Pu,[Us]:Cu,[wu]:Tu,[Ru]:Au,[Pu]:bu,[Cu]:Us};function mA(r,e){function t(){let V=!1;const Ce=new Pt;let oe=null;const de=new Pt(0,0,0,0);return{setMask:function(Oe){oe!==Oe&&!V&&(r.colorMask(Oe,Oe,Oe,Oe),oe=Oe)},setLocked:function(Oe){V=Oe},setClear:function(Oe,Ie,ut,Yt,hn){hn===!0&&(Oe*=Yt,Ie*=Yt,ut*=Yt),Ce.set(Oe,Ie,ut,Yt),de.equals(Ce)===!1&&(r.clearColor(Oe,Ie,ut,Yt),de.copy(Ce))},reset:function(){V=!1,oe=null,de.set(-1,0,0,0)}}}function n(){let V=!1,Ce=!1,oe=null,de=null,Oe=null;return{setReversed:function(Ie){if(Ce!==Ie){const ut=e.get("EXT_clip_control");Ce?ut.clipControlEXT(ut.LOWER_LEFT_EXT,ut.ZERO_TO_ONE_EXT):ut.clipControlEXT(ut.LOWER_LEFT_EXT,ut.NEGATIVE_ONE_TO_ONE_EXT);const Yt=Oe;Oe=null,this.setClear(Yt)}Ce=Ie},getReversed:function(){return Ce},setTest:function(Ie){Ie?ve(r.DEPTH_TEST):Qe(r.DEPTH_TEST)},setMask:function(Ie){oe!==Ie&&!V&&(r.depthMask(Ie),oe=Ie)},setFunc:function(Ie){if(Ce&&(Ie=pA[Ie]),de!==Ie){switch(Ie){case Tu:r.depthFunc(r.NEVER);break;case wu:r.depthFunc(r.ALWAYS);break;case Au:r.depthFunc(r.LESS);break;case Us:r.depthFunc(r.LEQUAL);break;case bu:r.depthFunc(r.EQUAL);break;case Cu:r.depthFunc(r.GEQUAL);break;case Ru:r.depthFunc(r.GREATER);break;case Pu:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}de=Ie}},setLocked:function(Ie){V=Ie},setClear:function(Ie){Oe!==Ie&&(Ce&&(Ie=1-Ie),r.clearDepth(Ie),Oe=Ie)},reset:function(){V=!1,oe=null,de=null,Oe=null,Ce=!1}}}function i(){let V=!1,Ce=null,oe=null,de=null,Oe=null,Ie=null,ut=null,Yt=null,hn=null;return{setTest:function(Dt){V||(Dt?ve(r.STENCIL_TEST):Qe(r.STENCIL_TEST))},setMask:function(Dt){Ce!==Dt&&!V&&(r.stencilMask(Dt),Ce=Dt)},setFunc:function(Dt,Yn,Mi){(oe!==Dt||de!==Yn||Oe!==Mi)&&(r.stencilFunc(Dt,Yn,Mi),oe=Dt,de=Yn,Oe=Mi)},setOp:function(Dt,Yn,Mi){(Ie!==Dt||ut!==Yn||Yt!==Mi)&&(r.stencilOp(Dt,Yn,Mi),Ie=Dt,ut=Yn,Yt=Mi)},setLocked:function(Dt){V=Dt},setClear:function(Dt){hn!==Dt&&(r.clearStencil(Dt),hn=Dt)},reset:function(){V=!1,Ce=null,oe=null,de=null,Oe=null,Ie=null,ut=null,Yt=null,hn=null}}}const s=new t,a=new n,c=new i,u=new WeakMap,h=new WeakMap;let d={},p={},m=new WeakMap,_=[],y=null,S=!1,x=null,g=null,E=null,w=null,T=null,I=null,C=null,L=new Ne(0,0,0),U=0,R=!1,b=null,O=null,q=null,Y=null,Q=null;const ae=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let $=!1,pe=0;const z=r.getParameter(r.VERSION);z.indexOf("WebGL")!==-1?(pe=parseFloat(/^WebGL (\d)/.exec(z)[1]),$=pe>=1):z.indexOf("OpenGL ES")!==-1&&(pe=parseFloat(/^OpenGL ES (\d)/.exec(z)[1]),$=pe>=2);let Z=null,J={};const re=r.getParameter(r.SCISSOR_BOX),xe=r.getParameter(r.VIEWPORT),Be=new Pt().fromArray(re),ne=new Pt().fromArray(xe);function ge(V,Ce,oe,de){const Oe=new Uint8Array(4),Ie=r.createTexture();r.bindTexture(V,Ie),r.texParameteri(V,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(V,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let ut=0;ut<oe;ut++)V===r.TEXTURE_3D||V===r.TEXTURE_2D_ARRAY?r.texImage3D(Ce,0,r.RGBA,1,1,de,0,r.RGBA,r.UNSIGNED_BYTE,Oe):r.texImage2D(Ce+ut,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Oe);return Ie}const we={};we[r.TEXTURE_2D]=ge(r.TEXTURE_2D,r.TEXTURE_2D,1),we[r.TEXTURE_CUBE_MAP]=ge(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),we[r.TEXTURE_2D_ARRAY]=ge(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),we[r.TEXTURE_3D]=ge(r.TEXTURE_3D,r.TEXTURE_3D,1,1),s.setClear(0,0,0,1),a.setClear(1),c.setClear(0),ve(r.DEPTH_TEST),a.setFunc(Us),ye(!1),ze(tp),ve(r.CULL_FACE),k(vr);function ve(V){d[V]!==!0&&(r.enable(V),d[V]=!0)}function Qe(V){d[V]!==!1&&(r.disable(V),d[V]=!1)}function st(V,Ce){return p[V]!==Ce?(r.bindFramebuffer(V,Ce),p[V]=Ce,V===r.DRAW_FRAMEBUFFER&&(p[r.FRAMEBUFFER]=Ce),V===r.FRAMEBUFFER&&(p[r.DRAW_FRAMEBUFFER]=Ce),!0):!1}function $e(V,Ce){let oe=_,de=!1;if(V){oe=m.get(Ce),oe===void 0&&(oe=[],m.set(Ce,oe));const Oe=V.textures;if(oe.length!==Oe.length||oe[0]!==r.COLOR_ATTACHMENT0){for(let Ie=0,ut=Oe.length;Ie<ut;Ie++)oe[Ie]=r.COLOR_ATTACHMENT0+Ie;oe.length=Oe.length,de=!0}}else oe[0]!==r.BACK&&(oe[0]=r.BACK,de=!0);de&&r.drawBuffers(oe)}function ct(V){return y!==V?(r.useProgram(V),y=V,!0):!1}const he={[Wr]:r.FUNC_ADD,[iv]:r.FUNC_SUBTRACT,[rv]:r.FUNC_REVERSE_SUBTRACT};he[sv]=r.MIN,he[ov]=r.MAX;const _e={[av]:r.ZERO,[lv]:r.ONE,[cv]:r.SRC_COLOR,[Mu]:r.SRC_ALPHA,[mv]:r.SRC_ALPHA_SATURATE,[fv]:r.DST_COLOR,[hv]:r.DST_ALPHA,[uv]:r.ONE_MINUS_SRC_COLOR,[Eu]:r.ONE_MINUS_SRC_ALPHA,[pv]:r.ONE_MINUS_DST_COLOR,[dv]:r.ONE_MINUS_DST_ALPHA,[gv]:r.CONSTANT_COLOR,[_v]:r.ONE_MINUS_CONSTANT_COLOR,[vv]:r.CONSTANT_ALPHA,[yv]:r.ONE_MINUS_CONSTANT_ALPHA};function k(V,Ce,oe,de,Oe,Ie,ut,Yt,hn,Dt){if(V===vr){S===!0&&(Qe(r.BLEND),S=!1);return}if(S===!1&&(ve(r.BLEND),S=!0),V!==nv){if(V!==x||Dt!==R){if((g!==Wr||T!==Wr)&&(r.blendEquation(r.FUNC_ADD),g=Wr,T=Wr),Dt)switch(V){case Rs:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case np:r.blendFunc(r.ONE,r.ONE);break;case ip:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case rp:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}else switch(V){case Rs:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case np:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case ip:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case rp:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}E=null,w=null,I=null,C=null,L.set(0,0,0),U=0,x=V,R=Dt}return}Oe=Oe||Ce,Ie=Ie||oe,ut=ut||de,(Ce!==g||Oe!==T)&&(r.blendEquationSeparate(he[Ce],he[Oe]),g=Ce,T=Oe),(oe!==E||de!==w||Ie!==I||ut!==C)&&(r.blendFuncSeparate(_e[oe],_e[de],_e[Ie],_e[ut]),E=oe,w=de,I=Ie,C=ut),(Yt.equals(L)===!1||hn!==U)&&(r.blendColor(Yt.r,Yt.g,Yt.b,hn),L.copy(Yt),U=hn),x=V,R=!1}function Je(V,Ce){V.side===Zi?Qe(r.CULL_FACE):ve(r.CULL_FACE);let oe=V.side===Gn;Ce&&(oe=!oe),ye(oe),V.blending===Rs&&V.transparent===!1?k(vr):k(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.blendColor,V.blendAlpha,V.premultipliedAlpha),a.setFunc(V.depthFunc),a.setTest(V.depthTest),a.setMask(V.depthWrite),s.setMask(V.colorWrite);const de=V.stencilWrite;c.setTest(de),de&&(c.setMask(V.stencilWriteMask),c.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),c.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),nt(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?ve(r.SAMPLE_ALPHA_TO_COVERAGE):Qe(r.SAMPLE_ALPHA_TO_COVERAGE)}function ye(V){b!==V&&(V?r.frontFace(r.CW):r.frontFace(r.CCW),b=V)}function ze(V){V!==$0?(ve(r.CULL_FACE),V!==O&&(V===tp?r.cullFace(r.BACK):V===ev?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Qe(r.CULL_FACE),O=V}function Te(V){V!==q&&($&&r.lineWidth(V),q=V)}function nt(V,Ce,oe){V?(ve(r.POLYGON_OFFSET_FILL),(Y!==Ce||Q!==oe)&&(r.polygonOffset(Ce,oe),Y=Ce,Q=oe)):Qe(r.POLYGON_OFFSET_FILL)}function De(V){V?ve(r.SCISSOR_TEST):Qe(r.SCISSOR_TEST)}function N(V){V===void 0&&(V=r.TEXTURE0+ae-1),Z!==V&&(r.activeTexture(V),Z=V)}function P(V,Ce,oe){oe===void 0&&(Z===null?oe=r.TEXTURE0+ae-1:oe=Z);let de=J[oe];de===void 0&&(de={type:void 0,texture:void 0},J[oe]=de),(de.type!==V||de.texture!==Ce)&&(Z!==oe&&(r.activeTexture(oe),Z=oe),r.bindTexture(V,Ce||we[V]),de.type=V,de.texture=Ce)}function K(){const V=J[Z];V!==void 0&&V.type!==void 0&&(r.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}function ce(){try{r.compressedTexImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function me(){try{r.compressedTexImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function ue(){try{r.texSubImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function qe(){try{r.texSubImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function be(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Fe(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function wt(){try{r.texStorage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Se(){try{r.texStorage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function ke(){try{r.texImage2D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function it(){try{r.texImage3D.apply(r,arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function at(V){Be.equals(V)===!1&&(r.scissor(V.x,V.y,V.z,V.w),Be.copy(V))}function He(V){ne.equals(V)===!1&&(r.viewport(V.x,V.y,V.z,V.w),ne.copy(V))}function bt(V,Ce){let oe=h.get(Ce);oe===void 0&&(oe=new WeakMap,h.set(Ce,oe));let de=oe.get(V);de===void 0&&(de=r.getUniformBlockIndex(Ce,V.name),oe.set(V,de))}function ht(V,Ce){const de=h.get(Ce).get(V);u.get(Ce)!==de&&(r.uniformBlockBinding(Ce,de,V.__bindingPointIndex),u.set(Ce,de))}function kt(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),a.setReversed(!1),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),d={},Z=null,J={},p={},m=new WeakMap,_=[],y=null,S=!1,x=null,g=null,E=null,w=null,T=null,I=null,C=null,L=new Ne(0,0,0),U=0,R=!1,b=null,O=null,q=null,Y=null,Q=null,Be.set(0,0,r.canvas.width,r.canvas.height),ne.set(0,0,r.canvas.width,r.canvas.height),s.reset(),a.reset(),c.reset()}return{buffers:{color:s,depth:a,stencil:c},enable:ve,disable:Qe,bindFramebuffer:st,drawBuffers:$e,useProgram:ct,setBlending:k,setMaterial:Je,setFlipSided:ye,setCullFace:ze,setLineWidth:Te,setPolygonOffset:nt,setScissorTest:De,activeTexture:N,bindTexture:P,unbindTexture:K,compressedTexImage2D:ce,compressedTexImage3D:me,texImage2D:ke,texImage3D:it,updateUBOMapping:bt,uniformBlockBinding:ht,texStorage2D:wt,texStorage3D:Se,texSubImage2D:ue,texSubImage3D:qe,compressedTexSubImage2D:be,compressedTexSubImage3D:Fe,scissor:at,viewport:He,reset:kt}}function gA(r,e){const t=r.image&&r.image.width?r.image.width/r.image.height:1;return t>e?(r.repeat.x=1,r.repeat.y=t/e,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2):(r.repeat.x=e/t,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0),r}function _A(r,e){const t=r.image&&r.image.width?r.image.width/r.image.height:1;return t>e?(r.repeat.x=e/t,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0):(r.repeat.x=1,r.repeat.y=t/e,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2),r}function vA(r){return r.repeat.x=1,r.repeat.y=1,r.offset.x=0,r.offset.y=0,r}function up(r,e,t,n){const i=yA(n);switch(t){case bp:return r*e;case Rp:return r*e;case Pp:return r*e*2;case gh:return r*e/i.components*i.byteLength;case ul:return r*e/i.components*i.byteLength;case Ip:return r*e*2/i.components*i.byteLength;case _h:return r*e*2/i.components*i.byteLength;case Cp:return r*e*3/i.components*i.byteLength;case On:return r*e*4/i.components*i.byteLength;case vh:return r*e*4/i.components*i.byteLength;case za:case Ba:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case ka:case Ha:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Lu:case Uu:return Math.max(r,16)*Math.max(e,8)/4;case Iu:case Du:return Math.max(r,8)*Math.max(e,8)/2;case Ou:case Nu:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case Fu:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case zu:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Bu:return Math.floor((r+4)/5)*Math.floor((e+3)/4)*16;case ku:return Math.floor((r+4)/5)*Math.floor((e+4)/5)*16;case Hu:return Math.floor((r+5)/6)*Math.floor((e+4)/5)*16;case Vu:return Math.floor((r+5)/6)*Math.floor((e+5)/6)*16;case Gu:return Math.floor((r+7)/8)*Math.floor((e+4)/5)*16;case Wu:return Math.floor((r+7)/8)*Math.floor((e+5)/6)*16;case Xu:return Math.floor((r+7)/8)*Math.floor((e+7)/8)*16;case Yu:return Math.floor((r+9)/10)*Math.floor((e+4)/5)*16;case qu:return Math.floor((r+9)/10)*Math.floor((e+5)/6)*16;case Zu:return Math.floor((r+9)/10)*Math.floor((e+7)/8)*16;case Ju:return Math.floor((r+9)/10)*Math.floor((e+9)/10)*16;case Ku:return Math.floor((r+11)/12)*Math.floor((e+9)/10)*16;case ju:return Math.floor((r+11)/12)*Math.floor((e+11)/12)*16;case Va:case Qu:case $u:return Math.ceil(r/4)*Math.ceil(e/4)*16;case Lp:case eh:return Math.ceil(r/4)*Math.ceil(e/4)*8;case th:case nh:return Math.ceil(r/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function yA(r){switch(r){case Ii:case Tp:return{byteLength:1,components:1};case zo:case wp:case Wo:return{byteLength:2,components:1};case ph:case mh:return{byteLength:2,components:4};case Mr:case fh:case ti:return{byteLength:4,components:1};case Ap:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${r}.`)}const xA={contain:gA,cover:_A,fill:vA,getByteLength:up};function SA(r,e,t,n,i,s,a){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new fe,d=new WeakMap;let p;const m=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(N,P){return _?new OffscreenCanvas(N,P):el("canvas")}function S(N,P,K){let ce=1;const me=De(N);if((me.width>K||me.height>K)&&(ce=K/Math.max(me.width,me.height)),ce<1)if(typeof HTMLImageElement<"u"&&N instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&N instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&N instanceof ImageBitmap||typeof VideoFrame<"u"&&N instanceof VideoFrame){const ue=Math.floor(ce*me.width),qe=Math.floor(ce*me.height);p===void 0&&(p=y(ue,qe));const be=P?y(ue,qe):p;return be.width=ue,be.height=qe,be.getContext("2d").drawImage(N,0,0,ue,qe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+me.width+"x"+me.height+") to ("+ue+"x"+qe+")."),be}else return"data"in N&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+me.width+"x"+me.height+")."),N;return N}function x(N){return N.generateMipmaps}function g(N){r.generateMipmap(N)}function E(N){return N.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:N.isWebGL3DRenderTarget?r.TEXTURE_3D:N.isWebGLArrayRenderTarget||N.isCompressedArrayTexture?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D}function w(N,P,K,ce,me=!1){if(N!==null){if(r[N]!==void 0)return r[N];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+N+"'")}let ue=P;if(P===r.RED&&(K===r.FLOAT&&(ue=r.R32F),K===r.HALF_FLOAT&&(ue=r.R16F),K===r.UNSIGNED_BYTE&&(ue=r.R8)),P===r.RED_INTEGER&&(K===r.UNSIGNED_BYTE&&(ue=r.R8UI),K===r.UNSIGNED_SHORT&&(ue=r.R16UI),K===r.UNSIGNED_INT&&(ue=r.R32UI),K===r.BYTE&&(ue=r.R8I),K===r.SHORT&&(ue=r.R16I),K===r.INT&&(ue=r.R32I)),P===r.RG&&(K===r.FLOAT&&(ue=r.RG32F),K===r.HALF_FLOAT&&(ue=r.RG16F),K===r.UNSIGNED_BYTE&&(ue=r.RG8)),P===r.RG_INTEGER&&(K===r.UNSIGNED_BYTE&&(ue=r.RG8UI),K===r.UNSIGNED_SHORT&&(ue=r.RG16UI),K===r.UNSIGNED_INT&&(ue=r.RG32UI),K===r.BYTE&&(ue=r.RG8I),K===r.SHORT&&(ue=r.RG16I),K===r.INT&&(ue=r.RG32I)),P===r.RGB_INTEGER&&(K===r.UNSIGNED_BYTE&&(ue=r.RGB8UI),K===r.UNSIGNED_SHORT&&(ue=r.RGB16UI),K===r.UNSIGNED_INT&&(ue=r.RGB32UI),K===r.BYTE&&(ue=r.RGB8I),K===r.SHORT&&(ue=r.RGB16I),K===r.INT&&(ue=r.RGB32I)),P===r.RGBA_INTEGER&&(K===r.UNSIGNED_BYTE&&(ue=r.RGBA8UI),K===r.UNSIGNED_SHORT&&(ue=r.RGBA16UI),K===r.UNSIGNED_INT&&(ue=r.RGBA32UI),K===r.BYTE&&(ue=r.RGBA8I),K===r.SHORT&&(ue=r.RGBA16I),K===r.INT&&(ue=r.RGBA32I)),P===r.RGB&&K===r.UNSIGNED_INT_5_9_9_9_REV&&(ue=r.RGB9_E5),P===r.RGBA){const qe=me?hl:Rt.getTransfer(ce);K===r.FLOAT&&(ue=r.RGBA32F),K===r.HALF_FLOAT&&(ue=r.RGBA16F),K===r.UNSIGNED_BYTE&&(ue=qe===Bt?r.SRGB8_ALPHA8:r.RGBA8),K===r.UNSIGNED_SHORT_4_4_4_4&&(ue=r.RGBA4),K===r.UNSIGNED_SHORT_5_5_5_1&&(ue=r.RGB5_A1)}return(ue===r.R16F||ue===r.R32F||ue===r.RG16F||ue===r.RG32F||ue===r.RGBA16F||ue===r.RGBA32F)&&e.get("EXT_color_buffer_float"),ue}function T(N,P){let K;return N?P===null||P===Mr||P===Os?K=r.DEPTH24_STENCIL8:P===ti?K=r.DEPTH32F_STENCIL8:P===zo&&(K=r.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):P===null||P===Mr||P===Os?K=r.DEPTH_COMPONENT24:P===ti?K=r.DEPTH_COMPONENT32F:P===zo&&(K=r.DEPTH_COMPONENT16),K}function I(N,P){return x(N)===!0||N.isFramebufferTexture&&N.minFilter!==wn&&N.minFilter!==pn?Math.log2(Math.max(P.width,P.height))+1:N.mipmaps!==void 0&&N.mipmaps.length>0?N.mipmaps.length:N.isCompressedTexture&&Array.isArray(N.image)?P.mipmaps.length:1}function C(N){const P=N.target;P.removeEventListener("dispose",C),U(P),P.isVideoTexture&&d.delete(P)}function L(N){const P=N.target;P.removeEventListener("dispose",L),b(P)}function U(N){const P=n.get(N);if(P.__webglInit===void 0)return;const K=N.source,ce=m.get(K);if(ce){const me=ce[P.__cacheKey];me.usedTimes--,me.usedTimes===0&&R(N),Object.keys(ce).length===0&&m.delete(K)}n.remove(N)}function R(N){const P=n.get(N);r.deleteTexture(P.__webglTexture);const K=N.source,ce=m.get(K);delete ce[P.__cacheKey],a.memory.textures--}function b(N){const P=n.get(N);if(N.depthTexture&&(N.depthTexture.dispose(),n.remove(N.depthTexture)),N.isWebGLCubeRenderTarget)for(let ce=0;ce<6;ce++){if(Array.isArray(P.__webglFramebuffer[ce]))for(let me=0;me<P.__webglFramebuffer[ce].length;me++)r.deleteFramebuffer(P.__webglFramebuffer[ce][me]);else r.deleteFramebuffer(P.__webglFramebuffer[ce]);P.__webglDepthbuffer&&r.deleteRenderbuffer(P.__webglDepthbuffer[ce])}else{if(Array.isArray(P.__webglFramebuffer))for(let ce=0;ce<P.__webglFramebuffer.length;ce++)r.deleteFramebuffer(P.__webglFramebuffer[ce]);else r.deleteFramebuffer(P.__webglFramebuffer);if(P.__webglDepthbuffer&&r.deleteRenderbuffer(P.__webglDepthbuffer),P.__webglMultisampledFramebuffer&&r.deleteFramebuffer(P.__webglMultisampledFramebuffer),P.__webglColorRenderbuffer)for(let ce=0;ce<P.__webglColorRenderbuffer.length;ce++)P.__webglColorRenderbuffer[ce]&&r.deleteRenderbuffer(P.__webglColorRenderbuffer[ce]);P.__webglDepthRenderbuffer&&r.deleteRenderbuffer(P.__webglDepthRenderbuffer)}const K=N.textures;for(let ce=0,me=K.length;ce<me;ce++){const ue=n.get(K[ce]);ue.__webglTexture&&(r.deleteTexture(ue.__webglTexture),a.memory.textures--),n.remove(K[ce])}n.remove(N)}let O=0;function q(){O=0}function Y(){const N=O;return N>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+N+" texture units while this GPU supports only "+i.maxTextures),O+=1,N}function Q(N){const P=[];return P.push(N.wrapS),P.push(N.wrapT),P.push(N.wrapR||0),P.push(N.magFilter),P.push(N.minFilter),P.push(N.anisotropy),P.push(N.internalFormat),P.push(N.format),P.push(N.type),P.push(N.generateMipmaps),P.push(N.premultiplyAlpha),P.push(N.flipY),P.push(N.unpackAlignment),P.push(N.colorSpace),P.join()}function ae(N,P){const K=n.get(N);if(N.isVideoTexture&&Te(N),N.isRenderTargetTexture===!1&&N.version>0&&K.__version!==N.version){const ce=N.image;if(ce===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ce.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ne(K,N,P);return}}t.bindTexture(r.TEXTURE_2D,K.__webglTexture,r.TEXTURE0+P)}function $(N,P){const K=n.get(N);if(N.version>0&&K.__version!==N.version){ne(K,N,P);return}t.bindTexture(r.TEXTURE_2D_ARRAY,K.__webglTexture,r.TEXTURE0+P)}function pe(N,P){const K=n.get(N);if(N.version>0&&K.__version!==N.version){ne(K,N,P);return}t.bindTexture(r.TEXTURE_3D,K.__webglTexture,r.TEXTURE0+P)}function z(N,P){const K=n.get(N);if(N.version>0&&K.__version!==N.version){ge(K,N,P);return}t.bindTexture(r.TEXTURE_CUBE_MAP,K.__webglTexture,r.TEXTURE0+P)}const Z={[Za]:r.REPEAT,[Si]:r.CLAMP_TO_EDGE,[Ja]:r.MIRRORED_REPEAT},J={[wn]:r.NEAREST,[Ep]:r.NEAREST_MIPMAP_NEAREST,[Io]:r.NEAREST_MIPMAP_LINEAR,[pn]:r.LINEAR,[Fa]:r.LINEAR_MIPMAP_NEAREST,[Ji]:r.LINEAR_MIPMAP_LINEAR},re={[Ov]:r.NEVER,[Hv]:r.ALWAYS,[Nv]:r.LESS,[Up]:r.LEQUAL,[Fv]:r.EQUAL,[kv]:r.GEQUAL,[zv]:r.GREATER,[Bv]:r.NOTEQUAL};function xe(N,P){if(P.type===ti&&e.has("OES_texture_float_linear")===!1&&(P.magFilter===pn||P.magFilter===Fa||P.magFilter===Io||P.magFilter===Ji||P.minFilter===pn||P.minFilter===Fa||P.minFilter===Io||P.minFilter===Ji)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(N,r.TEXTURE_WRAP_S,Z[P.wrapS]),r.texParameteri(N,r.TEXTURE_WRAP_T,Z[P.wrapT]),(N===r.TEXTURE_3D||N===r.TEXTURE_2D_ARRAY)&&r.texParameteri(N,r.TEXTURE_WRAP_R,Z[P.wrapR]),r.texParameteri(N,r.TEXTURE_MAG_FILTER,J[P.magFilter]),r.texParameteri(N,r.TEXTURE_MIN_FILTER,J[P.minFilter]),P.compareFunction&&(r.texParameteri(N,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(N,r.TEXTURE_COMPARE_FUNC,re[P.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(P.magFilter===wn||P.minFilter!==Io&&P.minFilter!==Ji||P.type===ti&&e.has("OES_texture_float_linear")===!1)return;if(P.anisotropy>1||n.get(P).__currentAnisotropy){const K=e.get("EXT_texture_filter_anisotropic");r.texParameterf(N,K.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy}}}function Be(N,P){let K=!1;N.__webglInit===void 0&&(N.__webglInit=!0,P.addEventListener("dispose",C));const ce=P.source;let me=m.get(ce);me===void 0&&(me={},m.set(ce,me));const ue=Q(P);if(ue!==N.__cacheKey){me[ue]===void 0&&(me[ue]={texture:r.createTexture(),usedTimes:0},a.memory.textures++,K=!0),me[ue].usedTimes++;const qe=me[N.__cacheKey];qe!==void 0&&(me[N.__cacheKey].usedTimes--,qe.usedTimes===0&&R(P)),N.__cacheKey=ue,N.__webglTexture=me[ue].texture}return K}function ne(N,P,K){let ce=r.TEXTURE_2D;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(ce=r.TEXTURE_2D_ARRAY),P.isData3DTexture&&(ce=r.TEXTURE_3D);const me=Be(N,P),ue=P.source;t.bindTexture(ce,N.__webglTexture,r.TEXTURE0+K);const qe=n.get(ue);if(ue.version!==qe.__version||me===!0){t.activeTexture(r.TEXTURE0+K);const be=Rt.getPrimaries(Rt.workingColorSpace),Fe=P.colorSpace===mr?null:Rt.getPrimaries(P.colorSpace),wt=P.colorSpace===mr||be===Fe?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,wt);let Se=S(P.image,!1,i.maxTextureSize);Se=nt(P,Se);const ke=s.convert(P.format,P.colorSpace),it=s.convert(P.type);let at=w(P.internalFormat,ke,it,P.colorSpace,P.isVideoTexture);xe(ce,P);let He;const bt=P.mipmaps,ht=P.isVideoTexture!==!0,kt=qe.__version===void 0||me===!0,V=ue.dataReady,Ce=I(P,Se);if(P.isDepthTexture)at=T(P.format===Ns,P.type),kt&&(ht?t.texStorage2D(r.TEXTURE_2D,1,at,Se.width,Se.height):t.texImage2D(r.TEXTURE_2D,0,at,Se.width,Se.height,0,ke,it,null));else if(P.isDataTexture)if(bt.length>0){ht&&kt&&t.texStorage2D(r.TEXTURE_2D,Ce,at,bt[0].width,bt[0].height);for(let oe=0,de=bt.length;oe<de;oe++)He=bt[oe],ht?V&&t.texSubImage2D(r.TEXTURE_2D,oe,0,0,He.width,He.height,ke,it,He.data):t.texImage2D(r.TEXTURE_2D,oe,at,He.width,He.height,0,ke,it,He.data);P.generateMipmaps=!1}else ht?(kt&&t.texStorage2D(r.TEXTURE_2D,Ce,at,Se.width,Se.height),V&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Se.width,Se.height,ke,it,Se.data)):t.texImage2D(r.TEXTURE_2D,0,at,Se.width,Se.height,0,ke,it,Se.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){ht&&kt&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ce,at,bt[0].width,bt[0].height,Se.depth);for(let oe=0,de=bt.length;oe<de;oe++)if(He=bt[oe],P.format!==On)if(ke!==null)if(ht){if(V)if(P.layerUpdates.size>0){const Oe=up(He.width,He.height,P.format,P.type);for(const Ie of P.layerUpdates){const ut=He.data.subarray(Ie*Oe/He.data.BYTES_PER_ELEMENT,(Ie+1)*Oe/He.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,oe,0,0,Ie,He.width,He.height,1,ke,ut)}P.clearLayerUpdates()}else t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,oe,0,0,0,He.width,He.height,Se.depth,ke,He.data)}else t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,oe,at,He.width,He.height,Se.depth,0,He.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else ht?V&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,oe,0,0,0,He.width,He.height,Se.depth,ke,it,He.data):t.texImage3D(r.TEXTURE_2D_ARRAY,oe,at,He.width,He.height,Se.depth,0,ke,it,He.data)}else{ht&&kt&&t.texStorage2D(r.TEXTURE_2D,Ce,at,bt[0].width,bt[0].height);for(let oe=0,de=bt.length;oe<de;oe++)He=bt[oe],P.format!==On?ke!==null?ht?V&&t.compressedTexSubImage2D(r.TEXTURE_2D,oe,0,0,He.width,He.height,ke,He.data):t.compressedTexImage2D(r.TEXTURE_2D,oe,at,He.width,He.height,0,He.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ht?V&&t.texSubImage2D(r.TEXTURE_2D,oe,0,0,He.width,He.height,ke,it,He.data):t.texImage2D(r.TEXTURE_2D,oe,at,He.width,He.height,0,ke,it,He.data)}else if(P.isDataArrayTexture)if(ht){if(kt&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ce,at,Se.width,Se.height,Se.depth),V)if(P.layerUpdates.size>0){const oe=up(Se.width,Se.height,P.format,P.type);for(const de of P.layerUpdates){const Oe=Se.data.subarray(de*oe/Se.data.BYTES_PER_ELEMENT,(de+1)*oe/Se.data.BYTES_PER_ELEMENT);t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,de,Se.width,Se.height,1,ke,it,Oe)}P.clearLayerUpdates()}else t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,Se.width,Se.height,Se.depth,ke,it,Se.data)}else t.texImage3D(r.TEXTURE_2D_ARRAY,0,at,Se.width,Se.height,Se.depth,0,ke,it,Se.data);else if(P.isData3DTexture)ht?(kt&&t.texStorage3D(r.TEXTURE_3D,Ce,at,Se.width,Se.height,Se.depth),V&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,Se.width,Se.height,Se.depth,ke,it,Se.data)):t.texImage3D(r.TEXTURE_3D,0,at,Se.width,Se.height,Se.depth,0,ke,it,Se.data);else if(P.isFramebufferTexture){if(kt)if(ht)t.texStorage2D(r.TEXTURE_2D,Ce,at,Se.width,Se.height);else{let oe=Se.width,de=Se.height;for(let Oe=0;Oe<Ce;Oe++)t.texImage2D(r.TEXTURE_2D,Oe,at,oe,de,0,ke,it,null),oe>>=1,de>>=1}}else if(bt.length>0){if(ht&&kt){const oe=De(bt[0]);t.texStorage2D(r.TEXTURE_2D,Ce,at,oe.width,oe.height)}for(let oe=0,de=bt.length;oe<de;oe++)He=bt[oe],ht?V&&t.texSubImage2D(r.TEXTURE_2D,oe,0,0,ke,it,He):t.texImage2D(r.TEXTURE_2D,oe,at,ke,it,He);P.generateMipmaps=!1}else if(ht){if(kt){const oe=De(Se);t.texStorage2D(r.TEXTURE_2D,Ce,at,oe.width,oe.height)}V&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,ke,it,Se)}else t.texImage2D(r.TEXTURE_2D,0,at,ke,it,Se);x(P)&&g(ce),qe.__version=ue.version,P.onUpdate&&P.onUpdate(P)}N.__version=P.version}function ge(N,P,K){if(P.image.length!==6)return;const ce=Be(N,P),me=P.source;t.bindTexture(r.TEXTURE_CUBE_MAP,N.__webglTexture,r.TEXTURE0+K);const ue=n.get(me);if(me.version!==ue.__version||ce===!0){t.activeTexture(r.TEXTURE0+K);const qe=Rt.getPrimaries(Rt.workingColorSpace),be=P.colorSpace===mr?null:Rt.getPrimaries(P.colorSpace),Fe=P.colorSpace===mr||qe===be?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Fe);const wt=P.isCompressedTexture||P.image[0].isCompressedTexture,Se=P.image[0]&&P.image[0].isDataTexture,ke=[];for(let de=0;de<6;de++)!wt&&!Se?ke[de]=S(P.image[de],!0,i.maxCubemapSize):ke[de]=Se?P.image[de].image:P.image[de],ke[de]=nt(P,ke[de]);const it=ke[0],at=s.convert(P.format,P.colorSpace),He=s.convert(P.type),bt=w(P.internalFormat,at,He,P.colorSpace),ht=P.isVideoTexture!==!0,kt=ue.__version===void 0||ce===!0,V=me.dataReady;let Ce=I(P,it);xe(r.TEXTURE_CUBE_MAP,P);let oe;if(wt){ht&&kt&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Ce,bt,it.width,it.height);for(let de=0;de<6;de++){oe=ke[de].mipmaps;for(let Oe=0;Oe<oe.length;Oe++){const Ie=oe[Oe];P.format!==On?at!==null?ht?V&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+de,Oe,0,0,Ie.width,Ie.height,at,Ie.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+de,Oe,bt,Ie.width,Ie.height,0,Ie.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):ht?V&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+de,Oe,0,0,Ie.width,Ie.height,at,He,Ie.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+de,Oe,bt,Ie.width,Ie.height,0,at,He,Ie.data)}}}else{if(oe=P.mipmaps,ht&&kt){oe.length>0&&Ce++;const de=De(ke[0]);t.texStorage2D(r.TEXTURE_CUBE_MAP,Ce,bt,de.width,de.height)}for(let de=0;de<6;de++)if(Se){ht?V&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,0,0,ke[de].width,ke[de].height,at,He,ke[de].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,bt,ke[de].width,ke[de].height,0,at,He,ke[de].data);for(let Oe=0;Oe<oe.length;Oe++){const ut=oe[Oe].image[de].image;ht?V&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+de,Oe+1,0,0,ut.width,ut.height,at,He,ut.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+de,Oe+1,bt,ut.width,ut.height,0,at,He,ut.data)}}else{ht?V&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,0,0,at,He,ke[de]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+de,0,bt,at,He,ke[de]);for(let Oe=0;Oe<oe.length;Oe++){const Ie=oe[Oe];ht?V&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+de,Oe+1,0,0,at,He,Ie.image[de]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+de,Oe+1,bt,at,He,Ie.image[de])}}}x(P)&&g(r.TEXTURE_CUBE_MAP),ue.__version=me.version,P.onUpdate&&P.onUpdate(P)}N.__version=P.version}function we(N,P,K,ce,me,ue){const qe=s.convert(K.format,K.colorSpace),be=s.convert(K.type),Fe=w(K.internalFormat,qe,be,K.colorSpace),wt=n.get(P),Se=n.get(K);if(Se.__renderTarget=P,!wt.__hasExternalTextures){const ke=Math.max(1,P.width>>ue),it=Math.max(1,P.height>>ue);me===r.TEXTURE_3D||me===r.TEXTURE_2D_ARRAY?t.texImage3D(me,ue,Fe,ke,it,P.depth,0,qe,be,null):t.texImage2D(me,ue,Fe,ke,it,0,qe,be,null)}t.bindFramebuffer(r.FRAMEBUFFER,N),ze(P)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,ce,me,Se.__webglTexture,0,ye(P)):(me===r.TEXTURE_2D||me>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&me<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,ce,me,Se.__webglTexture,ue),t.bindFramebuffer(r.FRAMEBUFFER,null)}function ve(N,P,K){if(r.bindRenderbuffer(r.RENDERBUFFER,N),P.depthBuffer){const ce=P.depthTexture,me=ce&&ce.isDepthTexture?ce.type:null,ue=T(P.stencilBuffer,me),qe=P.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,be=ye(P);ze(P)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,be,ue,P.width,P.height):K?r.renderbufferStorageMultisample(r.RENDERBUFFER,be,ue,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,ue,P.width,P.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,qe,r.RENDERBUFFER,N)}else{const ce=P.textures;for(let me=0;me<ce.length;me++){const ue=ce[me],qe=s.convert(ue.format,ue.colorSpace),be=s.convert(ue.type),Fe=w(ue.internalFormat,qe,be,ue.colorSpace),wt=ye(P);K&&ze(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,wt,Fe,P.width,P.height):ze(P)?c.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,wt,Fe,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,Fe,P.width,P.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function Qe(N,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,N),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const ce=n.get(P.depthTexture);ce.__renderTarget=P,(!ce.__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),ae(P.depthTexture,0);const me=ce.__webglTexture,ue=ye(P);if(P.depthTexture.format===Ps)ze(P)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,me,0,ue):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,me,0);else if(P.depthTexture.format===Ns)ze(P)?c.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,me,0,ue):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,me,0);else throw new Error("Unknown depthTexture format")}function st(N){const P=n.get(N),K=N.isWebGLCubeRenderTarget===!0;if(P.__boundDepthTexture!==N.depthTexture){const ce=N.depthTexture;if(P.__depthDisposeCallback&&P.__depthDisposeCallback(),ce){const me=()=>{delete P.__boundDepthTexture,delete P.__depthDisposeCallback,ce.removeEventListener("dispose",me)};ce.addEventListener("dispose",me),P.__depthDisposeCallback=me}P.__boundDepthTexture=ce}if(N.depthTexture&&!P.__autoAllocateDepthBuffer){if(K)throw new Error("target.depthTexture not supported in Cube render targets");Qe(P.__webglFramebuffer,N)}else if(K){P.__webglDepthbuffer=[];for(let ce=0;ce<6;ce++)if(t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer[ce]),P.__webglDepthbuffer[ce]===void 0)P.__webglDepthbuffer[ce]=r.createRenderbuffer(),ve(P.__webglDepthbuffer[ce],N,!1);else{const me=N.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,ue=P.__webglDepthbuffer[ce];r.bindRenderbuffer(r.RENDERBUFFER,ue),r.framebufferRenderbuffer(r.FRAMEBUFFER,me,r.RENDERBUFFER,ue)}}else if(t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer),P.__webglDepthbuffer===void 0)P.__webglDepthbuffer=r.createRenderbuffer(),ve(P.__webglDepthbuffer,N,!1);else{const ce=N.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,me=P.__webglDepthbuffer;r.bindRenderbuffer(r.RENDERBUFFER,me),r.framebufferRenderbuffer(r.FRAMEBUFFER,ce,r.RENDERBUFFER,me)}t.bindFramebuffer(r.FRAMEBUFFER,null)}function $e(N,P,K){const ce=n.get(N);P!==void 0&&we(ce.__webglFramebuffer,N,N.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),K!==void 0&&st(N)}function ct(N){const P=N.texture,K=n.get(N),ce=n.get(P);N.addEventListener("dispose",L);const me=N.textures,ue=N.isWebGLCubeRenderTarget===!0,qe=me.length>1;if(qe||(ce.__webglTexture===void 0&&(ce.__webglTexture=r.createTexture()),ce.__version=P.version,a.memory.textures++),ue){K.__webglFramebuffer=[];for(let be=0;be<6;be++)if(P.mipmaps&&P.mipmaps.length>0){K.__webglFramebuffer[be]=[];for(let Fe=0;Fe<P.mipmaps.length;Fe++)K.__webglFramebuffer[be][Fe]=r.createFramebuffer()}else K.__webglFramebuffer[be]=r.createFramebuffer()}else{if(P.mipmaps&&P.mipmaps.length>0){K.__webglFramebuffer=[];for(let be=0;be<P.mipmaps.length;be++)K.__webglFramebuffer[be]=r.createFramebuffer()}else K.__webglFramebuffer=r.createFramebuffer();if(qe)for(let be=0,Fe=me.length;be<Fe;be++){const wt=n.get(me[be]);wt.__webglTexture===void 0&&(wt.__webglTexture=r.createTexture(),a.memory.textures++)}if(N.samples>0&&ze(N)===!1){K.__webglMultisampledFramebuffer=r.createFramebuffer(),K.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,K.__webglMultisampledFramebuffer);for(let be=0;be<me.length;be++){const Fe=me[be];K.__webglColorRenderbuffer[be]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,K.__webglColorRenderbuffer[be]);const wt=s.convert(Fe.format,Fe.colorSpace),Se=s.convert(Fe.type),ke=w(Fe.internalFormat,wt,Se,Fe.colorSpace,N.isXRRenderTarget===!0),it=ye(N);r.renderbufferStorageMultisample(r.RENDERBUFFER,it,ke,N.width,N.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+be,r.RENDERBUFFER,K.__webglColorRenderbuffer[be])}r.bindRenderbuffer(r.RENDERBUFFER,null),N.depthBuffer&&(K.__webglDepthRenderbuffer=r.createRenderbuffer(),ve(K.__webglDepthRenderbuffer,N,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(ue){t.bindTexture(r.TEXTURE_CUBE_MAP,ce.__webglTexture),xe(r.TEXTURE_CUBE_MAP,P);for(let be=0;be<6;be++)if(P.mipmaps&&P.mipmaps.length>0)for(let Fe=0;Fe<P.mipmaps.length;Fe++)we(K.__webglFramebuffer[be][Fe],N,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+be,Fe);else we(K.__webglFramebuffer[be],N,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+be,0);x(P)&&g(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(qe){for(let be=0,Fe=me.length;be<Fe;be++){const wt=me[be],Se=n.get(wt);t.bindTexture(r.TEXTURE_2D,Se.__webglTexture),xe(r.TEXTURE_2D,wt),we(K.__webglFramebuffer,N,wt,r.COLOR_ATTACHMENT0+be,r.TEXTURE_2D,0),x(wt)&&g(r.TEXTURE_2D)}t.unbindTexture()}else{let be=r.TEXTURE_2D;if((N.isWebGL3DRenderTarget||N.isWebGLArrayRenderTarget)&&(be=N.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),t.bindTexture(be,ce.__webglTexture),xe(be,P),P.mipmaps&&P.mipmaps.length>0)for(let Fe=0;Fe<P.mipmaps.length;Fe++)we(K.__webglFramebuffer[Fe],N,P,r.COLOR_ATTACHMENT0,be,Fe);else we(K.__webglFramebuffer,N,P,r.COLOR_ATTACHMENT0,be,0);x(P)&&g(be),t.unbindTexture()}N.depthBuffer&&st(N)}function he(N){const P=N.textures;for(let K=0,ce=P.length;K<ce;K++){const me=P[K];if(x(me)){const ue=E(N),qe=n.get(me).__webglTexture;t.bindTexture(ue,qe),g(ue),t.unbindTexture()}}}const _e=[],k=[];function Je(N){if(N.samples>0){if(ze(N)===!1){const P=N.textures,K=N.width,ce=N.height;let me=r.COLOR_BUFFER_BIT;const ue=N.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,qe=n.get(N),be=P.length>1;if(be)for(let Fe=0;Fe<P.length;Fe++)t.bindFramebuffer(r.FRAMEBUFFER,qe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Fe,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,qe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Fe,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,qe.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,qe.__webglFramebuffer);for(let Fe=0;Fe<P.length;Fe++){if(N.resolveDepthBuffer&&(N.depthBuffer&&(me|=r.DEPTH_BUFFER_BIT),N.stencilBuffer&&N.resolveStencilBuffer&&(me|=r.STENCIL_BUFFER_BIT)),be){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,qe.__webglColorRenderbuffer[Fe]);const wt=n.get(P[Fe]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,wt,0)}r.blitFramebuffer(0,0,K,ce,0,0,K,ce,me,r.NEAREST),u===!0&&(_e.length=0,k.length=0,_e.push(r.COLOR_ATTACHMENT0+Fe),N.depthBuffer&&N.resolveDepthBuffer===!1&&(_e.push(ue),k.push(ue),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,k)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,_e))}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),be)for(let Fe=0;Fe<P.length;Fe++){t.bindFramebuffer(r.FRAMEBUFFER,qe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Fe,r.RENDERBUFFER,qe.__webglColorRenderbuffer[Fe]);const wt=n.get(P[Fe]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,qe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Fe,r.TEXTURE_2D,wt,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,qe.__webglMultisampledFramebuffer)}else if(N.depthBuffer&&N.resolveDepthBuffer===!1&&u){const P=N.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[P])}}}function ye(N){return Math.min(i.maxSamples,N.samples)}function ze(N){const P=n.get(N);return N.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function Te(N){const P=a.render.frame;d.get(N)!==P&&(d.set(N,P),N.update())}function nt(N,P){const K=N.colorSpace,ce=N.format,me=N.type;return N.isCompressedTexture===!0||N.isVideoTexture===!0||K!==Bs&&K!==mr&&(Rt.getTransfer(K)===Bt?(ce!==On||me!==Ii)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",K)),P}function De(N){return typeof HTMLImageElement<"u"&&N instanceof HTMLImageElement?(h.width=N.naturalWidth||N.width,h.height=N.naturalHeight||N.height):typeof VideoFrame<"u"&&N instanceof VideoFrame?(h.width=N.displayWidth,h.height=N.displayHeight):(h.width=N.width,h.height=N.height),h}this.allocateTextureUnit=Y,this.resetTextureUnits=q,this.setTexture2D=ae,this.setTexture2DArray=$,this.setTexture3D=pe,this.setTextureCube=z,this.rebindTextures=$e,this.setupRenderTarget=ct,this.updateRenderTargetMipmap=he,this.updateMultisampleRenderTarget=Je,this.setupDepthRenderbuffer=st,this.setupFrameBufferTexture=we,this.useMultisampledRTT=ze}function iy(r,e){function t(n,i=mr){let s;const a=Rt.getTransfer(i);if(n===Ii)return r.UNSIGNED_BYTE;if(n===ph)return r.UNSIGNED_SHORT_4_4_4_4;if(n===mh)return r.UNSIGNED_SHORT_5_5_5_1;if(n===Ap)return r.UNSIGNED_INT_5_9_9_9_REV;if(n===Tp)return r.BYTE;if(n===wp)return r.SHORT;if(n===zo)return r.UNSIGNED_SHORT;if(n===fh)return r.INT;if(n===Mr)return r.UNSIGNED_INT;if(n===ti)return r.FLOAT;if(n===Wo)return r.HALF_FLOAT;if(n===bp)return r.ALPHA;if(n===Cp)return r.RGB;if(n===On)return r.RGBA;if(n===Rp)return r.LUMINANCE;if(n===Pp)return r.LUMINANCE_ALPHA;if(n===Ps)return r.DEPTH_COMPONENT;if(n===Ns)return r.DEPTH_STENCIL;if(n===gh)return r.RED;if(n===ul)return r.RED_INTEGER;if(n===Ip)return r.RG;if(n===_h)return r.RG_INTEGER;if(n===vh)return r.RGBA_INTEGER;if(n===za||n===Ba||n===ka||n===Ha)if(a===Bt)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===za)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Ba)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===ka)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Ha)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===za)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Ba)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===ka)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Ha)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Iu||n===Lu||n===Du||n===Uu)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===Iu)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Lu)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Du)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Uu)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Ou||n===Nu||n===Fu)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===Ou||n===Nu)return a===Bt?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===Fu)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===zu||n===Bu||n===ku||n===Hu||n===Vu||n===Gu||n===Wu||n===Xu||n===Yu||n===qu||n===Zu||n===Ju||n===Ku||n===ju)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===zu)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Bu)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===ku)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Hu)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Vu)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Gu)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Wu)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Xu)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Yu)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===qu)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Zu)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Ju)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Ku)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===ju)return a===Bt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Va||n===Qu||n===$u)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===Va)return a===Bt?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Qu)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===$u)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Lp||n===eh||n===th||n===nh)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===Va)return s.COMPRESSED_RED_RGTC1_EXT;if(n===eh)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===th)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===nh)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Os?r.UNSIGNED_INT_24_8:r[n]!==void 0?r[n]:null}return{convert:t}}class ry extends En{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Uo extends Lt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const MA={type:"move"};class Sf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Uo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Uo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new F,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new F),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Uo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new F,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new F),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,a=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){a=!0;for(const S of e.hand.values()){const x=t.getJointPose(S,n),g=this._getHandJoint(h,S);x!==null&&(g.matrix.fromArray(x.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=x.radius),g.visible=x!==null}const d=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=d.position.distanceTo(p.position),_=.02,y=.005;h.inputState.pinching&&m>_+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=_-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(MA)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Uo;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const EA=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,TA=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class wA{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new $t,s=e.properties.get(i);s.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new Di({vertexShader:EA,fragmentShader:TA,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new un(new Yo(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class AA extends er{constructor(e,t){super();const n=this;let i=null,s=1,a=null,c="local-floor",u=1,h=null,d=null,p=null,m=null,_=null,y=null;const S=new wA,x=t.getContextAttributes();let g=null,E=null;const w=[],T=[],I=new fe;let C=null;const L=new En;L.viewport=new Pt;const U=new En;U.viewport=new Pt;const R=[L,U],b=new ry;let O=null,q=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ne){let ge=w[ne];return ge===void 0&&(ge=new Sf,w[ne]=ge),ge.getTargetRaySpace()},this.getControllerGrip=function(ne){let ge=w[ne];return ge===void 0&&(ge=new Sf,w[ne]=ge),ge.getGripSpace()},this.getHand=function(ne){let ge=w[ne];return ge===void 0&&(ge=new Sf,w[ne]=ge),ge.getHandSpace()};function Y(ne){const ge=T.indexOf(ne.inputSource);if(ge===-1)return;const we=w[ge];we!==void 0&&(we.update(ne.inputSource,ne.frame,h||a),we.dispatchEvent({type:ne.type,data:ne.inputSource}))}function Q(){i.removeEventListener("select",Y),i.removeEventListener("selectstart",Y),i.removeEventListener("selectend",Y),i.removeEventListener("squeeze",Y),i.removeEventListener("squeezestart",Y),i.removeEventListener("squeezeend",Y),i.removeEventListener("end",Q),i.removeEventListener("inputsourceschange",ae);for(let ne=0;ne<w.length;ne++){const ge=T[ne];ge!==null&&(T[ne]=null,w[ne].disconnect(ge))}O=null,q=null,S.reset(),e.setRenderTarget(g),_=null,m=null,p=null,i=null,E=null,Be.stop(),n.isPresenting=!1,e.setPixelRatio(C),e.setSize(I.width,I.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ne){s=ne,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ne){c=ne,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||a},this.setReferenceSpace=function(ne){h=ne},this.getBaseLayer=function(){return m!==null?m:_},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(ne){if(i=ne,i!==null){if(g=e.getRenderTarget(),i.addEventListener("select",Y),i.addEventListener("selectstart",Y),i.addEventListener("selectend",Y),i.addEventListener("squeeze",Y),i.addEventListener("squeezestart",Y),i.addEventListener("squeezeend",Y),i.addEventListener("end",Q),i.addEventListener("inputsourceschange",ae),x.xrCompatible!==!0&&await t.makeXRCompatible(),C=e.getPixelRatio(),e.getSize(I),i.renderState.layers===void 0){const ge={antialias:x.antialias,alpha:!0,depth:x.depth,stencil:x.stencil,framebufferScaleFactor:s};_=new XRWebGLLayer(i,t,ge),i.updateRenderState({baseLayer:_}),e.setPixelRatio(1),e.setSize(_.framebufferWidth,_.framebufferHeight,!1),E=new Li(_.framebufferWidth,_.framebufferHeight,{format:On,type:Ii,colorSpace:e.outputColorSpace,stencilBuffer:x.stencil})}else{let ge=null,we=null,ve=null;x.depth&&(ve=x.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ge=x.stencil?Ns:Ps,we=x.stencil?Os:Mr);const Qe={colorFormat:t.RGBA8,depthFormat:ve,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(Qe),i.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),E=new Li(m.textureWidth,m.textureHeight,{format:On,type:Ii,depthTexture:new kp(m.textureWidth,m.textureHeight,we,void 0,void 0,void 0,void 0,void 0,void 0,ge),stencilBuffer:x.stencil,colorSpace:e.outputColorSpace,samples:x.antialias?4:0,resolveDepthBuffer:m.ignoreDepthValues===!1})}E.isXRRenderTarget=!0,this.setFoveation(u),h=null,a=await i.requestReferenceSpace(c),Be.setContext(i),Be.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return S.getDepthTexture()};function ae(ne){for(let ge=0;ge<ne.removed.length;ge++){const we=ne.removed[ge],ve=T.indexOf(we);ve>=0&&(T[ve]=null,w[ve].disconnect(we))}for(let ge=0;ge<ne.added.length;ge++){const we=ne.added[ge];let ve=T.indexOf(we);if(ve===-1){for(let st=0;st<w.length;st++)if(st>=T.length){T.push(we),ve=st;break}else if(T[st]===null){T[st]=we,ve=st;break}if(ve===-1)break}const Qe=w[ve];Qe&&Qe.connect(we)}}const $=new F,pe=new F;function z(ne,ge,we){$.setFromMatrixPosition(ge.matrixWorld),pe.setFromMatrixPosition(we.matrixWorld);const ve=$.distanceTo(pe),Qe=ge.projectionMatrix.elements,st=we.projectionMatrix.elements,$e=Qe[14]/(Qe[10]-1),ct=Qe[14]/(Qe[10]+1),he=(Qe[9]+1)/Qe[5],_e=(Qe[9]-1)/Qe[5],k=(Qe[8]-1)/Qe[0],Je=(st[8]+1)/st[0],ye=$e*k,ze=$e*Je,Te=ve/(-k+Je),nt=Te*-k;if(ge.matrixWorld.decompose(ne.position,ne.quaternion,ne.scale),ne.translateX(nt),ne.translateZ(Te),ne.matrixWorld.compose(ne.position,ne.quaternion,ne.scale),ne.matrixWorldInverse.copy(ne.matrixWorld).invert(),Qe[10]===-1)ne.projectionMatrix.copy(ge.projectionMatrix),ne.projectionMatrixInverse.copy(ge.projectionMatrixInverse);else{const De=$e+Te,N=ct+Te,P=ye-nt,K=ze+(ve-nt),ce=he*ct/N*De,me=_e*ct/N*De;ne.projectionMatrix.makePerspective(P,K,ce,me,De,N),ne.projectionMatrixInverse.copy(ne.projectionMatrix).invert()}}function Z(ne,ge){ge===null?ne.matrixWorld.copy(ne.matrix):ne.matrixWorld.multiplyMatrices(ge.matrixWorld,ne.matrix),ne.matrixWorldInverse.copy(ne.matrixWorld).invert()}this.updateCamera=function(ne){if(i===null)return;let ge=ne.near,we=ne.far;S.texture!==null&&(S.depthNear>0&&(ge=S.depthNear),S.depthFar>0&&(we=S.depthFar)),b.near=U.near=L.near=ge,b.far=U.far=L.far=we,(O!==b.near||q!==b.far)&&(i.updateRenderState({depthNear:b.near,depthFar:b.far}),O=b.near,q=b.far),L.layers.mask=ne.layers.mask|2,U.layers.mask=ne.layers.mask|4,b.layers.mask=L.layers.mask|U.layers.mask;const ve=ne.parent,Qe=b.cameras;Z(b,ve);for(let st=0;st<Qe.length;st++)Z(Qe[st],ve);Qe.length===2?z(b,L,U):b.projectionMatrix.copy(L.projectionMatrix),J(ne,b,ve)};function J(ne,ge,we){we===null?ne.matrix.copy(ge.matrixWorld):(ne.matrix.copy(we.matrixWorld),ne.matrix.invert(),ne.matrix.multiply(ge.matrixWorld)),ne.matrix.decompose(ne.position,ne.quaternion,ne.scale),ne.updateMatrixWorld(!0),ne.projectionMatrix.copy(ge.projectionMatrix),ne.projectionMatrixInverse.copy(ge.projectionMatrixInverse),ne.isPerspectiveCamera&&(ne.fov=Bo*2*Math.atan(1/ne.projectionMatrix.elements[5]),ne.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(m===null&&_===null))return u},this.setFoveation=function(ne){u=ne,m!==null&&(m.fixedFoveation=ne),_!==null&&_.fixedFoveation!==void 0&&(_.fixedFoveation=ne)},this.hasDepthSensing=function(){return S.texture!==null},this.getDepthSensingMesh=function(){return S.getMesh(b)};let re=null;function xe(ne,ge){if(d=ge.getViewerPose(h||a),y=ge,d!==null){const we=d.views;_!==null&&(e.setRenderTargetFramebuffer(E,_.framebuffer),e.setRenderTarget(E));let ve=!1;we.length!==b.cameras.length&&(b.cameras.length=0,ve=!0);for(let st=0;st<we.length;st++){const $e=we[st];let ct=null;if(_!==null)ct=_.getViewport($e);else{const _e=p.getViewSubImage(m,$e);ct=_e.viewport,st===0&&(e.setRenderTargetTextures(E,_e.colorTexture,m.ignoreDepthValues?void 0:_e.depthStencilTexture),e.setRenderTarget(E))}let he=R[st];he===void 0&&(he=new En,he.layers.enable(st),he.viewport=new Pt,R[st]=he),he.matrix.fromArray($e.transform.matrix),he.matrix.decompose(he.position,he.quaternion,he.scale),he.projectionMatrix.fromArray($e.projectionMatrix),he.projectionMatrixInverse.copy(he.projectionMatrix).invert(),he.viewport.set(ct.x,ct.y,ct.width,ct.height),st===0&&(b.matrix.copy(he.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),ve===!0&&b.cameras.push(he)}const Qe=i.enabledFeatures;if(Qe&&Qe.includes("depth-sensing")){const st=p.getDepthInformation(we[0]);st&&st.isValid&&st.texture&&S.init(e,st,i.renderState)}}for(let we=0;we<w.length;we++){const ve=T[we],Qe=w[we];ve!==null&&Qe!==void 0&&Qe.update(ve,ge,h||a)}re&&re(ne,ge),ge.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ge}),y=null}const Be=new Qv;Be.setAnimationLoop(xe),this.setAnimationLoop=function(ne){re=ne},this.dispose=function(){}}}const ds=new ui,bA=new rt;function CA(r,e){function t(x,g){x.matrixAutoUpdate===!0&&x.updateMatrix(),g.value.copy(x.matrix)}function n(x,g){g.color.getRGB(x.fogColor.value,Zv(r)),g.isFog?(x.fogNear.value=g.near,x.fogFar.value=g.far):g.isFogExp2&&(x.fogDensity.value=g.density)}function i(x,g,E,w,T){g.isMeshBasicMaterial||g.isMeshLambertMaterial?s(x,g):g.isMeshToonMaterial?(s(x,g),p(x,g)):g.isMeshPhongMaterial?(s(x,g),d(x,g)):g.isMeshStandardMaterial?(s(x,g),m(x,g),g.isMeshPhysicalMaterial&&_(x,g,T)):g.isMeshMatcapMaterial?(s(x,g),y(x,g)):g.isMeshDepthMaterial?s(x,g):g.isMeshDistanceMaterial?(s(x,g),S(x,g)):g.isMeshNormalMaterial?s(x,g):g.isLineBasicMaterial?(a(x,g),g.isLineDashedMaterial&&c(x,g)):g.isPointsMaterial?u(x,g,E,w):g.isSpriteMaterial?h(x,g):g.isShadowMaterial?(x.color.value.copy(g.color),x.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function s(x,g){x.opacity.value=g.opacity,g.color&&x.diffuse.value.copy(g.color),g.emissive&&x.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(x.map.value=g.map,t(g.map,x.mapTransform)),g.alphaMap&&(x.alphaMap.value=g.alphaMap,t(g.alphaMap,x.alphaMapTransform)),g.bumpMap&&(x.bumpMap.value=g.bumpMap,t(g.bumpMap,x.bumpMapTransform),x.bumpScale.value=g.bumpScale,g.side===Gn&&(x.bumpScale.value*=-1)),g.normalMap&&(x.normalMap.value=g.normalMap,t(g.normalMap,x.normalMapTransform),x.normalScale.value.copy(g.normalScale),g.side===Gn&&x.normalScale.value.negate()),g.displacementMap&&(x.displacementMap.value=g.displacementMap,t(g.displacementMap,x.displacementMapTransform),x.displacementScale.value=g.displacementScale,x.displacementBias.value=g.displacementBias),g.emissiveMap&&(x.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,x.emissiveMapTransform)),g.specularMap&&(x.specularMap.value=g.specularMap,t(g.specularMap,x.specularMapTransform)),g.alphaTest>0&&(x.alphaTest.value=g.alphaTest);const E=e.get(g),w=E.envMap,T=E.envMapRotation;w&&(x.envMap.value=w,ds.copy(T),ds.x*=-1,ds.y*=-1,ds.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(ds.y*=-1,ds.z*=-1),x.envMapRotation.value.setFromMatrix4(bA.makeRotationFromEuler(ds)),x.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=g.reflectivity,x.ior.value=g.ior,x.refractionRatio.value=g.refractionRatio),g.lightMap&&(x.lightMap.value=g.lightMap,x.lightMapIntensity.value=g.lightMapIntensity,t(g.lightMap,x.lightMapTransform)),g.aoMap&&(x.aoMap.value=g.aoMap,x.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,x.aoMapTransform))}function a(x,g){x.diffuse.value.copy(g.color),x.opacity.value=g.opacity,g.map&&(x.map.value=g.map,t(g.map,x.mapTransform))}function c(x,g){x.dashSize.value=g.dashSize,x.totalSize.value=g.dashSize+g.gapSize,x.scale.value=g.scale}function u(x,g,E,w){x.diffuse.value.copy(g.color),x.opacity.value=g.opacity,x.size.value=g.size*E,x.scale.value=w*.5,g.map&&(x.map.value=g.map,t(g.map,x.uvTransform)),g.alphaMap&&(x.alphaMap.value=g.alphaMap,t(g.alphaMap,x.alphaMapTransform)),g.alphaTest>0&&(x.alphaTest.value=g.alphaTest)}function h(x,g){x.diffuse.value.copy(g.color),x.opacity.value=g.opacity,x.rotation.value=g.rotation,g.map&&(x.map.value=g.map,t(g.map,x.mapTransform)),g.alphaMap&&(x.alphaMap.value=g.alphaMap,t(g.alphaMap,x.alphaMapTransform)),g.alphaTest>0&&(x.alphaTest.value=g.alphaTest)}function d(x,g){x.specular.value.copy(g.specular),x.shininess.value=Math.max(g.shininess,1e-4)}function p(x,g){g.gradientMap&&(x.gradientMap.value=g.gradientMap)}function m(x,g){x.metalness.value=g.metalness,g.metalnessMap&&(x.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,x.metalnessMapTransform)),x.roughness.value=g.roughness,g.roughnessMap&&(x.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,x.roughnessMapTransform)),g.envMap&&(x.envMapIntensity.value=g.envMapIntensity)}function _(x,g,E){x.ior.value=g.ior,g.sheen>0&&(x.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),x.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(x.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,x.sheenColorMapTransform)),g.sheenRoughnessMap&&(x.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,x.sheenRoughnessMapTransform))),g.clearcoat>0&&(x.clearcoat.value=g.clearcoat,x.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(x.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,x.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(x.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===Gn&&x.clearcoatNormalScale.value.negate())),g.dispersion>0&&(x.dispersion.value=g.dispersion),g.iridescence>0&&(x.iridescence.value=g.iridescence,x.iridescenceIOR.value=g.iridescenceIOR,x.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(x.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,x.iridescenceMapTransform)),g.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),g.transmission>0&&(x.transmission.value=g.transmission,x.transmissionSamplerMap.value=E.texture,x.transmissionSamplerSize.value.set(E.width,E.height),g.transmissionMap&&(x.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,x.transmissionMapTransform)),x.thickness.value=g.thickness,g.thicknessMap&&(x.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=g.attenuationDistance,x.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(x.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(x.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=g.specularIntensity,x.specularColor.value.copy(g.specularColor),g.specularColorMap&&(x.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,x.specularColorMapTransform)),g.specularIntensityMap&&(x.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,g){g.matcap&&(x.matcap.value=g.matcap)}function S(x,g){const E=e.get(g).light;x.referencePosition.value.setFromMatrixPosition(E.matrixWorld),x.nearDistance.value=E.shadow.camera.near,x.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function RA(r,e,t,n){let i={},s={},a=[];const c=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function u(E,w){const T=w.program;n.uniformBlockBinding(E,T)}function h(E,w){let T=i[E.id];T===void 0&&(y(E),T=d(E),i[E.id]=T,E.addEventListener("dispose",x));const I=w.program;n.updateUBOMapping(E,I);const C=e.render.frame;s[E.id]!==C&&(m(E),s[E.id]=C)}function d(E){const w=p();E.__bindingPointIndex=w;const T=r.createBuffer(),I=E.__size,C=E.usage;return r.bindBuffer(r.UNIFORM_BUFFER,T),r.bufferData(r.UNIFORM_BUFFER,I,C),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,w,T),T}function p(){for(let E=0;E<c;E++)if(a.indexOf(E)===-1)return a.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(E){const w=i[E.id],T=E.uniforms,I=E.__cache;r.bindBuffer(r.UNIFORM_BUFFER,w);for(let C=0,L=T.length;C<L;C++){const U=Array.isArray(T[C])?T[C]:[T[C]];for(let R=0,b=U.length;R<b;R++){const O=U[R];if(_(O,C,R,I)===!0){const q=O.__offset,Y=Array.isArray(O.value)?O.value:[O.value];let Q=0;for(let ae=0;ae<Y.length;ae++){const $=Y[ae],pe=S($);typeof $=="number"||typeof $=="boolean"?(O.__data[0]=$,r.bufferSubData(r.UNIFORM_BUFFER,q+Q,O.__data)):$.isMatrix3?(O.__data[0]=$.elements[0],O.__data[1]=$.elements[1],O.__data[2]=$.elements[2],O.__data[3]=0,O.__data[4]=$.elements[3],O.__data[5]=$.elements[4],O.__data[6]=$.elements[5],O.__data[7]=0,O.__data[8]=$.elements[6],O.__data[9]=$.elements[7],O.__data[10]=$.elements[8],O.__data[11]=0):($.toArray(O.__data,Q),Q+=pe.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,q,O.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function _(E,w,T,I){const C=E.value,L=w+"_"+T;if(I[L]===void 0)return typeof C=="number"||typeof C=="boolean"?I[L]=C:I[L]=C.clone(),!0;{const U=I[L];if(typeof C=="number"||typeof C=="boolean"){if(U!==C)return I[L]=C,!0}else if(U.equals(C)===!1)return U.copy(C),!0}return!1}function y(E){const w=E.uniforms;let T=0;const I=16;for(let L=0,U=w.length;L<U;L++){const R=Array.isArray(w[L])?w[L]:[w[L]];for(let b=0,O=R.length;b<O;b++){const q=R[b],Y=Array.isArray(q.value)?q.value:[q.value];for(let Q=0,ae=Y.length;Q<ae;Q++){const $=Y[Q],pe=S($),z=T%I,Z=z%pe.boundary,J=z+Z;T+=Z,J!==0&&I-J<pe.storage&&(T+=I-J),q.__data=new Float32Array(pe.storage/Float32Array.BYTES_PER_ELEMENT),q.__offset=T,T+=pe.storage}}}const C=T%I;return C>0&&(T+=I-C),E.__size=T,E.__cache={},this}function S(E){const w={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(w.boundary=4,w.storage=4):E.isVector2?(w.boundary=8,w.storage=8):E.isVector3||E.isColor?(w.boundary=16,w.storage=12):E.isVector4?(w.boundary=16,w.storage=16):E.isMatrix3?(w.boundary=48,w.storage=48):E.isMatrix4?(w.boundary=64,w.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),w}function x(E){const w=E.target;w.removeEventListener("dispose",x);const T=a.indexOf(w.__bindingPointIndex);a.splice(T,1),r.deleteBuffer(i[w.id]),delete i[w.id],delete s[w.id]}function g(){for(const E in i)r.deleteBuffer(i[E]);a=[],i={},s={}}return{bind:u,update:h,dispose:g}}class sy{constructor(e={}){const{canvas:t=Wv(),context:n=null,depth:i=!0,stencil:s=!1,alpha:a=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:p=!1,reverseDepthBuffer:m=!1}=e;this.isWebGLRenderer=!0;let _;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");_=n.getContextAttributes().alpha}else _=a;const y=new Uint32Array(4),S=new Int32Array(4);let x=null,g=null;const E=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=$n,this.toneMapping=ji,this.toneMappingExposure=1;const T=this;let I=!1,C=0,L=0,U=null,R=-1,b=null;const O=new Pt,q=new Pt;let Y=null;const Q=new Ne(0);let ae=0,$=t.width,pe=t.height,z=1,Z=null,J=null;const re=new Pt(0,0,$,pe),xe=new Pt(0,0,$,pe);let Be=!1;const ne=new pl;let ge=!1,we=!1;const ve=new rt,Qe=new rt,st=new F,$e=new Pt,ct={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let he=!1;function _e(){return U===null?z:1}let k=n;function Je(D,G){return t.getContext(D,G)}try{const D={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:d,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${uh}`),t.addEventListener("webglcontextlost",de,!1),t.addEventListener("webglcontextrestored",Oe,!1),t.addEventListener("webglcontextcreationerror",Ie,!1),k===null){const G="webgl2";if(k=Je(G,D),k===null)throw Je(G)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(D){throw console.error("THREE.WebGLRenderer: "+D.message),D}let ye,ze,Te,nt,De,N,P,K,ce,me,ue,qe,be,Fe,wt,Se,ke,it,at,He,bt,ht,kt,V;function Ce(){ye=new OT(k),ye.init(),ht=new iy(k,ye),ze=new RT(k,ye,e,ht),Te=new mA(k,ye),ze.reverseDepthBuffer&&m&&Te.buffers.depth.setReversed(!0),nt=new zT(k),De=new nA,N=new SA(k,ye,Te,De,ze,ht,nt),P=new IT(T),K=new UT(T),ce=new XM(k),kt=new bT(k,ce),me=new NT(k,ce,nt,kt),ue=new kT(k,me,ce,nt),at=new BT(k,ze,N),Se=new PT(De),qe=new tA(T,P,K,ye,ze,kt,Se),be=new CA(T,De),Fe=new rA,wt=new uA(ye),it=new AT(T,P,K,Te,ue,_,u),ke=new fA(T,ue,ze),V=new RA(k,nt,ze,Te),He=new CT(k,ye,nt),bt=new FT(k,ye,nt),nt.programs=qe.programs,T.capabilities=ze,T.extensions=ye,T.properties=De,T.renderLists=Fe,T.shadowMap=ke,T.state=Te,T.info=nt}Ce();const oe=new AA(T,k);this.xr=oe,this.getContext=function(){return k},this.getContextAttributes=function(){return k.getContextAttributes()},this.forceContextLoss=function(){const D=ye.get("WEBGL_lose_context");D&&D.loseContext()},this.forceContextRestore=function(){const D=ye.get("WEBGL_lose_context");D&&D.restoreContext()},this.getPixelRatio=function(){return z},this.setPixelRatio=function(D){D!==void 0&&(z=D,this.setSize($,pe,!1))},this.getSize=function(D){return D.set($,pe)},this.setSize=function(D,G,ee=!0){if(oe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}$=D,pe=G,t.width=Math.floor(D*z),t.height=Math.floor(G*z),ee===!0&&(t.style.width=D+"px",t.style.height=G+"px"),this.setViewport(0,0,D,G)},this.getDrawingBufferSize=function(D){return D.set($*z,pe*z).floor()},this.setDrawingBufferSize=function(D,G,ee){$=D,pe=G,z=ee,t.width=Math.floor(D*ee),t.height=Math.floor(G*ee),this.setViewport(0,0,D,G)},this.getCurrentViewport=function(D){return D.copy(O)},this.getViewport=function(D){return D.copy(re)},this.setViewport=function(D,G,ee,te){D.isVector4?re.set(D.x,D.y,D.z,D.w):re.set(D,G,ee,te),Te.viewport(O.copy(re).multiplyScalar(z).round())},this.getScissor=function(D){return D.copy(xe)},this.setScissor=function(D,G,ee,te){D.isVector4?xe.set(D.x,D.y,D.z,D.w):xe.set(D,G,ee,te),Te.scissor(q.copy(xe).multiplyScalar(z).round())},this.getScissorTest=function(){return Be},this.setScissorTest=function(D){Te.setScissorTest(Be=D)},this.setOpaqueSort=function(D){Z=D},this.setTransparentSort=function(D){J=D},this.getClearColor=function(D){return D.copy(it.getClearColor())},this.setClearColor=function(){it.setClearColor.apply(it,arguments)},this.getClearAlpha=function(){return it.getClearAlpha()},this.setClearAlpha=function(){it.setClearAlpha.apply(it,arguments)},this.clear=function(D=!0,G=!0,ee=!0){let te=0;if(D){let X=!1;if(U!==null){const Ee=U.texture.format;X=Ee===vh||Ee===_h||Ee===ul}if(X){const Ee=U.texture.type,Re=Ee===Ii||Ee===Mr||Ee===zo||Ee===Os||Ee===ph||Ee===mh,Ge=it.getClearColor(),Xe=it.getClearAlpha(),ot=Ge.r,dt=Ge.g,Ye=Ge.b;Re?(y[0]=ot,y[1]=dt,y[2]=Ye,y[3]=Xe,k.clearBufferuiv(k.COLOR,0,y)):(S[0]=ot,S[1]=dt,S[2]=Ye,S[3]=Xe,k.clearBufferiv(k.COLOR,0,S))}else te|=k.COLOR_BUFFER_BIT}G&&(te|=k.DEPTH_BUFFER_BIT),ee&&(te|=k.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),k.clear(te)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",de,!1),t.removeEventListener("webglcontextrestored",Oe,!1),t.removeEventListener("webglcontextcreationerror",Ie,!1),Fe.dispose(),wt.dispose(),De.dispose(),P.dispose(),K.dispose(),ue.dispose(),kt.dispose(),V.dispose(),qe.dispose(),oe.dispose(),oe.removeEventListener("sessionstart",Ml),oe.removeEventListener("sessionend",El),Ni.stop()};function de(D){D.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),I=!0}function Oe(){console.log("THREE.WebGLRenderer: Context Restored."),I=!1;const D=nt.autoReset,G=ke.enabled,ee=ke.autoUpdate,te=ke.needsUpdate,X=ke.type;Ce(),nt.autoReset=D,ke.enabled=G,ke.autoUpdate=ee,ke.needsUpdate=te,ke.type=X}function Ie(D){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",D.statusMessage)}function ut(D){const G=D.target;G.removeEventListener("dispose",ut),Yt(G)}function Yt(D){hn(D),De.remove(D)}function hn(D){const G=De.get(D).programs;G!==void 0&&(G.forEach(function(ee){qe.releaseProgram(ee)}),D.isShaderMaterial&&qe.releaseShaderCache(D))}this.renderBufferDirect=function(D,G,ee,te,X,Ee){G===null&&(G=ct);const Re=X.isMesh&&X.matrixWorld.determinant()<0,Ge=Vh(D,G,ee,te,X);Te.setMaterial(te,Re);let Xe=ee.index,ot=1;if(te.wireframe===!0){if(Xe=me.getWireframeAttribute(ee),Xe===void 0)return;ot=2}const dt=ee.drawRange,Ye=ee.attributes.position;let Mt=dt.start*ot,Ct=(dt.start+dt.count)*ot;Ee!==null&&(Mt=Math.max(Mt,Ee.start*ot),Ct=Math.min(Ct,(Ee.start+Ee.count)*ot)),Xe!==null?(Mt=Math.max(Mt,0),Ct=Math.min(Ct,Xe.count)):Ye!=null&&(Mt=Math.max(Mt,0),Ct=Math.min(Ct,Ye.count));const tt=Ct-Mt;if(tt<0||tt===1/0)return;kt.setup(X,te,Ge,ee,Xe);let vt,Et=He;if(Xe!==null&&(vt=ce.get(Xe),Et=bt,Et.setIndex(vt)),X.isMesh)te.wireframe===!0?(Te.setLineWidth(te.wireframeLinewidth*_e()),Et.setMode(k.LINES)):Et.setMode(k.TRIANGLES);else if(X.isLine){let Le=te.linewidth;Le===void 0&&(Le=1),Te.setLineWidth(Le*_e()),X.isLineSegments?Et.setMode(k.LINES):X.isLineLoop?Et.setMode(k.LINE_LOOP):Et.setMode(k.LINE_STRIP)}else X.isPoints?Et.setMode(k.POINTS):X.isSprite&&Et.setMode(k.TRIANGLES);if(X.isBatchedMesh)if(X._multiDrawInstances!==null)Et.renderMultiDrawInstances(X._multiDrawStarts,X._multiDrawCounts,X._multiDrawCount,X._multiDrawInstances);else if(ye.get("WEBGL_multi_draw"))Et.renderMultiDraw(X._multiDrawStarts,X._multiDrawCounts,X._multiDrawCount);else{const Le=X._multiDrawStarts,qt=X._multiDrawCounts,At=X._multiDrawCount,_n=Xe?ce.get(Xe).bytesPerElement:1,rn=De.get(te).currentProgram.getUniforms();for(let vn=0;vn<At;vn++)rn.setValue(k,"_gl_DrawID",vn),Et.render(Le[vn]/_n,qt[vn])}else if(X.isInstancedMesh)Et.renderInstances(Mt,tt,X.count);else if(ee.isInstancedBufferGeometry){const Le=ee._maxInstanceCount!==void 0?ee._maxInstanceCount:1/0,qt=Math.min(ee.instanceCount,Le);Et.renderInstances(Mt,tt,qt)}else Et.render(Mt,tt)};function Dt(D,G,ee){D.transparent===!0&&D.side===Zi&&D.forceSinglePass===!1?(D.side=Gn,D.needsUpdate=!0,Xs(D,G,ee),D.side=xr,D.needsUpdate=!0,Xs(D,G,ee),D.side=Zi):Xs(D,G,ee)}this.compile=function(D,G,ee=null){ee===null&&(ee=D),g=wt.get(ee),g.init(G),w.push(g),ee.traverseVisible(function(X){X.isLight&&X.layers.test(G.layers)&&(g.pushLight(X),X.castShadow&&g.pushShadow(X))}),D!==ee&&D.traverseVisible(function(X){X.isLight&&X.layers.test(G.layers)&&(g.pushLight(X),X.castShadow&&g.pushShadow(X))}),g.setupLights();const te=new Set;return D.traverse(function(X){if(!(X.isMesh||X.isPoints||X.isLine||X.isSprite))return;const Ee=X.material;if(Ee)if(Array.isArray(Ee))for(let Re=0;Re<Ee.length;Re++){const Ge=Ee[Re];Dt(Ge,ee,X),te.add(Ge)}else Dt(Ee,ee,X),te.add(Ee)}),w.pop(),g=null,te},this.compileAsync=function(D,G,ee=null){const te=this.compile(D,G,ee);return new Promise(X=>{function Ee(){if(te.forEach(function(Re){De.get(Re).currentProgram.isReady()&&te.delete(Re)}),te.size===0){X(D);return}setTimeout(Ee,10)}ye.get("KHR_parallel_shader_compile")!==null?Ee():setTimeout(Ee,10)})};let Yn=null;function Mi(D){Yn&&Yn(D)}function Ml(){Ni.stop()}function El(){Ni.start()}const Ni=new Qv;Ni.setAnimationLoop(Mi),typeof self<"u"&&Ni.setContext(self),this.setAnimationLoop=function(D){Yn=D,oe.setAnimationLoop(D),D===null?Ni.stop():Ni.start()},oe.addEventListener("sessionstart",Ml),oe.addEventListener("sessionend",El),this.render=function(D,G){if(G!==void 0&&G.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(I===!0)return;if(D.matrixWorldAutoUpdate===!0&&D.updateMatrixWorld(),G.parent===null&&G.matrixWorldAutoUpdate===!0&&G.updateMatrixWorld(),oe.enabled===!0&&oe.isPresenting===!0&&(oe.cameraAutoUpdate===!0&&oe.updateCamera(G),G=oe.getCamera()),D.isScene===!0&&D.onBeforeRender(T,D,G,U),g=wt.get(D,w.length),g.init(G),w.push(g),Qe.multiplyMatrices(G.projectionMatrix,G.matrixWorldInverse),ne.setFromProjectionMatrix(Qe),we=this.localClippingEnabled,ge=Se.init(this.clippingPlanes,we),x=Fe.get(D,E.length),x.init(),E.push(x),oe.enabled===!0&&oe.isPresenting===!0){const Ee=T.xr.getDepthSensingMesh();Ee!==null&&jr(Ee,G,-1/0,T.sortObjects)}jr(D,G,0,T.sortObjects),x.finish(),T.sortObjects===!0&&x.sort(Z,J),he=oe.enabled===!1||oe.isPresenting===!1||oe.hasDepthSensing()===!1,he&&it.addToRenderList(x,D),this.info.render.frame++,ge===!0&&Se.beginShadows();const ee=g.state.shadowsArray;ke.render(ee,D,G),ge===!0&&Se.endShadows(),this.info.autoReset===!0&&this.info.reset();const te=x.opaque,X=x.transmissive;if(g.setupLights(),G.isArrayCamera){const Ee=G.cameras;if(X.length>0)for(let Re=0,Ge=Ee.length;Re<Ge;Re++){const Xe=Ee[Re];Tr(te,X,D,Xe)}he&&it.render(D);for(let Re=0,Ge=Ee.length;Re<Ge;Re++){const Xe=Ee[Re];Tl(x,D,Xe,Xe.viewport)}}else X.length>0&&Tr(te,X,D,G),he&&it.render(D),Tl(x,D,G);U!==null&&(N.updateMultisampleRenderTarget(U),N.updateRenderTargetMipmap(U)),D.isScene===!0&&D.onAfterRender(T,D,G),kt.resetDefaultState(),R=-1,b=null,w.pop(),w.length>0?(g=w[w.length-1],ge===!0&&Se.setGlobalState(T.clippingPlanes,g.state.camera)):g=null,E.pop(),E.length>0?x=E[E.length-1]:x=null};function jr(D,G,ee,te){if(D.visible===!1)return;if(D.layers.test(G.layers)){if(D.isGroup)ee=D.renderOrder;else if(D.isLOD)D.autoUpdate===!0&&D.update(G);else if(D.isLight)g.pushLight(D),D.castShadow&&g.pushShadow(D);else if(D.isSprite){if(!D.frustumCulled||ne.intersectsSprite(D)){te&&$e.setFromMatrixPosition(D.matrixWorld).applyMatrix4(Qe);const Re=ue.update(D),Ge=D.material;Ge.visible&&x.push(D,Re,Ge,ee,$e.z,null)}}else if((D.isMesh||D.isLine||D.isPoints)&&(!D.frustumCulled||ne.intersectsObject(D))){const Re=ue.update(D),Ge=D.material;if(te&&(D.boundingSphere!==void 0?(D.boundingSphere===null&&D.computeBoundingSphere(),$e.copy(D.boundingSphere.center)):(Re.boundingSphere===null&&Re.computeBoundingSphere(),$e.copy(Re.boundingSphere.center)),$e.applyMatrix4(D.matrixWorld).applyMatrix4(Qe)),Array.isArray(Ge)){const Xe=Re.groups;for(let ot=0,dt=Xe.length;ot<dt;ot++){const Ye=Xe[ot],Mt=Ge[Ye.materialIndex];Mt&&Mt.visible&&x.push(D,Re,Mt,ee,$e.z,Ye)}}else Ge.visible&&x.push(D,Re,Ge,ee,$e.z,null)}}const Ee=D.children;for(let Re=0,Ge=Ee.length;Re<Ge;Re++)jr(Ee[Re],G,ee,te)}function Tl(D,G,ee,te){const X=D.opaque,Ee=D.transmissive,Re=D.transparent;g.setupLightsView(ee),ge===!0&&Se.setGlobalState(T.clippingPlanes,ee),te&&Te.viewport(O.copy(te)),X.length>0&&Ws(X,G,ee),Ee.length>0&&Ws(Ee,G,ee),Re.length>0&&Ws(Re,G,ee),Te.buffers.depth.setTest(!0),Te.buffers.depth.setMask(!0),Te.buffers.color.setMask(!0),Te.setPolygonOffset(!1)}function Tr(D,G,ee,te){if((ee.isScene===!0?ee.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[te.id]===void 0&&(g.state.transmissionRenderTarget[te.id]=new Li(1,1,{generateMipmaps:!0,type:ye.has("EXT_color_buffer_half_float")||ye.has("EXT_color_buffer_float")?Wo:Ii,minFilter:Ji,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Rt.workingColorSpace}));const Ee=g.state.transmissionRenderTarget[te.id],Re=te.viewport||O;Ee.setSize(Re.z,Re.w);const Ge=T.getRenderTarget();T.setRenderTarget(Ee),T.getClearColor(Q),ae=T.getClearAlpha(),ae<1&&T.setClearColor(16777215,.5),T.clear(),he&&it.render(ee);const Xe=T.toneMapping;T.toneMapping=ji;const ot=te.viewport;if(te.viewport!==void 0&&(te.viewport=void 0),g.setupLightsView(te),ge===!0&&Se.setGlobalState(T.clippingPlanes,te),Ws(D,ee,te),N.updateMultisampleRenderTarget(Ee),N.updateRenderTargetMipmap(Ee),ye.has("WEBGL_multisampled_render_to_texture")===!1){let dt=!1;for(let Ye=0,Mt=G.length;Ye<Mt;Ye++){const Ct=G[Ye],tt=Ct.object,vt=Ct.geometry,Et=Ct.material,Le=Ct.group;if(Et.side===Zi&&tt.layers.test(te.layers)){const qt=Et.side;Et.side=Gn,Et.needsUpdate=!0,wl(tt,ee,te,vt,Et,Le),Et.side=qt,Et.needsUpdate=!0,dt=!0}}dt===!0&&(N.updateMultisampleRenderTarget(Ee),N.updateRenderTargetMipmap(Ee))}T.setRenderTarget(Ge),T.setClearColor(Q,ae),ot!==void 0&&(te.viewport=ot),T.toneMapping=Xe}function Ws(D,G,ee){const te=G.isScene===!0?G.overrideMaterial:null;for(let X=0,Ee=D.length;X<Ee;X++){const Re=D[X],Ge=Re.object,Xe=Re.geometry,ot=te===null?Re.material:te,dt=Re.group;Ge.layers.test(ee.layers)&&wl(Ge,G,ee,Xe,ot,dt)}}function wl(D,G,ee,te,X,Ee){D.onBeforeRender(T,G,ee,te,X,Ee),D.modelViewMatrix.multiplyMatrices(ee.matrixWorldInverse,D.matrixWorld),D.normalMatrix.getNormalMatrix(D.modelViewMatrix),X.onBeforeRender(T,G,ee,te,D,Ee),X.transparent===!0&&X.side===Zi&&X.forceSinglePass===!1?(X.side=Gn,X.needsUpdate=!0,T.renderBufferDirect(ee,G,te,X,D,Ee),X.side=xr,X.needsUpdate=!0,T.renderBufferDirect(ee,G,te,X,D,Ee),X.side=Zi):T.renderBufferDirect(ee,G,te,X,D,Ee),D.onAfterRender(T,G,ee,te,X,Ee)}function Xs(D,G,ee){G.isScene!==!0&&(G=ct);const te=De.get(D),X=g.state.lights,Ee=g.state.shadowsArray,Re=X.state.version,Ge=qe.getParameters(D,X.state,Ee,G,ee),Xe=qe.getProgramCacheKey(Ge);let ot=te.programs;te.environment=D.isMeshStandardMaterial?G.environment:null,te.fog=G.fog,te.envMap=(D.isMeshStandardMaterial?K:P).get(D.envMap||te.environment),te.envMapRotation=te.environment!==null&&D.envMap===null?G.environmentRotation:D.envMapRotation,ot===void 0&&(D.addEventListener("dispose",ut),ot=new Map,te.programs=ot);let dt=ot.get(Xe);if(dt!==void 0){if(te.currentProgram===dt&&te.lightsStateVersion===Re)return bl(D,Ge),dt}else Ge.uniforms=qe.getUniforms(D),D.onBeforeCompile(Ge,T),dt=qe.acquireProgram(Ge,Xe),ot.set(Xe,dt),te.uniforms=Ge.uniforms;const Ye=te.uniforms;return(!D.isShaderMaterial&&!D.isRawShaderMaterial||D.clipping===!0)&&(Ye.clippingPlanes=Se.uniform),bl(D,Ge),te.needsLights=Cl(D),te.lightsStateVersion=Re,te.needsLights&&(Ye.ambientLightColor.value=X.state.ambient,Ye.lightProbe.value=X.state.probe,Ye.directionalLights.value=X.state.directional,Ye.directionalLightShadows.value=X.state.directionalShadow,Ye.spotLights.value=X.state.spot,Ye.spotLightShadows.value=X.state.spotShadow,Ye.rectAreaLights.value=X.state.rectArea,Ye.ltc_1.value=X.state.rectAreaLTC1,Ye.ltc_2.value=X.state.rectAreaLTC2,Ye.pointLights.value=X.state.point,Ye.pointLightShadows.value=X.state.pointShadow,Ye.hemisphereLights.value=X.state.hemi,Ye.directionalShadowMap.value=X.state.directionalShadowMap,Ye.directionalShadowMatrix.value=X.state.directionalShadowMatrix,Ye.spotShadowMap.value=X.state.spotShadowMap,Ye.spotLightMatrix.value=X.state.spotLightMatrix,Ye.spotLightMap.value=X.state.spotLightMap,Ye.pointShadowMap.value=X.state.pointShadowMap,Ye.pointShadowMatrix.value=X.state.pointShadowMatrix),te.currentProgram=dt,te.uniformsList=null,dt}function Al(D){if(D.uniformsList===null){const G=D.currentProgram.getUniforms();D.uniformsList=xu.seqWithValue(G.seq,D.uniforms)}return D.uniformsList}function bl(D,G){const ee=De.get(D);ee.outputColorSpace=G.outputColorSpace,ee.batching=G.batching,ee.batchingColor=G.batchingColor,ee.instancing=G.instancing,ee.instancingColor=G.instancingColor,ee.instancingMorph=G.instancingMorph,ee.skinning=G.skinning,ee.morphTargets=G.morphTargets,ee.morphNormals=G.morphNormals,ee.morphColors=G.morphColors,ee.morphTargetsCount=G.morphTargetsCount,ee.numClippingPlanes=G.numClippingPlanes,ee.numIntersection=G.numClipIntersection,ee.vertexAlphas=G.vertexAlphas,ee.vertexTangents=G.vertexTangents,ee.toneMapping=G.toneMapping}function Vh(D,G,ee,te,X){G.isScene!==!0&&(G=ct),N.resetTextureUnits();const Ee=G.fog,Re=te.isMeshStandardMaterial?G.environment:null,Ge=U===null?T.outputColorSpace:U.isXRRenderTarget===!0?U.texture.colorSpace:Bs,Xe=(te.isMeshStandardMaterial?K:P).get(te.envMap||Re),ot=te.vertexColors===!0&&!!ee.attributes.color&&ee.attributes.color.itemSize===4,dt=!!ee.attributes.tangent&&(!!te.normalMap||te.anisotropy>0),Ye=!!ee.morphAttributes.position,Mt=!!ee.morphAttributes.normal,Ct=!!ee.morphAttributes.color;let tt=ji;te.toneMapped&&(U===null||U.isXRRenderTarget===!0)&&(tt=T.toneMapping);const vt=ee.morphAttributes.position||ee.morphAttributes.normal||ee.morphAttributes.color,Et=vt!==void 0?vt.length:0,Le=De.get(te),qt=g.state.lights;if(ge===!0&&(we===!0||D!==b)){const Zt=D===b&&te.id===R;Se.setState(te,D,Zt)}let At=!1;te.version===Le.__version?(Le.needsLights&&Le.lightsStateVersion!==qt.state.version||Le.outputColorSpace!==Ge||X.isBatchedMesh&&Le.batching===!1||!X.isBatchedMesh&&Le.batching===!0||X.isBatchedMesh&&Le.batchingColor===!0&&X.colorTexture===null||X.isBatchedMesh&&Le.batchingColor===!1&&X.colorTexture!==null||X.isInstancedMesh&&Le.instancing===!1||!X.isInstancedMesh&&Le.instancing===!0||X.isSkinnedMesh&&Le.skinning===!1||!X.isSkinnedMesh&&Le.skinning===!0||X.isInstancedMesh&&Le.instancingColor===!0&&X.instanceColor===null||X.isInstancedMesh&&Le.instancingColor===!1&&X.instanceColor!==null||X.isInstancedMesh&&Le.instancingMorph===!0&&X.morphTexture===null||X.isInstancedMesh&&Le.instancingMorph===!1&&X.morphTexture!==null||Le.envMap!==Xe||te.fog===!0&&Le.fog!==Ee||Le.numClippingPlanes!==void 0&&(Le.numClippingPlanes!==Se.numPlanes||Le.numIntersection!==Se.numIntersection)||Le.vertexAlphas!==ot||Le.vertexTangents!==dt||Le.morphTargets!==Ye||Le.morphNormals!==Mt||Le.morphColors!==Ct||Le.toneMapping!==tt||Le.morphTargetsCount!==Et)&&(At=!0):(At=!0,Le.__version=te.version);let _n=Le.currentProgram;At===!0&&(_n=Xs(te,G,X));let rn=!1,vn=!1,wr=!1;const Ht=_n.getUniforms(),Fn=Le.uniforms;if(Te.useProgram(_n.program)&&(rn=!0,vn=!0,wr=!0),te.id!==R&&(R=te.id,vn=!0),rn||b!==D){Te.buffers.depth.getReversed()?(ve.copy(D.projectionMatrix),gM(ve),_M(ve),Ht.setValue(k,"projectionMatrix",ve)):Ht.setValue(k,"projectionMatrix",D.projectionMatrix),Ht.setValue(k,"viewMatrix",D.matrixWorldInverse);const Fi=Ht.map.cameraPosition;Fi!==void 0&&Fi.setValue(k,st.setFromMatrixPosition(D.matrixWorld)),ze.logarithmicDepthBuffer&&Ht.setValue(k,"logDepthBufFC",2/(Math.log(D.far+1)/Math.LN2)),(te.isMeshPhongMaterial||te.isMeshToonMaterial||te.isMeshLambertMaterial||te.isMeshBasicMaterial||te.isMeshStandardMaterial||te.isShaderMaterial)&&Ht.setValue(k,"isOrthographic",D.isOrthographicCamera===!0),b!==D&&(b=D,vn=!0,wr=!0)}if(X.isSkinnedMesh){Ht.setOptional(k,X,"bindMatrix"),Ht.setOptional(k,X,"bindMatrixInverse");const Zt=X.skeleton;Zt&&(Zt.boneTexture===null&&Zt.computeBoneTexture(),Ht.setValue(k,"boneTexture",Zt.boneTexture,N))}X.isBatchedMesh&&(Ht.setOptional(k,X,"batchingTexture"),Ht.setValue(k,"batchingTexture",X._matricesTexture,N),Ht.setOptional(k,X,"batchingIdTexture"),Ht.setValue(k,"batchingIdTexture",X._indirectTexture,N),Ht.setOptional(k,X,"batchingColorTexture"),X._colorsTexture!==null&&Ht.setValue(k,"batchingColorTexture",X._colorsTexture,N));const Ar=ee.morphAttributes;if((Ar.position!==void 0||Ar.normal!==void 0||Ar.color!==void 0)&&at.update(X,ee,_n),(vn||Le.receiveShadow!==X.receiveShadow)&&(Le.receiveShadow=X.receiveShadow,Ht.setValue(k,"receiveShadow",X.receiveShadow)),te.isMeshGouraudMaterial&&te.envMap!==null&&(Fn.envMap.value=Xe,Fn.flipEnvMap.value=Xe.isCubeTexture&&Xe.isRenderTargetTexture===!1?-1:1),te.isMeshStandardMaterial&&te.envMap===null&&G.environment!==null&&(Fn.envMapIntensity.value=G.environmentIntensity),vn&&(Ht.setValue(k,"toneMappingExposure",T.toneMappingExposure),Le.needsLights&&Gh(Fn,wr),Ee&&te.fog===!0&&be.refreshFogUniforms(Fn,Ee),be.refreshMaterialUniforms(Fn,te,z,pe,g.state.transmissionRenderTarget[D.id]),xu.upload(k,Al(Le),Fn,N)),te.isShaderMaterial&&te.uniformsNeedUpdate===!0&&(xu.upload(k,Al(Le),Fn,N),te.uniformsNeedUpdate=!1),te.isSpriteMaterial&&Ht.setValue(k,"center",X.center),Ht.setValue(k,"modelViewMatrix",X.modelViewMatrix),Ht.setValue(k,"normalMatrix",X.normalMatrix),Ht.setValue(k,"modelMatrix",X.matrixWorld),te.isShaderMaterial||te.isRawShaderMaterial){const Zt=te.uniformsGroups;for(let Fi=0,zi=Zt.length;Fi<zi;Fi++){const Rl=Zt[Fi];V.update(Rl,_n),V.bind(Rl,_n)}}return _n}function Gh(D,G){D.ambientLightColor.needsUpdate=G,D.lightProbe.needsUpdate=G,D.directionalLights.needsUpdate=G,D.directionalLightShadows.needsUpdate=G,D.pointLights.needsUpdate=G,D.pointLightShadows.needsUpdate=G,D.spotLights.needsUpdate=G,D.spotLightShadows.needsUpdate=G,D.rectAreaLights.needsUpdate=G,D.hemisphereLights.needsUpdate=G}function Cl(D){return D.isMeshLambertMaterial||D.isMeshToonMaterial||D.isMeshPhongMaterial||D.isMeshStandardMaterial||D.isShadowMaterial||D.isShaderMaterial&&D.lights===!0}this.getActiveCubeFace=function(){return C},this.getActiveMipmapLevel=function(){return L},this.getRenderTarget=function(){return U},this.setRenderTargetTextures=function(D,G,ee){De.get(D.texture).__webglTexture=G,De.get(D.depthTexture).__webglTexture=ee;const te=De.get(D);te.__hasExternalTextures=!0,te.__autoAllocateDepthBuffer=ee===void 0,te.__autoAllocateDepthBuffer||ye.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),te.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(D,G){const ee=De.get(D);ee.__webglFramebuffer=G,ee.__useDefaultFramebuffer=G===void 0},this.setRenderTarget=function(D,G=0,ee=0){U=D,C=G,L=ee;let te=!0,X=null,Ee=!1,Re=!1;if(D){const Xe=De.get(D);if(Xe.__useDefaultFramebuffer!==void 0)Te.bindFramebuffer(k.FRAMEBUFFER,null),te=!1;else if(Xe.__webglFramebuffer===void 0)N.setupRenderTarget(D);else if(Xe.__hasExternalTextures)N.rebindTextures(D,De.get(D.texture).__webglTexture,De.get(D.depthTexture).__webglTexture);else if(D.depthBuffer){const Ye=D.depthTexture;if(Xe.__boundDepthTexture!==Ye){if(Ye!==null&&De.has(Ye)&&(D.width!==Ye.image.width||D.height!==Ye.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");N.setupDepthRenderbuffer(D)}}const ot=D.texture;(ot.isData3DTexture||ot.isDataArrayTexture||ot.isCompressedArrayTexture)&&(Re=!0);const dt=De.get(D).__webglFramebuffer;D.isWebGLCubeRenderTarget?(Array.isArray(dt[G])?X=dt[G][ee]:X=dt[G],Ee=!0):D.samples>0&&N.useMultisampledRTT(D)===!1?X=De.get(D).__webglMultisampledFramebuffer:Array.isArray(dt)?X=dt[ee]:X=dt,O.copy(D.viewport),q.copy(D.scissor),Y=D.scissorTest}else O.copy(re).multiplyScalar(z).floor(),q.copy(xe).multiplyScalar(z).floor(),Y=Be;if(Te.bindFramebuffer(k.FRAMEBUFFER,X)&&te&&Te.drawBuffers(D,X),Te.viewport(O),Te.scissor(q),Te.setScissorTest(Y),Ee){const Xe=De.get(D.texture);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_CUBE_MAP_POSITIVE_X+G,Xe.__webglTexture,ee)}else if(Re){const Xe=De.get(D.texture),ot=G||0;k.framebufferTextureLayer(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,Xe.__webglTexture,ee||0,ot)}R=-1},this.readRenderTargetPixels=function(D,G,ee,te,X,Ee,Re){if(!(D&&D.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ge=De.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&Re!==void 0&&(Ge=Ge[Re]),Ge){Te.bindFramebuffer(k.FRAMEBUFFER,Ge);try{const Xe=D.texture,ot=Xe.format,dt=Xe.type;if(!ze.textureFormatReadable(ot)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!ze.textureTypeReadable(dt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}G>=0&&G<=D.width-te&&ee>=0&&ee<=D.height-X&&k.readPixels(G,ee,te,X,ht.convert(ot),ht.convert(dt),Ee)}finally{const Xe=U!==null?De.get(U).__webglFramebuffer:null;Te.bindFramebuffer(k.FRAMEBUFFER,Xe)}}},this.readRenderTargetPixelsAsync=async function(D,G,ee,te,X,Ee,Re){if(!(D&&D.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Ge=De.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&Re!==void 0&&(Ge=Ge[Re]),Ge){const Xe=D.texture,ot=Xe.format,dt=Xe.type;if(!ze.textureFormatReadable(ot))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!ze.textureTypeReadable(dt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(G>=0&&G<=D.width-te&&ee>=0&&ee<=D.height-X){Te.bindFramebuffer(k.FRAMEBUFFER,Ge);const Ye=k.createBuffer();k.bindBuffer(k.PIXEL_PACK_BUFFER,Ye),k.bufferData(k.PIXEL_PACK_BUFFER,Ee.byteLength,k.STREAM_READ),k.readPixels(G,ee,te,X,ht.convert(ot),ht.convert(dt),0);const Mt=U!==null?De.get(U).__webglFramebuffer:null;Te.bindFramebuffer(k.FRAMEBUFFER,Mt);const Ct=k.fenceSync(k.SYNC_GPU_COMMANDS_COMPLETE,0);return k.flush(),await mM(k,Ct,4),k.bindBuffer(k.PIXEL_PACK_BUFFER,Ye),k.getBufferSubData(k.PIXEL_PACK_BUFFER,0,Ee),k.deleteBuffer(Ye),k.deleteSync(Ct),Ee}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(D,G=null,ee=0){D.isTexture!==!0&&(Da("WebGLRenderer: copyFramebufferToTexture function signature has changed."),G=arguments[0]||null,D=arguments[1]);const te=Math.pow(2,-ee),X=Math.floor(D.image.width*te),Ee=Math.floor(D.image.height*te),Re=G!==null?G.x:0,Ge=G!==null?G.y:0;N.setTexture2D(D,0),k.copyTexSubImage2D(k.TEXTURE_2D,ee,0,0,Re,Ge,X,Ee),Te.unbindTexture()},this.copyTextureToTexture=function(D,G,ee=null,te=null,X=0){D.isTexture!==!0&&(Da("WebGLRenderer: copyTextureToTexture function signature has changed."),te=arguments[0]||null,D=arguments[1],G=arguments[2],X=arguments[3]||0,ee=null);let Ee,Re,Ge,Xe,ot,dt,Ye,Mt,Ct;const tt=D.isCompressedTexture?D.mipmaps[X]:D.image;ee!==null?(Ee=ee.max.x-ee.min.x,Re=ee.max.y-ee.min.y,Ge=ee.isBox3?ee.max.z-ee.min.z:1,Xe=ee.min.x,ot=ee.min.y,dt=ee.isBox3?ee.min.z:0):(Ee=tt.width,Re=tt.height,Ge=tt.depth||1,Xe=0,ot=0,dt=0),te!==null?(Ye=te.x,Mt=te.y,Ct=te.z):(Ye=0,Mt=0,Ct=0);const vt=ht.convert(G.format),Et=ht.convert(G.type);let Le;G.isData3DTexture?(N.setTexture3D(G,0),Le=k.TEXTURE_3D):G.isDataArrayTexture||G.isCompressedArrayTexture?(N.setTexture2DArray(G,0),Le=k.TEXTURE_2D_ARRAY):(N.setTexture2D(G,0),Le=k.TEXTURE_2D),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,G.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,G.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,G.unpackAlignment);const qt=k.getParameter(k.UNPACK_ROW_LENGTH),At=k.getParameter(k.UNPACK_IMAGE_HEIGHT),_n=k.getParameter(k.UNPACK_SKIP_PIXELS),rn=k.getParameter(k.UNPACK_SKIP_ROWS),vn=k.getParameter(k.UNPACK_SKIP_IMAGES);k.pixelStorei(k.UNPACK_ROW_LENGTH,tt.width),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,tt.height),k.pixelStorei(k.UNPACK_SKIP_PIXELS,Xe),k.pixelStorei(k.UNPACK_SKIP_ROWS,ot),k.pixelStorei(k.UNPACK_SKIP_IMAGES,dt);const wr=D.isDataArrayTexture||D.isData3DTexture,Ht=G.isDataArrayTexture||G.isData3DTexture;if(D.isRenderTargetTexture||D.isDepthTexture){const Fn=De.get(D),Ar=De.get(G),Zt=De.get(Fn.__renderTarget),Fi=De.get(Ar.__renderTarget);Te.bindFramebuffer(k.READ_FRAMEBUFFER,Zt.__webglFramebuffer),Te.bindFramebuffer(k.DRAW_FRAMEBUFFER,Fi.__webglFramebuffer);for(let zi=0;zi<Ge;zi++)wr&&k.framebufferTextureLayer(k.READ_FRAMEBUFFER,k.COLOR_ATTACHMENT0,De.get(D).__webglTexture,X,dt+zi),D.isDepthTexture?(Ht&&k.framebufferTextureLayer(k.DRAW_FRAMEBUFFER,k.COLOR_ATTACHMENT0,De.get(G).__webglTexture,X,Ct+zi),k.blitFramebuffer(Xe,ot,Ee,Re,Ye,Mt,Ee,Re,k.DEPTH_BUFFER_BIT,k.NEAREST)):Ht?k.copyTexSubImage3D(Le,X,Ye,Mt,Ct+zi,Xe,ot,Ee,Re):k.copyTexSubImage2D(Le,X,Ye,Mt,Ct+zi,Xe,ot,Ee,Re);Te.bindFramebuffer(k.READ_FRAMEBUFFER,null),Te.bindFramebuffer(k.DRAW_FRAMEBUFFER,null)}else Ht?D.isDataTexture||D.isData3DTexture?k.texSubImage3D(Le,X,Ye,Mt,Ct,Ee,Re,Ge,vt,Et,tt.data):G.isCompressedArrayTexture?k.compressedTexSubImage3D(Le,X,Ye,Mt,Ct,Ee,Re,Ge,vt,tt.data):k.texSubImage3D(Le,X,Ye,Mt,Ct,Ee,Re,Ge,vt,Et,tt):D.isDataTexture?k.texSubImage2D(k.TEXTURE_2D,X,Ye,Mt,Ee,Re,vt,Et,tt.data):D.isCompressedTexture?k.compressedTexSubImage2D(k.TEXTURE_2D,X,Ye,Mt,tt.width,tt.height,vt,tt.data):k.texSubImage2D(k.TEXTURE_2D,X,Ye,Mt,Ee,Re,vt,Et,tt);k.pixelStorei(k.UNPACK_ROW_LENGTH,qt),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,At),k.pixelStorei(k.UNPACK_SKIP_PIXELS,_n),k.pixelStorei(k.UNPACK_SKIP_ROWS,rn),k.pixelStorei(k.UNPACK_SKIP_IMAGES,vn),X===0&&G.generateMipmaps&&k.generateMipmap(Le),Te.unbindTexture()},this.copyTextureToTexture3D=function(D,G,ee=null,te=null,X=0){return D.isTexture!==!0&&(Da("WebGLRenderer: copyTextureToTexture3D function signature has changed."),ee=arguments[0]||null,te=arguments[1]||null,D=arguments[2],G=arguments[3],X=arguments[4]||0),Da('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(D,G,ee,te,X)},this.initRenderTarget=function(D){De.get(D).__webglFramebuffer===void 0&&N.setupRenderTarget(D)},this.initTexture=function(D){D.isCubeTexture?N.setTextureCube(D,0):D.isData3DTexture?N.setTexture3D(D,0):D.isDataArrayTexture||D.isCompressedArrayTexture?N.setTexture2DArray(D,0):N.setTexture2D(D,0),Te.unbindTexture()},this.resetState=function(){C=0,L=0,U=null,Te.reset(),kt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ki}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorspace=Rt._getDrawingBufferColorSpace(e),t.unpackColorSpace=Rt._getUnpackColorSpace()}}class Mh{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ne(e),this.density=t}clone(){return new Mh(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Eh{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Ne(e),this.near=t,this.far=n}clone(){return new Eh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}let rh=class extends Lt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ui,this.environmentIntensity=1,this.environmentRotation=new ui,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}};class Th{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Qa,this.updateRanges=[],this.version=0,this.uuid=ci()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ci()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ci()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const kn=new F;class Fs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)kn.fromBufferAttribute(this,t),kn.applyMatrix4(e),this.setXYZ(t,kn.x,kn.y,kn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)kn.fromBufferAttribute(this,t),kn.applyNormalMatrix(e),this.setXYZ(t,kn.x,kn.y,kn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)kn.fromBufferAttribute(this,t),kn.transformDirection(e),this.setXYZ(t,kn.x,kn.y,kn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Vn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=gt(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=gt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=gt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=gt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=gt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Vn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Vn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Vn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Vn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array),s=gt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Vt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Fs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Gp extends bn{static get type(){return"SpriteMaterial"}constructor(e){super(),this.isSpriteMaterial=!0,this.color=new Ne(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let vo;const va=new F,yo=new F,xo=new F,So=new fe,ya=new fe,oy=new rt,Vc=new F,xa=new F,Gc=new F,U_=new fe,Mf=new fe,O_=new fe;class ay extends Lt{constructor(e=new Gp){if(super(),this.isSprite=!0,this.type="Sprite",vo===void 0){vo=new _t;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Th(t,5);vo.setIndex([0,1,2,0,2,3]),vo.setAttribute("position",new Fs(n,3,0,!1)),vo.setAttribute("uv",new Fs(n,2,3,!1))}this.geometry=vo,this.material=e,this.center=new fe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),yo.setFromMatrixScale(this.matrixWorld),oy.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),xo.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&yo.multiplyScalar(-xo.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const a=this.center;Wc(Vc.set(-.5,-.5,0),xo,a,yo,i,s),Wc(xa.set(.5,-.5,0),xo,a,yo,i,s),Wc(Gc.set(.5,.5,0),xo,a,yo,i,s),U_.set(0,0),Mf.set(1,0),O_.set(1,1);let c=e.ray.intersectTriangle(Vc,xa,Gc,!1,va);if(c===null&&(Wc(xa.set(-.5,.5,0),xo,a,yo,i,s),Mf.set(0,1),c=e.ray.intersectTriangle(Vc,Gc,xa,!1,va),c===null))return;const u=e.ray.origin.distanceTo(va);u<e.near||u>e.far||t.push({distance:u,point:va.clone(),uv:ei.getInterpolation(va,Vc,xa,Gc,U_,Mf,O_,new fe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Wc(r,e,t,n,i,s){So.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(ya.x=s*So.x-i*So.y,ya.y=i*So.x+s*So.y):ya.copy(So),r.copy(e),r.x+=ya.x,r.y+=ya.y,r.applyMatrix4(oy)}const Xc=new F,N_=new F;class ly extends Lt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let n=0;n<t.length;n++)if(t[n].distance===e){const i=t.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Xc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Xc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Xc.setFromMatrixPosition(e.matrixWorld),N_.setFromMatrixPosition(this.matrixWorld);const n=Xc.distanceTo(N_)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),n>=a)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const F_=new F,z_=new Pt,B_=new Pt,PA=new F,k_=new rt,Yc=new F,Ef=new An,H_=new rt,Tf=new Xo;class cy extends un{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=sp,this.bindMatrix=new rt,this.bindMatrixInverse=new rt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Nn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Yc),this.boundingBox.expandByPoint(Yc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new An),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Yc),this.boundingSphere.expandByPoint(Yc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ef.copy(this.boundingSphere),Ef.applyMatrix4(i),e.ray.intersectsSphere(Ef)!==!1&&(H_.copy(i).invert(),Tf.copy(e.ray).applyMatrix4(H_),!(this.boundingBox!==null&&Tf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Tf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Pt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===sp?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===Cv?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;z_.fromBufferAttribute(i.attributes.skinIndex,e),B_.fromBufferAttribute(i.attributes.skinWeight,e),F_.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const a=B_.getComponent(s);if(a!==0){const c=z_.getComponent(s);k_.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(PA.copy(F_).applyMatrix4(k_),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Wp extends Lt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Qi extends $t{constructor(e=null,t=1,n=1,i,s,a,c,u,h=wn,d=wn,p,m){super(null,a,c,u,h,d,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const V_=new rt,IA=new rt;class wh{constructor(e=[],t=[]){this.uuid=ci(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new rt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new rt;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,a=e.length;s<a;s++){const c=e[s]?e[s].matrixWorld:IA;V_.multiplyMatrices(c,t[s]),V_.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new wh(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Qi(t,e,e,On,ti);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let a=t[s];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),a=new Wp),this.bones.push(a),this.boneInverses.push(new rt().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const a=t[i];e.bones.push(a.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class Ho extends Vt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Mo=new rt,G_=new rt,qc=[],W_=new Nn,LA=new rt,Sa=new un,Ma=new An;class uy extends un{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Ho(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,LA)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Nn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Mo),W_.copy(e.boundingBox).applyMatrix4(Mo),this.boundingBox.union(W_)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new An),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Mo),Ma.copy(e.boundingSphere).applyMatrix4(Mo),this.boundingSphere.union(Ma)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,i=this.morphTexture.source.data.data,s=n.length+1,a=e*s+1;for(let c=0;c<n.length;c++)n[c]=i[a+c]}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Sa.geometry=this.geometry,Sa.material=this.material,Sa.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ma.copy(this.boundingSphere),Ma.applyMatrix4(n),e.ray.intersectsSphere(Ma)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,Mo),G_.multiplyMatrices(n,Mo),Sa.matrixWorld=G_,Sa.raycast(e,qc);for(let a=0,c=qc.length;a<c;a++){const u=qc[a];u.instanceId=s,u.object=this,t.push(u)}qc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Ho(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new Qi(new Float32Array(i*this.count),i,this.count,gh,ti));const s=this.morphTexture.source.data.data;let a=0;for(let h=0;h<n.length;h++)a+=n[h];const c=this.geometry.morphTargetsRelative?1:1-a,u=i*e;s[u]=c,s.set(n,u+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}function wf(r,e){return r-e}function DA(r,e){return r.z-e.z}function UA(r,e){return e.z-r.z}class OA{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,n,i){const s=this.pool,a=this.list;this.index>=s.length&&s.push({start:-1,count:-1,z:-1,index:-1});const c=s[this.index];a.push(c),this.index++,c.start=e,c.count=t,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const Kn=new rt,NA=new Ne(1,1,1),Af=new pl,Zc=new Nn,fs=new An,Ea=new F,X_=new F,FA=new F,bf=new OA,Un=new un,Jc=[];function zA(r,e,t=0){const n=e.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==e.array.constructor){const i=r.count;for(let s=0;s<i;s++)for(let a=0;a<n;a++)e.setComponent(s+t,a,r.getComponent(s,a))}else e.array.set(r.array,t*n);e.needsUpdate=!0}function ps(r,e){if(r.constructor!==e.constructor){const t=Math.min(r.length,e.length);for(let n=0;n<t;n++)e[n]=r[n]}else{const t=Math.min(r.length,e.length);e.set(new r.constructor(r.buffer,0,t))}}class hy extends un{get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}constructor(e,t,n=t*2,i){super(new _t,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new Qi(t,e,e,On,ti);this._matricesTexture=n}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),n=new Qi(t,e,e,ul,Mr);this._indirectTexture=n}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),n=new Qi(t,e,e,On,ti);n.colorSpace=Rt.workingColorSpace,this._colorsTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const s in e.attributes){const a=e.getAttribute(s),{array:c,itemSize:u,normalized:h}=a,d=new c.constructor(n*u),p=new Vt(d,u,h);t.setAttribute(s,p)}if(e.getIndex()!==null){const s=n>65535?new Uint32Array(i):new Uint16Array(i);t.setIndex(new Vt(s,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),s=t.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Nn);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const s=t[n].geometryIndex;this.getMatrixAt(n,Kn),this.getBoundingBoxAt(s,Zc).applyMatrix4(Kn),e.union(Zc)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new An);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let n=0,i=t.length;n<i;n++){if(t[n].active===!1)continue;const s=t[n].geometryIndex;this.getMatrixAt(n,Kn),this.getBoundingSphereAt(s,fs).applyMatrix4(Kn),e.union(fs)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:e};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(wf),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const s=this._matricesTexture;Kn.identity().toArray(s.image.data,i*16),s.needsUpdate=!0;const a=this._colorsTexture;return a&&(NA.toArray(a.image.data,i*4),a.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(e,t=-1,n=-1){this._initializeGeometry(e),this._validateGeometry(e);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},s=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const a=e.getIndex();if(a!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?a.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");let u;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(wf),u=this._availableGeometryIds.shift(),s[u]=i):(u=this._geometryCount,this._geometryCount++,s.push(i)),this.setGeometryAt(u,e),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,u}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),a=t.getIndex(),c=this._geometryInfo[e];if(i&&a.count>c.reservedIndexCount||t.attributes.position.count>c.reservedVertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,h=c.reservedVertexCount;c.vertexCount=t.getAttribute("position").count;for(const d in n.attributes){const p=t.getAttribute(d),m=n.getAttribute(d);zA(p,m,u);const _=p.itemSize;for(let y=p.count,S=h;y<S;y++){const x=u+y;for(let g=0;g<_;g++)m.setComponent(x,g,0)}m.needsUpdate=!0,m.addUpdateRange(u*_,h*_)}if(i){const d=c.indexStart,p=c.reservedIndexCount;c.indexCount=t.getIndex().count;for(let m=0;m<a.count;m++)s.setX(d+m,u+a.getX(m));for(let m=a.count,_=p;m<_;m++)s.setX(d+m,u);s.needsUpdate=!0,s.addUpdateRange(d,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,t.boundingBox!==null&&(c.boundingBox=t.boundingBox.clone()),c.boundingSphere=null,t.boundingSphere!==null&&(c.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const n=this._instanceInfo;for(let i=0,s=n.length;i<s;i++)n[i].geometryIndex===e&&this.deleteInstance(i);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){const t=this._instanceInfo;return e>=t.length||t[e].active===!1?this:(t[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this)}optimize(){let e=0,t=0;const n=this._geometryInfo,i=n.map((a,c)=>c).sort((a,c)=>n[a].vertexStart-n[c].vertexStart),s=this.geometry;for(let a=0,c=n.length;a<c;a++){const u=i[a],h=n[u];if(h.active!==!1){if(s.index!==null){if(h.indexStart!==t){const{indexStart:d,vertexStart:p,reservedIndexCount:m}=h,_=s.index,y=_.array,S=e-p;for(let x=d;x<d+m;x++)y[x]=y[x]+S;_.array.copyWithin(t,d,d+m),_.addUpdateRange(t,m),h.indexStart=t}t+=h.reservedIndexCount}if(h.vertexStart!==e){const{vertexStart:d,reservedVertexCount:p}=h,m=s.attributes;for(const _ in m){const y=m[_],{array:S,itemSize:x}=y;S.copyWithin(e*x,d*x,(d+p)*x),y.addUpdateRange(e*x,p*x)}h.vertexStart=e}e+=h.reservedVertexCount,h.start=s.index?h.indexStart:h.vertexStart,this._nextIndexStart=s.index?h.indexStart+h.reservedIndexCount:0,this._nextVertexStart=h.vertexStart+h.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingBox===null){const s=new Nn,a=n.index,c=n.attributes.position;for(let u=i.start,h=i.start+i.count;u<h;u++){let d=u;a&&(d=a.getX(d)),s.expandByPoint(Ea.fromBufferAttribute(c,d))}i.boundingBox=s}return t.copy(i.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[e];if(i.boundingSphere===null){const s=new An;this.getBoundingBoxAt(e,Zc),Zc.getCenter(s.center);const a=n.index,c=n.attributes.position;let u=0;for(let h=i.start,d=i.start+i.count;h<d;h++){let p=h;a&&(p=a.getX(p)),Ea.fromBufferAttribute(c,p),u=Math.max(u,s.center.distanceToSquared(Ea))}s.radius=Math.sqrt(u),i.boundingSphere=s}return t.copy(i.boundingSphere),t}setMatrixAt(e,t){const n=this._instanceInfo,i=this._matricesTexture,s=this._matricesTexture.image.data;return e>=n.length||n[e].active===!1?this:(t.toArray(s,e*16),i.needsUpdate=!0,this)}getMatrixAt(e,t){const n=this._instanceInfo,i=this._matricesTexture.image.data;return e>=n.length||n[e].active===!1?null:t.fromArray(i,e*16)}setColorAt(e,t){this._colorsTexture===null&&this._initColorsTexture();const n=this._colorsTexture,i=this._colorsTexture.image.data,s=this._instanceInfo;return e>=s.length||s[e].active===!1?this:(t.toArray(i,e*4),n.needsUpdate=!0,this)}getColorAt(e,t){const n=this._colorsTexture.image.data,i=this._instanceInfo;return e>=i.length||i[e].active===!1?null:t.fromArray(n,e*4)}setVisibleAt(e,t){const n=this._instanceInfo;return e>=n.length||n[e].active===!1||n[e].visible===t?this:(n[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._instanceInfo;return e>=t.length||t[e].active===!1?!1:t[e].visible}setGeometryIdAt(e,t){const n=this._instanceInfo,i=this._geometryInfo;return e>=n.length||n[e].active===!1||t>=i.length||i[t].active===!1?null:(n[e].geometryIndex=t,this)}getGeometryIdAt(e){const t=this._instanceInfo;return e>=t.length||t[e].active===!1?-1:t[e].geometryIndex}getGeometryRangeAt(e,t={}){if(e<0||e>=this._geometryCount)return null;const n=this._geometryInfo[e];return t.vertexStart=n.vertexStart,t.vertexCount=n.vertexCount,t.reservedVertexCount=n.reservedVertexCount,t.indexStart=n.indexStart,t.indexCount=n.indexCount,t.reservedIndexCount=n.reservedIndexCount,t.start=n.start,t.count=n.count,t}setInstanceCount(e){const t=this._availableInstanceIds,n=this._instanceInfo;for(t.sort(wf);t[t.length-1]===n.length;)n.pop(),t.pop();if(e<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const i=new Int32Array(e),s=new Int32Array(e);ps(this._multiDrawCounts,i),ps(this._multiDrawStarts,s),this._multiDrawCounts=i,this._multiDrawStarts=s,this._maxInstanceCount=e;const a=this._indirectTexture,c=this._matricesTexture,u=this._colorsTexture;a.dispose(),this._initIndirectTexture(),ps(a.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),ps(c.image.data,this._matricesTexture.image.data),u&&(u.dispose(),this._initColorsTexture(),ps(u.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(u=>u.indexStart+u.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const s=this.geometry;s.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new _t,this._initializeGeometry(s));const a=this.geometry;s.index&&ps(s.index.array,a.index.array);for(const c in s.attributes)ps(s.attributes[c].array,a.attributes[c].array)}raycast(e,t){const n=this._instanceInfo,i=this._geometryInfo,s=this.matrixWorld,a=this.geometry;Un.material=this.material,Un.geometry.index=a.index,Un.geometry.attributes=a.attributes,Un.geometry.boundingBox===null&&(Un.geometry.boundingBox=new Nn),Un.geometry.boundingSphere===null&&(Un.geometry.boundingSphere=new An);for(let c=0,u=n.length;c<u;c++){if(!n[c].visible||!n[c].active)continue;const h=n[c].geometryIndex,d=i[h];Un.geometry.setDrawRange(d.start,d.count),this.getMatrixAt(c,Un.matrixWorld).premultiply(s),this.getBoundingBoxAt(h,Un.geometry.boundingBox),this.getBoundingSphereAt(h,Un.geometry.boundingSphere),Un.raycast(e,Jc);for(let p=0,m=Jc.length;p<m;p++){const _=Jc[p];_.object=this,_.batchId=c,t.push(_)}Jc.length=0}Un.material=null,Un.geometry.index=null,Un.geometry.attributes={},Un.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null),this}onBeforeRender(e,t,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const a=i.getIndex(),c=a===null?1:a.array.BYTES_PER_ELEMENT,u=this._instanceInfo,h=this._multiDrawStarts,d=this._multiDrawCounts,p=this._geometryInfo,m=this.perObjectFrustumCulled,_=this._indirectTexture,y=_.image.data;m&&(Kn.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Af.setFromProjectionMatrix(Kn,e.coordinateSystem));let S=0;if(this.sortObjects){Kn.copy(this.matrixWorld).invert(),Ea.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Kn),X_.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(Kn);for(let E=0,w=u.length;E<w;E++)if(u[E].visible&&u[E].active){const T=u[E].geometryIndex;this.getMatrixAt(E,Kn),this.getBoundingSphereAt(T,fs).applyMatrix4(Kn);let I=!1;if(m&&(I=!Af.intersectsSphere(fs)),!I){const C=p[T],L=FA.subVectors(fs.center,Ea).dot(X_);bf.push(C.start,C.count,L,E)}}const x=bf.list,g=this.customSort;g===null?x.sort(s.transparent?UA:DA):g.call(this,x,n);for(let E=0,w=x.length;E<w;E++){const T=x[E];h[S]=T.start*c,d[S]=T.count,y[S]=T.index,S++}bf.reset()}else for(let x=0,g=u.length;x<g;x++)if(u[x].visible&&u[x].active){const E=u[x].geometryIndex;let w=!1;if(m&&(this.getMatrixAt(x,Kn),this.getBoundingSphereAt(E,fs).applyMatrix4(Kn),w=!Af.intersectsSphere(fs)),!w){const T=p[E];h[S]=T.start*c,d[S]=T.count,y[S]=x,S++}}_.needsUpdate=!0,this._multiDrawCount=S,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,s,a){this.onBeforeRender(e,null,i,s,a)}}class Xn extends bn{static get type(){return"LineBasicMaterial"}constructor(e){super(),this.isLineBasicMaterial=!0,this.color=new Ne(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const sh=new F,oh=new F,Y_=new rt,Ta=new Xo,Kc=new An,Cf=new F,q_=new F;class Yr extends Lt{constructor(e=new _t,t=new Xn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)sh.fromBufferAttribute(t,i-1),oh.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=sh.distanceTo(oh);e.setAttribute("lineDistance",new Ze(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Kc.copy(n.boundingSphere),Kc.applyMatrix4(i),Kc.radius+=s,e.ray.intersectsSphere(Kc)===!1)return;Y_.copy(i).invert(),Ta.copy(e.ray).applyMatrix4(Y_);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=this.isLineSegments?2:1,d=n.index,m=n.attributes.position;if(d!==null){const _=Math.max(0,a.start),y=Math.min(d.count,a.start+a.count);for(let S=_,x=y-1;S<x;S+=h){const g=d.getX(S),E=d.getX(S+1),w=jc(this,e,Ta,u,g,E);w&&t.push(w)}if(this.isLineLoop){const S=d.getX(y-1),x=d.getX(_),g=jc(this,e,Ta,u,S,x);g&&t.push(g)}}else{const _=Math.max(0,a.start),y=Math.min(m.count,a.start+a.count);for(let S=_,x=y-1;S<x;S+=h){const g=jc(this,e,Ta,u,S,S+1);g&&t.push(g)}if(this.isLineLoop){const S=jc(this,e,Ta,u,y-1,_);S&&t.push(S)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function jc(r,e,t,n,i,s){const a=r.geometry.attributes.position;if(sh.fromBufferAttribute(a,i),oh.fromBufferAttribute(a,s),t.distanceSqToSegment(sh,oh,Cf,q_)>n)return;Cf.applyMatrix4(r.matrixWorld);const u=e.ray.origin.distanceTo(Cf);if(!(u<e.near||u>e.far))return{distance:u,point:q_.clone().applyMatrix4(r.matrixWorld),index:i,face:null,faceIndex:null,barycoord:null,object:r}}const Z_=new F,J_=new F;class tr extends Yr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)Z_.fromBufferAttribute(t,i),J_.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Z_.distanceTo(J_);e.setAttribute("lineDistance",new Ze(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class dy extends Yr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Xp extends bn{static get type(){return"PointsMaterial"}constructor(e){super(),this.isPointsMaterial=!0,this.color=new Ne(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const K_=new rt,hp=new Xo,Qc=new An,$c=new F;class fy extends Lt{constructor(e=new _t,t=new Xp){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Qc.copy(n.boundingSphere),Qc.applyMatrix4(i),Qc.radius+=s,e.ray.intersectsSphere(Qc)===!1)return;K_.copy(i).invert(),hp.copy(e.ray).applyMatrix4(K_);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,a.start),_=Math.min(h.count,a.start+a.count);for(let y=m,S=_;y<S;y++){const x=h.getX(y);$c.fromBufferAttribute(p,x),j_($c,x,u,i,e,t,this)}}else{const m=Math.max(0,a.start),_=Math.min(p.count,a.start+a.count);for(let y=m,S=_;y<S;y++)$c.fromBufferAttribute(p,y),j_($c,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function j_(r,e,t,n,i,s,a){const c=hp.distanceSqToPoint(r);if(c<t){const u=new F;hp.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,faceIndex:null,barycoord:null,object:a})}}class BA extends $t{constructor(e,t,n,i,s,a,c,u,h){super(e,t,n,i,s,a,c,u,h),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:pn,this.magFilter=s!==void 0?s:pn,this.generateMipmaps=!1;const d=this;function p(){d.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class kA extends $t{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=wn,this.minFilter=wn,this.generateMipmaps=!1,this.needsUpdate=!0}}class Ah extends $t{constructor(e,t,n,i,s,a,c,u,h,d,p,m){super(null,a,c,u,h,d,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class HA extends Ah{constructor(e,t,n,i,s,a){super(e,t,n,s,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Si,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class VA extends Ah{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,Sr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class GA extends $t{constructor(e,t,n,i,s,a,c,u,h){super(e,t,n,i,s,a,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Ui{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let a;t?a=t:a=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-a,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===a)return i/(s-1);const d=n[i],m=n[i+1]-d,_=(a-d)/m;return(i+_)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const a=this.getPoint(i),c=this.getPoint(s),u=t||(a.isVector2?new fe:new F);return u.copy(c).sub(a).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new F,i=[],s=[],a=[],c=new F,u=new rt;for(let _=0;_<=e;_++){const y=_/e;i[_]=this.getTangentAt(y,new F)}s[0]=new F,a[0]=new F;let h=Number.MAX_VALUE;const d=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);d<=h&&(h=d,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),a[0].crossVectors(i[0],s[0]);for(let _=1;_<=e;_++){if(s[_]=s[_-1].clone(),a[_]=a[_-1].clone(),c.crossVectors(i[_-1],i[_]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(nn(i[_-1].dot(i[_]),-1,1));s[_].applyMatrix4(u.makeRotationAxis(c,y))}a[_].crossVectors(i[_],s[_])}if(t===!0){let _=Math.acos(nn(s[0].dot(s[e]),-1,1));_/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(_=-_);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],_*y)),a[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class bh extends Ui{constructor(e=0,t=0,n=1,i=1,s=0,a=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=c,this.aRotation=u}getPoint(e,t=new fe){const n=t,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(a?s=0:s=i),this.aClockwise===!0&&!a&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const d=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,_=h-this.aY;u=m*d-_*p+this.aX,h=m*p+_*d+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class py extends bh{constructor(e,t,n,i,s,a){super(e,t,n,n,i,s,a),this.isArcCurve=!0,this.type="ArcCurve"}}function Yp(){let r=0,e=0,t=0,n=0;function i(s,a,c,u){r=s,e=c,t=-3*s+3*a-2*c-u,n=2*s-2*a+c+u}return{initCatmullRom:function(s,a,c,u,h){i(a,c,h*(c-s),h*(u-a))},initNonuniformCatmullRom:function(s,a,c,u,h,d,p){let m=(a-s)/h-(c-s)/(h+d)+(c-a)/d,_=(c-a)/d-(u-a)/(d+p)+(u-c)/p;m*=d,_*=d,i(a,c,m,_)},calc:function(s){const a=s*s,c=a*s;return r+e*s+t*a+n*c}}}const eu=new F,Rf=new Yp,Pf=new Yp,If=new Yp;class my extends Ui{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new F){const n=t,i=this.points,s=i.length,a=(s-(this.closed?0:1))*e;let c=Math.floor(a),u=a-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,d;this.closed||c>0?h=i[(c-1)%s]:(eu.subVectors(i[0],i[1]).add(i[0]),h=eu);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?d=i[(c+2)%s]:(eu.subVectors(i[s-1],i[s-2]).add(i[s-1]),d=eu),this.curveType==="centripetal"||this.curveType==="chordal"){const _=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),_),S=Math.pow(p.distanceToSquared(m),_),x=Math.pow(m.distanceToSquared(d),_);S<1e-4&&(S=1),y<1e-4&&(y=S),x<1e-4&&(x=S),Rf.initNonuniformCatmullRom(h.x,p.x,m.x,d.x,y,S,x),Pf.initNonuniformCatmullRom(h.y,p.y,m.y,d.y,y,S,x),If.initNonuniformCatmullRom(h.z,p.z,m.z,d.z,y,S,x)}else this.curveType==="catmullrom"&&(Rf.initCatmullRom(h.x,p.x,m.x,d.x,this.tension),Pf.initCatmullRom(h.y,p.y,m.y,d.y,this.tension),If.initCatmullRom(h.z,p.z,m.z,d.z,this.tension));return n.set(Rf.calc(u),Pf.calc(u),If.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new F().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Q_(r,e,t,n,i){const s=(n-e)*.5,a=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+a)*u+(-3*t+3*n-2*s-a)*c+s*r+t}function WA(r,e){const t=1-r;return t*t*e}function XA(r,e){return 2*(1-r)*r*e}function YA(r,e){return r*r*e}function Wa(r,e,t,n){return WA(r,e)+XA(r,t)+YA(r,n)}function qA(r,e){const t=1-r;return t*t*t*e}function ZA(r,e){const t=1-r;return 3*t*t*r*e}function JA(r,e){return 3*(1-r)*r*r*e}function KA(r,e){return r*r*r*e}function Xa(r,e,t,n,i){return qA(r,e)+ZA(r,t)+JA(r,n)+KA(r,i)}class qp extends Ui{constructor(e=new fe,t=new fe,n=new fe,i=new fe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new fe){const n=t,i=this.v0,s=this.v1,a=this.v2,c=this.v3;return n.set(Xa(e,i.x,s.x,a.x,c.x),Xa(e,i.y,s.y,a.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class gy extends Ui{constructor(e=new F,t=new F,n=new F,i=new F){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new F){const n=t,i=this.v0,s=this.v1,a=this.v2,c=this.v3;return n.set(Xa(e,i.x,s.x,a.x,c.x),Xa(e,i.y,s.y,a.y,c.y),Xa(e,i.z,s.z,a.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Zp extends Ui{constructor(e=new fe,t=new fe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new fe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new fe){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class _y extends Ui{constructor(e=new F,t=new F){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new F){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new F){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Jp extends Ui{constructor(e=new fe,t=new fe,n=new fe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new fe){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(Wa(e,i.x,s.x,a.x),Wa(e,i.y,s.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Kp extends Ui{constructor(e=new F,t=new F,n=new F){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new F){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(Wa(e,i.x,s.x,a.x),Wa(e,i.y,s.y,a.y),Wa(e,i.z,s.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class jp extends Ui{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new fe){const n=t,i=this.points,s=(i.length-1)*e,a=Math.floor(s),c=s-a,u=i[a===0?a:a-1],h=i[a],d=i[a>i.length-2?i.length-1:a+1],p=i[a>i.length-3?i.length-1:a+2];return n.set(Q_(c,u.x,h.x,d.x,p.x),Q_(c,u.y,h.y,d.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new fe().fromArray(i))}return this}}var ah=Object.freeze({__proto__:null,ArcCurve:py,CatmullRomCurve3:my,CubicBezierCurve:qp,CubicBezierCurve3:gy,EllipseCurve:bh,LineCurve:Zp,LineCurve3:_y,QuadraticBezierCurve:Jp,QuadraticBezierCurve3:Kp,SplineCurve:jp});class vy extends Ui{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new ah[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const a=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-a/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const a=s[i],c=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,u=a.getPoints(c);for(let h=0;h<u.length;h++){const d=u[h];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new ah[i.type]().fromJSON(i))}return this}}class tl extends vy{constructor(e){super(),this.type="Path",this.currentPoint=new fe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Zp(this.currentPoint.clone(),new fe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Jp(this.currentPoint.clone(),new fe(e,t),new fe(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,a){const c=new qp(this.currentPoint.clone(),new fe(e,t),new fe(n,i),new fe(s,a));return this.curves.push(c),this.currentPoint.set(s,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new jp(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,a){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,a),this}absarc(e,t,n,i,s,a){return this.absellipse(e,t,n,n,i,s,a),this}ellipse(e,t,n,i,s,a,c,u){const h=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+h,t+d,n,i,s,a,c,u),this}absellipse(e,t,n,i,s,a,c,u){const h=new bh(e,t,n,i,s,a,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const d=h.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class gl extends _t{constructor(e=[new fe(0,-.5),new fe(.5,0),new fe(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=nn(i,0,Math.PI*2);const s=[],a=[],c=[],u=[],h=[],d=1/t,p=new F,m=new fe,_=new F,y=new F,S=new F;let x=0,g=0;for(let E=0;E<=e.length-1;E++)switch(E){case 0:x=e[E+1].x-e[E].x,g=e[E+1].y-e[E].y,_.x=g*1,_.y=-x,_.z=g*0,S.copy(_),_.normalize(),u.push(_.x,_.y,_.z);break;case e.length-1:u.push(S.x,S.y,S.z);break;default:x=e[E+1].x-e[E].x,g=e[E+1].y-e[E].y,_.x=g*1,_.y=-x,_.z=g*0,y.copy(_),_.x+=S.x,_.y+=S.y,_.z+=S.z,_.normalize(),u.push(_.x,_.y,_.z),S.copy(y)}for(let E=0;E<=t;E++){const w=n+E*d*i,T=Math.sin(w),I=Math.cos(w);for(let C=0;C<=e.length-1;C++){p.x=e[C].x*T,p.y=e[C].y,p.z=e[C].x*I,a.push(p.x,p.y,p.z),m.x=E/t,m.y=C/(e.length-1),c.push(m.x,m.y);const L=u[3*C+0]*T,U=u[3*C+1],R=u[3*C+0]*I;h.push(L,U,R)}}for(let E=0;E<t;E++)for(let w=0;w<e.length-1;w++){const T=w+E*e.length,I=T,C=T+e.length,L=T+e.length+1,U=T+1;s.push(I,C,U),s.push(L,U,C)}this.setIndex(s),this.setAttribute("position",new Ze(a,3)),this.setAttribute("uv",new Ze(c,2)),this.setAttribute("normal",new Ze(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new gl(e.points,e.segments,e.phiStart,e.phiLength)}}class Ch extends gl{constructor(e=1,t=1,n=4,i=8){const s=new tl;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new Ch(e.radius,e.length,e.capSegments,e.radialSegments)}}class Rh extends _t{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],a=[],c=[],u=[],h=new F,d=new fe;a.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const _=n+p/t*i;h.x=e*Math.cos(_),h.y=e*Math.sin(_),a.push(h.x,h.y,h.z),c.push(0,0,1),d.x=(a[m]/e+1)/2,d.y=(a[m+1]/e+1)/2,u.push(d.x,d.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new Ze(a,3)),this.setAttribute("normal",new Ze(c,3)),this.setAttribute("uv",new Ze(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Rh(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Zo extends _t{constructor(e=1,t=1,n=1,i=32,s=1,a=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:a,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const d=[],p=[],m=[],_=[];let y=0;const S=[],x=n/2;let g=0;E(),a===!1&&(e>0&&w(!0),t>0&&w(!1)),this.setIndex(d),this.setAttribute("position",new Ze(p,3)),this.setAttribute("normal",new Ze(m,3)),this.setAttribute("uv",new Ze(_,2));function E(){const T=new F,I=new F;let C=0;const L=(t-e)/n;for(let U=0;U<=s;U++){const R=[],b=U/s,O=b*(t-e)+e;for(let q=0;q<=i;q++){const Y=q/i,Q=Y*u+c,ae=Math.sin(Q),$=Math.cos(Q);I.x=O*ae,I.y=-b*n+x,I.z=O*$,p.push(I.x,I.y,I.z),T.set(ae,L,$).normalize(),m.push(T.x,T.y,T.z),_.push(Y,1-b),R.push(y++)}S.push(R)}for(let U=0;U<i;U++)for(let R=0;R<s;R++){const b=S[R][U],O=S[R+1][U],q=S[R+1][U+1],Y=S[R][U+1];(e>0||R!==0)&&(d.push(b,O,Y),C+=3),(t>0||R!==s-1)&&(d.push(O,q,Y),C+=3)}h.addGroup(g,C,0),g+=C}function w(T){const I=y,C=new fe,L=new F;let U=0;const R=T===!0?e:t,b=T===!0?1:-1;for(let q=1;q<=i;q++)p.push(0,x*b,0),m.push(0,b,0),_.push(.5,.5),y++;const O=y;for(let q=0;q<=i;q++){const Q=q/i*u+c,ae=Math.cos(Q),$=Math.sin(Q);L.x=R*$,L.y=x*b,L.z=R*ae,p.push(L.x,L.y,L.z),m.push(0,b,0),C.x=ae*.5+.5,C.y=$*.5*b+.5,_.push(C.x,C.y),y++}for(let q=0;q<i;q++){const Y=I+q,Q=O+q;T===!0?d.push(Q,Q+1,Y):d.push(Q+1,Q,Y),U+=3}h.addGroup(g,U,T===!0?1:2),g+=U}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Zo(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ph extends Zo{constructor(e=1,t=1,n=32,i=1,s=!1,a=0,c=Math.PI*2){super(0,e,t,n,i,s,a,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:a,thetaLength:c}}static fromJSON(e){return new Ph(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Jr extends _t{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],a=[];c(i),h(n),d(),this.setAttribute("position",new Ze(s,3)),this.setAttribute("normal",new Ze(s.slice(),3)),this.setAttribute("uv",new Ze(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const w=new F,T=new F,I=new F;for(let C=0;C<t.length;C+=3)_(t[C+0],w),_(t[C+1],T),_(t[C+2],I),u(w,T,I,E)}function u(E,w,T,I){const C=I+1,L=[];for(let U=0;U<=C;U++){L[U]=[];const R=E.clone().lerp(T,U/C),b=w.clone().lerp(T,U/C),O=C-U;for(let q=0;q<=O;q++)q===0&&U===C?L[U][q]=R:L[U][q]=R.clone().lerp(b,q/O)}for(let U=0;U<C;U++)for(let R=0;R<2*(C-U)-1;R++){const b=Math.floor(R/2);R%2===0?(m(L[U][b+1]),m(L[U+1][b]),m(L[U][b])):(m(L[U][b+1]),m(L[U+1][b+1]),m(L[U+1][b]))}}function h(E){const w=new F;for(let T=0;T<s.length;T+=3)w.x=s[T+0],w.y=s[T+1],w.z=s[T+2],w.normalize().multiplyScalar(E),s[T+0]=w.x,s[T+1]=w.y,s[T+2]=w.z}function d(){const E=new F;for(let w=0;w<s.length;w+=3){E.x=s[w+0],E.y=s[w+1],E.z=s[w+2];const T=x(E)/2/Math.PI+.5,I=g(E)/Math.PI+.5;a.push(T,1-I)}y(),p()}function p(){for(let E=0;E<a.length;E+=6){const w=a[E+0],T=a[E+2],I=a[E+4],C=Math.max(w,T,I),L=Math.min(w,T,I);C>.9&&L<.1&&(w<.2&&(a[E+0]+=1),T<.2&&(a[E+2]+=1),I<.2&&(a[E+4]+=1))}}function m(E){s.push(E.x,E.y,E.z)}function _(E,w){const T=E*3;w.x=e[T+0],w.y=e[T+1],w.z=e[T+2]}function y(){const E=new F,w=new F,T=new F,I=new F,C=new fe,L=new fe,U=new fe;for(let R=0,b=0;R<s.length;R+=9,b+=6){E.set(s[R+0],s[R+1],s[R+2]),w.set(s[R+3],s[R+4],s[R+5]),T.set(s[R+6],s[R+7],s[R+8]),C.set(a[b+0],a[b+1]),L.set(a[b+2],a[b+3]),U.set(a[b+4],a[b+5]),I.copy(E).add(w).add(T).divideScalar(3);const O=x(I);S(C,b+0,E,O),S(L,b+2,w,O),S(U,b+4,T,O)}}function S(E,w,T,I){I<0&&E.x===1&&(a[w]=E.x-1),T.x===0&&T.z===0&&(a[w]=I/2/Math.PI+.5)}function x(E){return Math.atan2(E.z,-E.x)}function g(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Jr(e.vertices,e.indices,e.radius,e.details)}}class Ih extends Jr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ih(e.radius,e.detail)}}const tu=new F,nu=new F,Lf=new F,iu=new ei;class yy extends _t{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(Is*t),a=e.getIndex(),c=e.getAttribute("position"),u=a?a.count:c.count,h=[0,0,0],d=["a","b","c"],p=new Array(3),m={},_=[];for(let y=0;y<u;y+=3){a?(h[0]=a.getX(y),h[1]=a.getX(y+1),h[2]=a.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:S,b:x,c:g}=iu;if(S.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),g.fromBufferAttribute(c,h[2]),iu.getNormal(Lf),p[0]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let E=0;E<3;E++){const w=(E+1)%3,T=p[E],I=p[w],C=iu[d[E]],L=iu[d[w]],U=`${T}_${I}`,R=`${I}_${T}`;R in m&&m[R]?(Lf.dot(m[R].normal)<=s&&(_.push(C.x,C.y,C.z),_.push(L.x,L.y,L.z)),m[R]=null):U in m||(m[U]={index0:h[E],index1:h[w],normal:Lf.clone()})}}for(const y in m)if(m[y]){const{index0:S,index1:x}=m[y];tu.fromBufferAttribute(c,S),nu.fromBufferAttribute(c,x),_.push(tu.x,tu.y,tu.z),_.push(nu.x,nu.y,nu.z)}this.setAttribute("position",new Ze(_,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Ds extends tl{constructor(e){super(e),this.uuid=ci(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new tl().fromJSON(i))}return this}}const jA={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=xy(r,0,i,t,!0);const a=[];if(!s||s.next===s.prev)return a;let c,u,h,d,p,m,_;if(n&&(s=nb(r,e,s,t)),r.length>80*t){c=h=r[0],u=d=r[1];for(let y=t;y<i;y+=t)p=r[y],m=r[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>d&&(d=m);_=Math.max(h-c,d-u),_=_!==0?32767/_:0}return nl(s,a,t,c,u,_,0),a}};function xy(r,e,t,n,i){let s,a;if(i===fb(r,e,t,n)>0)for(s=e;s<t;s+=n)a=$_(s,r[s],r[s+1],a);else for(s=t-n;s>=e;s-=n)a=$_(s,r[s],r[s+1],a);return a&&Lh(a,a.next)&&(rl(a),a=a.next),a}function zs(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(Lh(t,t.next)||Qt(t.prev,t,t.next)===0)){if(rl(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function nl(r,e,t,n,i,s,a){if(!r)return;!a&&s&&ab(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?$A(r,n,i,s):QA(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),rl(r),r=h.next,c=h.next;continue}if(r=h,r===c){a?a===1?(r=eb(zs(r),e,t),nl(r,e,t,n,i,s,2)):a===2&&tb(r,e,t,n,i,s):nl(zs(r),e,t,n,i,s,1);break}}}function QA(r){const e=r.prev,t=r,n=r.next;if(Qt(e,t,n)>=0)return!1;const i=e.x,s=t.x,a=n.x,c=e.y,u=t.y,h=n.y,d=i<s?i<a?i:a:s<a?s:a,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>a?i:a:s>a?s:a,_=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=d&&y.x<=m&&y.y>=p&&y.y<=_&&Oo(i,c,s,u,a,h,y.x,y.y)&&Qt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function $A(r,e,t,n){const i=r.prev,s=r,a=r.next;if(Qt(i,s,a)>=0)return!1;const c=i.x,u=s.x,h=a.x,d=i.y,p=s.y,m=a.y,_=c<u?c<h?c:h:u<h?u:h,y=d<p?d<m?d:m:p<m?p:m,S=c>u?c>h?c:h:u>h?u:h,x=d>p?d>m?d:m:p>m?p:m,g=dp(_,y,e,t,n),E=dp(S,x,e,t,n);let w=r.prevZ,T=r.nextZ;for(;w&&w.z>=g&&T&&T.z<=E;){if(w.x>=_&&w.x<=S&&w.y>=y&&w.y<=x&&w!==i&&w!==a&&Oo(c,d,u,p,h,m,w.x,w.y)&&Qt(w.prev,w,w.next)>=0||(w=w.prevZ,T.x>=_&&T.x<=S&&T.y>=y&&T.y<=x&&T!==i&&T!==a&&Oo(c,d,u,p,h,m,T.x,T.y)&&Qt(T.prev,T,T.next)>=0))return!1;T=T.nextZ}for(;w&&w.z>=g;){if(w.x>=_&&w.x<=S&&w.y>=y&&w.y<=x&&w!==i&&w!==a&&Oo(c,d,u,p,h,m,w.x,w.y)&&Qt(w.prev,w,w.next)>=0)return!1;w=w.prevZ}for(;T&&T.z<=E;){if(T.x>=_&&T.x<=S&&T.y>=y&&T.y<=x&&T!==i&&T!==a&&Oo(c,d,u,p,h,m,T.x,T.y)&&Qt(T.prev,T,T.next)>=0)return!1;T=T.nextZ}return!0}function eb(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!Lh(i,s)&&Sy(i,n,n.next,s)&&il(i,s)&&il(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),rl(n),rl(n.next),n=r=s),n=n.next}while(n!==r);return zs(n)}function tb(r,e,t,n,i,s){let a=r;do{let c=a.next.next;for(;c!==a.prev;){if(a.i!==c.i&&ub(a,c)){let u=My(a,c);a=zs(a,a.next),u=zs(u,u.next),nl(a,e,t,n,i,s,0),nl(u,e,t,n,i,s,0);return}c=c.next}a=a.next}while(a!==r)}function nb(r,e,t,n){const i=[];let s,a,c,u,h;for(s=0,a=e.length;s<a;s++)c=e[s]*n,u=s<a-1?e[s+1]*n:r.length,h=xy(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(cb(h));for(i.sort(ib),s=0;s<i.length;s++)t=rb(i[s],t);return t}function ib(r,e){return r.x-e.x}function rb(r,e){const t=sb(r,e);if(!t)return e;const n=My(t,r);return zs(n,n.next),zs(t,t.next)}function sb(r,e){let t=e,n=-1/0,i;const s=r.x,a=r.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const m=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let d=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&Oo(a<h?s:n,a,u,h,a<h?n:s,a,t.x,t.y)&&(p=Math.abs(a-t.y)/(s-t.x),il(t,r)&&(p<d||p===d&&(t.x>i.x||t.x===i.x&&ob(i,t)))&&(i=t,d=p)),t=t.next;while(t!==c);return i}function ob(r,e){return Qt(r.prev,r,e.prev)<0&&Qt(e.next,r,r.next)<0}function ab(r,e,t,n){let i=r;do i.z===0&&(i.z=dp(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,lb(i)}function lb(r){let e,t,n,i,s,a,c,u,h=1;do{for(t=r,r=null,s=null,a=0;t;){for(a++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(a>1);return r}function dp(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function cb(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function Oo(r,e,t,n,i,s,a,c){return(i-a)*(e-c)>=(r-a)*(s-c)&&(r-a)*(n-c)>=(t-a)*(e-c)&&(t-a)*(s-c)>=(i-a)*(n-c)}function ub(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!hb(r,e)&&(il(r,e)&&il(e,r)&&db(r,e)&&(Qt(r.prev,r,e.prev)||Qt(r,e.prev,e))||Lh(r,e)&&Qt(r.prev,r,r.next)>0&&Qt(e.prev,e,e.next)>0)}function Qt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Lh(r,e){return r.x===e.x&&r.y===e.y}function Sy(r,e,t,n){const i=su(Qt(r,e,t)),s=su(Qt(r,e,n)),a=su(Qt(t,n,r)),c=su(Qt(t,n,e));return!!(i!==s&&a!==c||i===0&&ru(r,t,e)||s===0&&ru(r,n,e)||a===0&&ru(t,r,n)||c===0&&ru(t,e,n))}function ru(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function su(r){return r>0?1:r<0?-1:0}function hb(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Sy(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function il(r,e){return Qt(r.prev,r,r.next)<0?Qt(r,e,r.next)>=0&&Qt(r,r.prev,e)>=0:Qt(r,e,r.prev)<0||Qt(r,r.next,e)<0}function db(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function My(r,e){const t=new fp(r.i,r.x,r.y),n=new fp(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function $_(r,e,t,n){const i=new fp(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function rl(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function fp(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function fb(r,e,t,n){let i=0;for(let s=e,a=t-n;s<t;s+=n)i+=(r[a]-r[s])*(r[s+1]+r[a+1]),a=s;return i}class $i{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return $i.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];e0(e),t0(n,e);let a=e.length;t.forEach(e0);for(let u=0;u<t.length;u++)i.push(a),a+=t[u].length,t0(n,t[u]);const c=jA.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function e0(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function t0(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Dh extends _t{constructor(e=new Ds([new fe(.5,.5),new fe(-.5,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];a(h)}this.setAttribute("position",new Ze(i,3)),this.setAttribute("uv",new Ze(s,2)),this.computeVertexNormals();function a(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,_=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:_-.1,S=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const g=t.extrudePath,E=t.UVGenerator!==void 0?t.UVGenerator:pb;let w,T=!1,I,C,L,U;g&&(w=g.getSpacedPoints(d),T=!0,m=!1,I=g.computeFrenetFrames(d,!1),C=new F,L=new F,U=new F),m||(x=0,_=0,y=0,S=0);const R=c.extractPoints(h);let b=R.shape;const O=R.holes;if(!$i.isClockWise(b)){b=b.reverse();for(let he=0,_e=O.length;he<_e;he++){const k=O[he];$i.isClockWise(k)&&(O[he]=k.reverse())}}const Y=$i.triangulateShape(b,O),Q=b;for(let he=0,_e=O.length;he<_e;he++){const k=O[he];b=b.concat(k)}function ae(he,_e,k){return _e||console.error("THREE.ExtrudeGeometry: vec does not exist"),he.clone().addScaledVector(_e,k)}const $=b.length,pe=Y.length;function z(he,_e,k){let Je,ye,ze;const Te=he.x-_e.x,nt=he.y-_e.y,De=k.x-he.x,N=k.y-he.y,P=Te*Te+nt*nt,K=Te*N-nt*De;if(Math.abs(K)>Number.EPSILON){const ce=Math.sqrt(P),me=Math.sqrt(De*De+N*N),ue=_e.x-nt/ce,qe=_e.y+Te/ce,be=k.x-N/me,Fe=k.y+De/me,wt=((be-ue)*N-(Fe-qe)*De)/(Te*N-nt*De);Je=ue+Te*wt-he.x,ye=qe+nt*wt-he.y;const Se=Je*Je+ye*ye;if(Se<=2)return new fe(Je,ye);ze=Math.sqrt(Se/2)}else{let ce=!1;Te>Number.EPSILON?De>Number.EPSILON&&(ce=!0):Te<-Number.EPSILON?De<-Number.EPSILON&&(ce=!0):Math.sign(nt)===Math.sign(N)&&(ce=!0),ce?(Je=-nt,ye=Te,ze=Math.sqrt(P)):(Je=Te,ye=nt,ze=Math.sqrt(P/2))}return new fe(Je/ze,ye/ze)}const Z=[];for(let he=0,_e=Q.length,k=_e-1,Je=he+1;he<_e;he++,k++,Je++)k===_e&&(k=0),Je===_e&&(Je=0),Z[he]=z(Q[he],Q[k],Q[Je]);const J=[];let re,xe=Z.concat();for(let he=0,_e=O.length;he<_e;he++){const k=O[he];re=[];for(let Je=0,ye=k.length,ze=ye-1,Te=Je+1;Je<ye;Je++,ze++,Te++)ze===ye&&(ze=0),Te===ye&&(Te=0),re[Je]=z(k[Je],k[ze],k[Te]);J.push(re),xe=xe.concat(re)}for(let he=0;he<x;he++){const _e=he/x,k=_*Math.cos(_e*Math.PI/2),Je=y*Math.sin(_e*Math.PI/2)+S;for(let ye=0,ze=Q.length;ye<ze;ye++){const Te=ae(Q[ye],Z[ye],Je);ve(Te.x,Te.y,-k)}for(let ye=0,ze=O.length;ye<ze;ye++){const Te=O[ye];re=J[ye];for(let nt=0,De=Te.length;nt<De;nt++){const N=ae(Te[nt],re[nt],Je);ve(N.x,N.y,-k)}}}const Be=y+S;for(let he=0;he<$;he++){const _e=m?ae(b[he],xe[he],Be):b[he];T?(L.copy(I.normals[0]).multiplyScalar(_e.x),C.copy(I.binormals[0]).multiplyScalar(_e.y),U.copy(w[0]).add(L).add(C),ve(U.x,U.y,U.z)):ve(_e.x,_e.y,0)}for(let he=1;he<=d;he++)for(let _e=0;_e<$;_e++){const k=m?ae(b[_e],xe[_e],Be):b[_e];T?(L.copy(I.normals[he]).multiplyScalar(k.x),C.copy(I.binormals[he]).multiplyScalar(k.y),U.copy(w[he]).add(L).add(C),ve(U.x,U.y,U.z)):ve(k.x,k.y,p/d*he)}for(let he=x-1;he>=0;he--){const _e=he/x,k=_*Math.cos(_e*Math.PI/2),Je=y*Math.sin(_e*Math.PI/2)+S;for(let ye=0,ze=Q.length;ye<ze;ye++){const Te=ae(Q[ye],Z[ye],Je);ve(Te.x,Te.y,p+k)}for(let ye=0,ze=O.length;ye<ze;ye++){const Te=O[ye];re=J[ye];for(let nt=0,De=Te.length;nt<De;nt++){const N=ae(Te[nt],re[nt],Je);T?ve(N.x,N.y+w[d-1].y,w[d-1].x+k):ve(N.x,N.y,p+k)}}}ne(),ge();function ne(){const he=i.length/3;if(m){let _e=0,k=$*_e;for(let Je=0;Je<pe;Je++){const ye=Y[Je];Qe(ye[2]+k,ye[1]+k,ye[0]+k)}_e=d+x*2,k=$*_e;for(let Je=0;Je<pe;Je++){const ye=Y[Je];Qe(ye[0]+k,ye[1]+k,ye[2]+k)}}else{for(let _e=0;_e<pe;_e++){const k=Y[_e];Qe(k[2],k[1],k[0])}for(let _e=0;_e<pe;_e++){const k=Y[_e];Qe(k[0]+$*d,k[1]+$*d,k[2]+$*d)}}n.addGroup(he,i.length/3-he,0)}function ge(){const he=i.length/3;let _e=0;we(Q,_e),_e+=Q.length;for(let k=0,Je=O.length;k<Je;k++){const ye=O[k];we(ye,_e),_e+=ye.length}n.addGroup(he,i.length/3-he,1)}function we(he,_e){let k=he.length;for(;--k>=0;){const Je=k;let ye=k-1;ye<0&&(ye=he.length-1);for(let ze=0,Te=d+x*2;ze<Te;ze++){const nt=$*ze,De=$*(ze+1),N=_e+Je+nt,P=_e+ye+nt,K=_e+ye+De,ce=_e+Je+De;st(N,P,K,ce)}}}function ve(he,_e,k){u.push(he),u.push(_e),u.push(k)}function Qe(he,_e,k){$e(he),$e(_e),$e(k);const Je=i.length/3,ye=E.generateTopUV(n,i,Je-3,Je-2,Je-1);ct(ye[0]),ct(ye[1]),ct(ye[2])}function st(he,_e,k,Je){$e(he),$e(_e),$e(Je),$e(_e),$e(k),$e(Je);const ye=i.length/3,ze=E.generateSideWallUV(n,i,ye-6,ye-3,ye-2,ye-1);ct(ze[0]),ct(ze[1]),ct(ze[3]),ct(ze[1]),ct(ze[2]),ct(ze[3])}function $e(he){i.push(u[he*3+0]),i.push(u[he*3+1]),i.push(u[he*3+2])}function ct(he){s.push(he.x),s.push(he.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return mb(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,a=e.shapes.length;s<a;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new ah[i.type]().fromJSON(i)),new Dh(n,e.options)}}const pb={generateTopUV:function(r,e,t,n,i){const s=e[t*3],a=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],d=e[i*3+1];return[new fe(s,a),new fe(c,u),new fe(h,d)]},generateSideWallUV:function(r,e,t,n,i,s){const a=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],d=e[n*3+1],p=e[n*3+2],m=e[i*3],_=e[i*3+1],y=e[i*3+2],S=e[s*3],x=e[s*3+1],g=e[s*3+2];return Math.abs(c-d)<Math.abs(a-h)?[new fe(a,1-u),new fe(h,1-p),new fe(m,1-y),new fe(S,1-g)]:[new fe(c,1-u),new fe(d,1-p),new fe(_,1-y),new fe(x,1-g)]}};function mb(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Uh extends Jr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Uh(e.radius,e.detail)}}class _l extends Jr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new _l(e.radius,e.detail)}}class Oh extends _t{constructor(e=.5,t=1,n=32,i=1,s=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],d=[];let p=e;const m=(t-e)/i,_=new F,y=new fe;for(let S=0;S<=i;S++){for(let x=0;x<=n;x++){const g=s+x/n*a;_.x=p*Math.cos(g),_.y=p*Math.sin(g),u.push(_.x,_.y,_.z),h.push(0,0,1),y.x=(_.x/t+1)/2,y.y=(_.y/t+1)/2,d.push(y.x,y.y)}p+=m}for(let S=0;S<i;S++){const x=S*(n+1);for(let g=0;g<n;g++){const E=g+x,w=E,T=E+n+1,I=E+n+2,C=E+1;c.push(w,T,C),c.push(T,I,C)}}this.setIndex(c),this.setAttribute("position",new Ze(u,3)),this.setAttribute("normal",new Ze(h,3)),this.setAttribute("uv",new Ze(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Oh(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Nh extends _t{constructor(e=new Ds([new fe(0,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],a=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let d=0;d<e.length;d++)h(e[d]),this.addGroup(c,u,d),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Ze(i,3)),this.setAttribute("normal",new Ze(s,3)),this.setAttribute("uv",new Ze(a,2));function h(d){const p=i.length/3,m=d.extractPoints(t);let _=m.shape;const y=m.holes;$i.isClockWise(_)===!1&&(_=_.reverse());for(let x=0,g=y.length;x<g;x++){const E=y[x];$i.isClockWise(E)===!0&&(y[x]=E.reverse())}const S=$i.triangulateShape(_,y);for(let x=0,g=y.length;x<g;x++){const E=y[x];_=_.concat(E)}for(let x=0,g=_.length;x<g;x++){const E=_[x];i.push(E.x,E.y,0),s.push(0,0,1),a.push(E.x,E.y)}for(let x=0,g=S.length;x<g;x++){const E=S[x],w=E[0]+p,T=E[1]+p,I=E[2]+p;n.push(w,T,I),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return gb(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const a=t[e.shapes[i]];n.push(a)}return new Nh(n,e.curveSegments)}}function gb(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class vl extends _t{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,a=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:a,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(a+c,Math.PI);let h=0;const d=[],p=new F,m=new F,_=[],y=[],S=[],x=[];for(let g=0;g<=n;g++){const E=[],w=g/n;let T=0;g===0&&a===0?T=.5/t:g===n&&u===Math.PI&&(T=-.5/t);for(let I=0;I<=t;I++){const C=I/t;p.x=-e*Math.cos(i+C*s)*Math.sin(a+w*c),p.y=e*Math.cos(a+w*c),p.z=e*Math.sin(i+C*s)*Math.sin(a+w*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),S.push(m.x,m.y,m.z),x.push(C+T,1-w),E.push(h++)}d.push(E)}for(let g=0;g<n;g++)for(let E=0;E<t;E++){const w=d[g][E+1],T=d[g][E],I=d[g+1][E],C=d[g+1][E+1];(g!==0||a>0)&&_.push(w,T,C),(g!==n-1||u<Math.PI)&&_.push(T,I,C)}this.setIndex(_),this.setAttribute("position",new Ze(y,3)),this.setAttribute("normal",new Ze(S,3)),this.setAttribute("uv",new Ze(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vl(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Fh extends Jr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Fh(e.radius,e.detail)}}class zh extends _t{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const a=[],c=[],u=[],h=[],d=new F,p=new F,m=new F;for(let _=0;_<=n;_++)for(let y=0;y<=i;y++){const S=y/i*s,x=_/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(S),p.y=(e+t*Math.cos(x))*Math.sin(S),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),d.x=e*Math.cos(S),d.y=e*Math.sin(S),m.subVectors(p,d).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(_/n)}for(let _=1;_<=n;_++)for(let y=1;y<=i;y++){const S=(i+1)*_+y-1,x=(i+1)*(_-1)+y-1,g=(i+1)*(_-1)+y,E=(i+1)*_+y;a.push(S,x,E),a.push(x,g,E)}this.setIndex(a),this.setAttribute("position",new Ze(c,3)),this.setAttribute("normal",new Ze(u,3)),this.setAttribute("uv",new Ze(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new zh(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Bh extends _t{constructor(e=1,t=.4,n=64,i=8,s=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:a},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],d=[],p=new F,m=new F,_=new F,y=new F,S=new F,x=new F,g=new F;for(let w=0;w<=n;++w){const T=w/n*s*Math.PI*2;E(T,s,a,e,_),E(T+.01,s,a,e,y),x.subVectors(y,_),g.addVectors(y,_),S.crossVectors(x,g),g.crossVectors(S,x),S.normalize(),g.normalize();for(let I=0;I<=i;++I){const C=I/i*Math.PI*2,L=-t*Math.cos(C),U=t*Math.sin(C);p.x=_.x+(L*g.x+U*S.x),p.y=_.y+(L*g.y+U*S.y),p.z=_.z+(L*g.z+U*S.z),u.push(p.x,p.y,p.z),m.subVectors(p,_).normalize(),h.push(m.x,m.y,m.z),d.push(w/n),d.push(I/i)}}for(let w=1;w<=n;w++)for(let T=1;T<=i;T++){const I=(i+1)*(w-1)+(T-1),C=(i+1)*w+(T-1),L=(i+1)*w+T,U=(i+1)*(w-1)+T;c.push(I,C,U),c.push(C,L,U)}this.setIndex(c),this.setAttribute("position",new Ze(u,3)),this.setAttribute("normal",new Ze(h,3)),this.setAttribute("uv",new Ze(d,2));function E(w,T,I,C,L){const U=Math.cos(w),R=Math.sin(w),b=I/T*w,O=Math.cos(b);L.x=C*(2+O)*.5*U,L.y=C*(2+O)*R*.5,L.z=C*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Bh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class kh extends _t{constructor(e=new Kp(new F(-1,-1,0),new F(-1,1,0),new F(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const a=e.computeFrenetFrames(t,s);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const c=new F,u=new F,h=new fe;let d=new F;const p=[],m=[],_=[],y=[];S(),this.setIndex(y),this.setAttribute("position",new Ze(p,3)),this.setAttribute("normal",new Ze(m,3)),this.setAttribute("uv",new Ze(_,2));function S(){for(let w=0;w<t;w++)x(w);x(s===!1?t:0),E(),g()}function x(w){d=e.getPointAt(w/t,d);const T=a.normals[w],I=a.binormals[w];for(let C=0;C<=i;C++){const L=C/i*Math.PI*2,U=Math.sin(L),R=-Math.cos(L);u.x=R*T.x+U*I.x,u.y=R*T.y+U*I.y,u.z=R*T.z+U*I.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+n*u.x,c.y=d.y+n*u.y,c.z=d.z+n*u.z,p.push(c.x,c.y,c.z)}}function g(){for(let w=1;w<=t;w++)for(let T=1;T<=i;T++){const I=(i+1)*(w-1)+(T-1),C=(i+1)*w+(T-1),L=(i+1)*w+T,U=(i+1)*(w-1)+T;y.push(I,C,U),y.push(C,L,U)}}function E(){for(let w=0;w<=t;w++)for(let T=0;T<=i;T++)h.x=w/t,h.y=T/i,_.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new kh(new ah[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Ey extends _t{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new F,s=new F;if(e.index!==null){const a=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,d=u.length;h<d;++h){const p=u[h],m=p.start,_=p.count;for(let y=m,S=m+_;y<S;y+=3)for(let x=0;x<3;x++){const g=c.getX(y+x),E=c.getX(y+(x+1)%3);i.fromBufferAttribute(a,g),s.fromBufferAttribute(a,E),n0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const a=e.attributes.position;for(let c=0,u=a.count/3;c<u;c++)for(let h=0;h<3;h++){const d=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(a,d),s.fromBufferAttribute(a,p),n0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Ze(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function n0(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var i0=Object.freeze({__proto__:null,BoxGeometry:ks,CapsuleGeometry:Ch,CircleGeometry:Rh,ConeGeometry:Ph,CylinderGeometry:Zo,DodecahedronGeometry:Ih,EdgesGeometry:yy,ExtrudeGeometry:Dh,IcosahedronGeometry:Uh,LatheGeometry:gl,OctahedronGeometry:_l,PlaneGeometry:Yo,PolyhedronGeometry:Jr,RingGeometry:Oh,ShapeGeometry:Nh,SphereGeometry:vl,TetrahedronGeometry:Fh,TorusGeometry:zh,TorusKnotGeometry:Bh,TubeGeometry:kh,WireframeGeometry:Ey});class Ty extends bn{static get type(){return"ShadowMaterial"}constructor(e){super(),this.isShadowMaterial=!0,this.color=new Ne(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class wy extends Di{static get type(){return"RawShaderMaterial"}constructor(e){super(e),this.isRawShaderMaterial=!0}}class Qp extends bn{static get type(){return"MeshStandardMaterial"}constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.color=new Ne(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ui,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Ay extends Qp{static get type(){return"MeshPhysicalMaterial"}constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new fe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return nn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ne(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ne(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ne(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class by extends bn{static get type(){return"MeshPhongMaterial"}constructor(e){super(),this.isMeshPhongMaterial=!0,this.color=new Ne(16777215),this.specular=new Ne(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ui,this.combine=cl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Cy extends bn{static get type(){return"MeshToonMaterial"}constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.color=new Ne(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Ry extends bn{static get type(){return"MeshNormalMaterial"}constructor(e){super(),this.isMeshNormalMaterial=!0,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Py extends bn{static get type(){return"MeshLambertMaterial"}constructor(e){super(),this.isMeshLambertMaterial=!0,this.color=new Ne(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ui,this.combine=cl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Iy extends bn{static get type(){return"MeshMatcapMaterial"}constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.color=new Ne(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qr,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Ly extends Xn{static get type(){return"LineDashedMaterial"}constructor(e){super(),this.isLineDashedMaterial=!0,this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Cs(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function Dy(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function Uy(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function pp(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,a=0;a!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[a++]=r[c+u]}return i}function $p(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let a=s[n];if(a!==void 0)if(Array.isArray(a))do a=s[n],a!==void 0&&(e.push(s.time),t.push.apply(t,a)),s=r[i++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[n],a!==void 0&&(e.push(s.time),a.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do a=s[n],a!==void 0&&(e.push(s.time),t.push(a)),s=r[i++];while(s!==void 0)}function _b(r,e,t,n,i=30){const s=r.clone();s.name=e;const a=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],d=h.getValueSize(),p=[],m=[];for(let _=0;_<h.times.length;++_){const y=h.times[_]*i;if(!(y<t||y>=n)){p.push(h.times[_]);for(let S=0;S<d;++S)m.push(h.values[_*d+S])}}p.length!==0&&(h.times=Cs(p,h.times.constructor),h.values=Cs(m,h.values.constructor),a.push(h))}s.tracks=a;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function vb(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let a=0;a<i;++a){const c=t.tracks[a],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(g){return g.name===c.name&&g.ValueTypeName===u});if(h===void 0)continue;let d=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let m=0;const _=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=_/3);const y=c.times.length-1;let S;if(s<=c.times[0]){const g=d,E=p-d;S=c.values.slice(g,E)}else if(s>=c.times[y]){const g=y*p+d,E=g+p-d;S=c.values.slice(g,E)}else{const g=c.createInterpolant(),E=d,w=p-d;g.evaluate(s),S=g.resultBuffer.slice(E,w)}u==="quaternion"&&new Wn().fromArray(S).normalize().conjugate().toArray(S);const x=h.times.length;for(let g=0;g<x;++g){const E=g*_+m;if(u==="quaternion")Wn.multiplyQuaternionsFlat(h.values,E,S,0,h.values,E);else{const w=_-m*2;for(let T=0;T<w;++T)h.values[E+T]-=S[T]}}}return r.blendMode=Dp,r}const yb={convertArray:Cs,isTypedArray:Dy,getKeyframeOrder:Uy,sortedArray:pp,flattenJSON:$p,subclip:_b,makeClipAdditive:vb};class yl{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}a=n,n=0;break n}break e}for(;n<a;){const c=n+a>>>1;e<t[c]?a=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let a=0;a!==i;++a)t[a]=n[s+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Oy extends yl{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ws,endingEnd:ws}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,a=e+1,c=i[s],u=i[a];if(c===void 0)switch(this.getSettings_().endingStart){case As:s=e,c=2*t-n;break;case ja:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case As:a=e,u=2*n-t;break;case ja:a=1,u=n+i[1]-i[0];break;default:a=e-1,u=t}const h=(n-t)*.5,d=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*d,this._offsetNext=a*d}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,_=this._weightNext,y=(n-t)/(i-t),S=y*y,x=S*y,g=-m*x+2*m*S-m*y,E=(1+m)*x+(-1.5-2*m)*S+(-.5+m)*y+1,w=(-1-_)*x+(1.5+_)*S+.5*y,T=_*x-_*S;for(let I=0;I!==c;++I)s[I]=g*a[d+I]+E*a[h+I]+w*a[u+I]+T*a[p+I];return s}}class em extends yl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=(n-t)/(i-t),p=1-d;for(let m=0;m!==c;++m)s[m]=a[h+m]*p+a[u+m]*d;return s}}class Ny extends yl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Oi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Cs(t,this.TimeBufferType),this.values=Cs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Cs(e.times,Array),values:Cs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Ny(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new em(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Oy(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ka:t=this.InterpolantFactoryMethodDiscrete;break;case ih:t=this.InterpolantFactoryMethodLinear;break;case yu:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ka;case this.InterpolantFactoryMethodLinear:return ih;case this.InterpolantFactoryMethodSmooth:return yu}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,a=i-1;for(;s!==i&&n[s]<e;)++s;for(;a!==-1&&n[a]>t;)--a;if(++a,s!==0||a!==i){s>=a&&(a=Math.max(a,1),s=a-1);const c=this.getValueSize();this.times=n.slice(s,a),this.values=this.values.slice(s*c,a*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(a!==null&&a>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,a),e=!1;break}a=u}if(i!==void 0&&Dy(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===yu,s=e.length-1;let a=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],d=e[c+1];if(h!==d&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,_=p+n;for(let y=0;y!==n;++y){const S=t[p+y];if(S!==t[m+y]||S!==t[_+y]){u=!0;break}}}if(u){if(c!==a){e[a]=e[c];const p=c*n,m=a*n;for(let _=0;_!==n;++_)t[m+_]=t[p+_]}++a}}if(s>0){e[a]=e[s];for(let c=s*n,u=a*n,h=0;h!==n;++h)t[u+h]=t[c+h];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Oi.prototype.TimeBufferType=Float32Array;Oi.prototype.ValueBufferType=Float32Array;Oi.prototype.DefaultInterpolation=ih;class Hs extends Oi{constructor(e,t,n){super(e,t,n)}}Hs.prototype.ValueTypeName="bool";Hs.prototype.ValueBufferType=Array;Hs.prototype.DefaultInterpolation=Ka;Hs.prototype.InterpolantFactoryMethodLinear=void 0;Hs.prototype.InterpolantFactoryMethodSmooth=void 0;class tm extends Oi{}tm.prototype.ValueTypeName="color";class sl extends Oi{}sl.prototype.ValueTypeName="number";class Fy extends yl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let d=h+c;h!==d;h+=4)Wn.slerpFlat(s,0,a,h-c,a,h,u);return s}}class xl extends Oi{InterpolantFactoryMethodLinear(e){return new Fy(this.times,this.values,this.getValueSize(),e)}}xl.prototype.ValueTypeName="quaternion";xl.prototype.InterpolantFactoryMethodSmooth=void 0;class Vs extends Oi{constructor(e,t,n){super(e,t,n)}}Vs.prototype.ValueTypeName="string";Vs.prototype.ValueBufferType=Array;Vs.prototype.DefaultInterpolation=Ka;Vs.prototype.InterpolantFactoryMethodLinear=void 0;Vs.prototype.InterpolantFactoryMethodSmooth=void 0;class ol extends Oi{}ol.prototype.ValueTypeName="vector";class al{constructor(e="",t=-1,n=[],i=yh){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=ci(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,c=n.length;a!==c;++a)t.push(Sb(n[a]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,a=n.length;s!==a;++s)t.push(Oi.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,a=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const d=Uy(u);u=pp(u,1,d),h=pp(h,1,d),!i&&u[0]===0&&(u.push(s),h.push(h[0])),a.push(new sl(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],d=h.name.match(s);if(d&&d.length>1){const p=d[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const a=[];for(const c in i)a.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,_,y,S){if(_.length!==0){const x=[],g=[];$p(_,x,g,y),x.length!==0&&S.push(new p(m,x,g))}},i=[],s=e.name||"default",a=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const _={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let S=0;S<m[y].morphTargets.length;S++)_[m[y].morphTargets[S]]=-1;for(const S in _){const x=[],g=[];for(let E=0;E!==m[y].morphTargets.length;++E){const w=m[y];x.push(w.time),g.push(w.morphTarget===S?1:0)}i.push(new sl(".morphTargetInfluence["+S+"]",x,g))}u=_.length*a}else{const _=".bones["+t[p].name+"]";n(ol,_+".position",m,"pos",i),n(xl,_+".quaternion",m,"rot",i),n(ol,_+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function xb(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return sl;case"vector":case"vector2":case"vector3":case"vector4":return ol;case"color":return tm;case"quaternion":return xl;case"bool":case"boolean":return Hs;case"string":return Vs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function Sb(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=xb(r.type);if(r.times===void 0){const t=[],n=[];$p(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const _r={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class nm{constructor(e,t,n){const i=this;let s=!1,a=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){c++,s===!1&&i.onStart!==void 0&&i.onStart(d,a,c),s=!0},this.itemEnd=function(d){a++,i.onProgress!==void 0&&i.onProgress(d,a,c),a===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,p){return h.push(d,p),this},this.removeHandler=function(d){const p=h.indexOf(d);return p!==-1&&h.splice(p,2),this},this.getHandler=function(d){for(let p=0,m=h.length;p<m;p+=2){const _=h[p],y=h[p+1];if(_.global&&(_.lastIndex=0),_.test(d))return y}return null}}}const zy=new nm;class ni{constructor(e){this.manager=e!==void 0?e:zy,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}ni.DEFAULT_MATERIAL_NAME="__DEFAULT";const fr={};class Mb extends Error{constructor(e,t){super(e),this.response=t}}class Er extends ni{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=_r.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(fr[e]!==void 0){fr[e].push({onLoad:t,onProgress:n,onError:i});return}fr[e]=[],fr[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(a).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const d=fr[e],p=h.body.getReader(),m=h.headers.get("X-File-Size")||h.headers.get("Content-Length"),_=m?parseInt(m):0,y=_!==0;let S=0;const x=new ReadableStream({start(g){E();function E(){p.read().then(({done:w,value:T})=>{if(w)g.close();else{S+=T.byteLength;const I=new ProgressEvent("progress",{lengthComputable:y,loaded:S,total:_});for(let C=0,L=d.length;C<L;C++){const U=d[C];U.onProgress&&U.onProgress(I)}g.enqueue(T),E()}},w=>{g.error(w)})}}});return new Response(x)}else throw new Mb(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(d=>new DOMParser().parseFromString(d,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,_=new TextDecoder(m);return h.arrayBuffer().then(y=>_.decode(y))}}}).then(h=>{_r.add(e,h);const d=fr[e];delete fr[e];for(let p=0,m=d.length;p<m;p++){const _=d[p];_.onLoad&&_.onLoad(h)}}).catch(h=>{const d=fr[e];if(d===void 0)throw this.manager.itemError(e),h;delete fr[e];for(let p=0,m=d.length;p<m;p++){const _=d[p];_.onError&&_.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Eb extends ni{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Er(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=al.parse(e[n]);t.push(i)}return t}}class Tb extends ni{constructor(e){super(e)}load(e,t,n,i){const s=this,a=[],c=new Ah,u=new Er(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function d(p){u.load(e[p],function(m){const _=s.parse(m,!0);a[p]={width:_.width,height:_.height,format:_.format,mipmaps:_.mipmaps},h+=1,h===6&&(_.mipmapCount===1&&(c.minFilter=pn),c.image=a,c.format=_.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)d(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const _=m.mipmaps.length/m.mipmapCount;for(let y=0;y<_;y++){a[y]={mipmaps:[]};for(let S=0;S<m.mipmapCount;S++)a[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+S]),a[y].format=m.format,a[y].width=m.width,a[y].height=m.height}c.image=a}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=pn),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class ll extends ni{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=_r.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const c=el("img");function u(){d(),_r.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){d(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function d(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class wb extends ni{constructor(e){super(e)}load(e,t,n,i){const s=new fl;s.colorSpace=$n;const a=new ll(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let c=0;function u(h){a.load(e[h],function(d){s.images[h]=d,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class Ab extends ni{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Qi,c=new Er(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(d){if(i!==void 0)i(d);else{console.error(d);return}}h.image!==void 0?a.image=h.image:h.data!==void 0&&(a.image.width=h.width,a.image.height=h.height,a.image.data=h.data),a.wrapS=h.wrapS!==void 0?h.wrapS:Si,a.wrapT=h.wrapT!==void 0?h.wrapT:Si,a.magFilter=h.magFilter!==void 0?h.magFilter:pn,a.minFilter=h.minFilter!==void 0?h.minFilter:pn,a.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0&&(a.colorSpace=h.colorSpace),h.flipY!==void 0&&(a.flipY=h.flipY),h.format!==void 0&&(a.format=h.format),h.type!==void 0&&(a.type=h.type),h.mipmaps!==void 0&&(a.mipmaps=h.mipmaps,a.minFilter=Ji),h.mipmapCount===1&&(a.minFilter=pn),h.generateMipmaps!==void 0&&(a.generateMipmaps=h.generateMipmaps),a.needsUpdate=!0,t&&t(a,h)},n,i),a}}class bb extends ni{constructor(e){super(e)}load(e,t,n,i){const s=new $t,a=new ll(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Kr extends Lt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ne(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class By extends Kr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Lt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ne(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Df=new rt,r0=new F,s0=new F;class im{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new fe(512,512),this.map=null,this.mapPass=null,this.matrix=new rt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new pl,this._frameExtents=new fe(1,1),this._viewportCount=1,this._viewports=[new Pt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;r0.setFromMatrixPosition(e.matrixWorld),t.position.copy(r0),s0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(s0),t.updateMatrixWorld(),Df.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Df),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Df)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Cb extends im{constructor(){super(new En(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Bo*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class ky extends Kr{constructor(e,t,n=0,i=Math.PI/3,s=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Lt.DEFAULT_UP),this.updateMatrix(),this.target=new Lt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=a,this.map=null,this.shadow=new Cb}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const o0=new rt,wa=new F,Uf=new F;class Rb extends im{constructor(){super(new En(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new fe(4,2),this._viewportCount=6,this._viewports=[new Pt(2,1,1,1),new Pt(0,1,1,1),new Pt(3,1,1,1),new Pt(1,1,1,1),new Pt(3,0,1,1),new Pt(1,0,1,1)],this._cubeDirections=[new F(1,0,0),new F(-1,0,0),new F(0,0,1),new F(0,0,-1),new F(0,1,0),new F(0,-1,0)],this._cubeUps=[new F(0,1,0),new F(0,1,0),new F(0,1,0),new F(0,1,0),new F(0,0,1),new F(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),wa.setFromMatrixPosition(e.matrixWorld),n.position.copy(wa),Uf.copy(n.position),Uf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Uf),n.updateMatrixWorld(),i.makeTranslation(-wa.x,-wa.y,-wa.z),o0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o0)}}class Hy extends Kr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Rb}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Pb extends im{constructor(){super(new ml(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Vy extends Kr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Lt.DEFAULT_UP),this.updateMatrix(),this.target=new Lt,this.shadow=new Pb}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Gy extends Kr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Wy extends Kr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Xy{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new F)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*s),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*s)),t.addScaledVector(a[6],.315392*(3*s*s-1)),t.addScaledVector(a[7],1.092548*(n*s)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*s),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*s),t.addScaledVector(a[6],.743125*s*s-.247708),t.addScaledVector(a[7],2*.429043*n*s),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class Yy extends Kr{constructor(e=new Xy,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Hh extends ni{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,a=new Er(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Ne().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(i.dispersion=e.dispersion),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const a=e.uniforms[s];switch(i.uniforms[s]={},a.type){case"t":i.uniforms[s].value=n(a.value);break;case"c":i.uniforms[s].value=new Ne().setHex(a.value);break;case"v2":i.uniforms[s].value=new fe().fromArray(a.value);break;case"v3":i.uniforms[s].value=new F().fromArray(a.value);break;case"v4":i.uniforms[s].value=new Pt().fromArray(a.value);break;case"m3":i.uniforms[s].value=new mt().fromArray(a.value);break;case"m4":i.uniforms[s].value=new rt().fromArray(a.value);break;default:i.uniforms[s].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new fe().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapRotation!==void 0&&i.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new fe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return Hh.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:Ty,SpriteMaterial:Gp,RawShaderMaterial:wy,ShaderMaterial:Di,PointsMaterial:Xp,MeshPhysicalMaterial:Ay,MeshStandardMaterial:Qp,MeshPhongMaterial:by,MeshToonMaterial:Cy,MeshNormalMaterial:Ry,MeshLambertMaterial:Py,MeshDepthMaterial:Hp,MeshDistanceMaterial:Vp,MeshBasicMaterial:Zr,MeshMatcapMaterial:Iy,LineDashedMaterial:Ly,LineBasicMaterial:Xn,Material:bn};return new t[e]}}class mp{static decodeText(e){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class qy extends _t{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Zy extends ni{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Er(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(_,y){if(t[y]!==void 0)return t[y];const x=_.interleavedBuffers[y],g=s(_,x.buffer),E=Lo(x.type,g),w=new Th(E,x.stride);return w.uuid=x.uuid,t[y]=w,w}function s(_,y){if(n[y]!==void 0)return n[y];const x=_.arrayBuffers[y],g=new Uint32Array(x).buffer;return n[y]=g,g}const a=e.isInstancedBufferGeometry?new qy:new _t,c=e.data.index;if(c!==void 0){const _=Lo(c.type,c.array);a.setIndex(new Vt(_,1))}const u=e.data.attributes;for(const _ in u){const y=u[_];let S;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);S=new Fs(x,y.itemSize,y.offset,y.normalized)}else{const x=Lo(y.type,y.array),g=y.isInstancedBufferAttribute?Ho:Vt;S=new g(x,y.itemSize,y.normalized)}y.name!==void 0&&(S.name=y.name),y.usage!==void 0&&S.setUsage(y.usage),a.setAttribute(_,S)}const h=e.data.morphAttributes;if(h)for(const _ in h){const y=h[_],S=[];for(let x=0,g=y.length;x<g;x++){const E=y[x];let w;if(E.isInterleavedBufferAttribute){const T=i(e.data,E.data);w=new Fs(T,E.itemSize,E.offset,E.normalized)}else{const T=Lo(E.type,E.array);w=new Vt(T,E.itemSize,E.normalized)}E.name!==void 0&&(w.name=E.name),S.push(w)}a.morphAttributes[_]=S}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let _=0,y=p.length;_!==y;++_){const S=p[_];a.addGroup(S.start,S.count,S.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const _=new F;m.center!==void 0&&_.fromArray(m.center),a.boundingSphere=new An(_,m.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class Ib extends ni{constructor(e){super(e)}load(e,t,n,i){const s=this,a=this.path===""?mp.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const c=new Er(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const d=h.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?mp.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new Er(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const a=await s.loadAsync(e,t),c=JSON.parse(a),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,a),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),d=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,d),this.bindLightTargets(h),t!==void 0){let p=!1;for(const m in a)if(a[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,a),u=this.parseObject(e.object,i,c,a,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),this.bindLightTargets(u),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new Ds().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,a=e.length;s<a;s++){const c=new wh().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Zy;for(let s=0,a=e.length;s<a;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in i0?c=i0[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Hh;s.setTextures(t);for(let a=0,c=e.length;a<c;a++){const u=e[a];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=al.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function a(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return a(d)}else return u.data?{data:Lo(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new nm(t);s=new ll(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,d=e.length;h<d;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const _=[];for(let y=0,S=m.length;y<S;y++){const x=m[y],g=c(x);g!==null&&(g instanceof HTMLImageElement?_.push(g):_.push(new Qi(g.data,g.width,g.height)))}i[p.uuid]=new bs(_)}else{const _=c(p.url);i[p.uuid]=new bs(_)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(a){if(typeof a=="string"){const c=a,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return a.data?{data:Lo(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){i=new ll(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,c=e.length;a<c;a++){const u=e[a],h=u.url;if(Array.isArray(h)){const d=[];for(let p=0,m=h.length;p<m;p++){const _=h[p],y=await s(_);y!==null&&(y instanceof HTMLImageElement?d.push(y):d.push(new Qi(y.data,y.width,y.height)))}n[u.uuid]=new bs(d)}else{const d=await s(u.url);n[u.uuid]=new bs(d)}}}return n}parseTextures(e,t){function n(s,a){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),a[s])}const i={};if(e!==void 0)for(let s=0,a=e.length;s<a;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let d;Array.isArray(h)?(d=new fl,h.length===6&&(d.needsUpdate=!0)):(h&&h.data?d=new Qi:d=new $t,h&&(d.needsUpdate=!0)),d.source=u,d.uuid=c.uuid,c.name!==void 0&&(d.name=c.name),c.mapping!==void 0&&(d.mapping=n(c.mapping,Lb)),c.channel!==void 0&&(d.channel=c.channel),c.offset!==void 0&&d.offset.fromArray(c.offset),c.repeat!==void 0&&d.repeat.fromArray(c.repeat),c.center!==void 0&&d.center.fromArray(c.center),c.rotation!==void 0&&(d.rotation=c.rotation),c.wrap!==void 0&&(d.wrapS=n(c.wrap[0],a0),d.wrapT=n(c.wrap[1],a0)),c.format!==void 0&&(d.format=c.format),c.internalFormat!==void 0&&(d.internalFormat=c.internalFormat),c.type!==void 0&&(d.type=c.type),c.colorSpace!==void 0&&(d.colorSpace=c.colorSpace),c.minFilter!==void 0&&(d.minFilter=n(c.minFilter,l0)),c.magFilter!==void 0&&(d.magFilter=n(c.magFilter,l0)),c.anisotropy!==void 0&&(d.anisotropy=c.anisotropy),c.flipY!==void 0&&(d.flipY=c.flipY),c.generateMipmaps!==void 0&&(d.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(d.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(d.compareFunction=c.compareFunction),c.userData!==void 0&&(d.userData=c.userData),i[c.uuid]=d}return i}parseObject(e,t,n,i,s){let a;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const _=[];for(let y=0,S=m.length;y<S;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),_.push(n[x])}return _}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let d,p;switch(e.type){case"Scene":a=new rh,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new Ne(e.background):a.background=h(e.background)),e.environment!==void 0&&(a.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new Eh(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new Mh(e.fog.color,e.fog.density)),e.fog.name!==""&&(a.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(a.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&a.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(a.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&a.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":a=new En(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new ml(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new Gy(e.color,e.intensity);break;case"DirectionalLight":a=new Vy(e.color,e.intensity),a.target=e.target||"";break;case"PointLight":a=new Hy(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new Wy(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new ky(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),a.target=e.target||"";break;case"HemisphereLight":a=new By(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new Yy().fromJSON(e);break;case"SkinnedMesh":d=c(e.geometry),p=u(e.material),a=new cy(d,p),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":d=c(e.geometry),p=u(e.material),a=new un(d,p);break;case"InstancedMesh":d=c(e.geometry),p=u(e.material);const m=e.count,_=e.instanceMatrix,y=e.instanceColor;a=new uy(d,p,m),a.instanceMatrix=new Ho(new Float32Array(_.array),16),y!==void 0&&(a.instanceColor=new Ho(new Float32Array(y.array),y.itemSize));break;case"BatchedMesh":d=c(e.geometry),p=u(e.material),a=new hy(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,p),a.geometry=d,a.perObjectFrustumCulled=e.perObjectFrustumCulled,a.sortObjects=e.sortObjects,a._drawRanges=e.drawRanges,a._reservedRanges=e.reservedRanges,a._visibility=e.visibility,a._active=e.active,a._bounds=e.bounds.map(S=>{const x=new Nn;x.min.fromArray(S.boxMin),x.max.fromArray(S.boxMax);const g=new An;return g.radius=S.sphereRadius,g.center.fromArray(S.sphereCenter),{boxInitialized:S.boxInitialized,box:x,sphereInitialized:S.sphereInitialized,sphere:g}}),a._maxInstanceCount=e.maxInstanceCount,a._maxVertexCount=e.maxVertexCount,a._maxIndexCount=e.maxIndexCount,a._geometryInitialized=e.geometryInitialized,a._geometryCount=e.geometryCount,a._matricesTexture=h(e.matricesTexture.uuid),e.colorsTexture!==void 0&&(a._colorsTexture=h(e.colorsTexture.uuid));break;case"LOD":a=new ly;break;case"Line":a=new Yr(c(e.geometry),u(e.material));break;case"LineLoop":a=new dy(c(e.geometry),u(e.material));break;case"LineSegments":a=new tr(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":a=new fy(c(e.geometry),u(e.material));break;case"Sprite":a=new ay(u(e.material));break;case"Group":a=new Uo;break;case"Bone":a=new Wp;break;default:a=new Lt}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.up!==void 0&&a.up.fromArray(e.up),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(a.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let _=0;_<m.length;_++)a.add(this.parseObject(m[_],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let _=0;_<m.length;_++){const y=m[_];a.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const m=e.levels;for(let _=0;_<m.length;_++){const y=m[_],S=a.getObjectByProperty("uuid",y.object);S!==void 0&&a.addLevel(S,y.distance,y.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const n=t.target,i=e.getObjectByProperty("uuid",n);i!==void 0?t.target=i:t.target=new Lt}})}}const Lb={UVMapping:dh,CubeReflectionMapping:Sr,CubeRefractionMapping:Xr,EquirectangularReflectionMapping:Ya,EquirectangularRefractionMapping:qa,CubeUVReflectionMapping:Go},a0={RepeatWrapping:Za,ClampToEdgeWrapping:Si,MirroredRepeatWrapping:Ja},l0={NearestFilter:wn,NearestMipmapNearestFilter:Ep,NearestMipmapLinearFilter:Io,LinearFilter:pn,LinearMipmapNearestFilter:Fa,LinearMipmapLinearFilter:Ji};class Db extends ni{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=_r.get(e);if(a!==void 0){if(s.manager.itemStart(e),a.then){a.then(h=>{t&&t(h),s.manager.itemEnd(e)}).catch(h=>{i&&i(h)});return}return setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(e,c).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(h){return _r.add(e,h),t&&t(h),s.manager.itemEnd(e),h}).catch(function(h){i&&i(h),_r.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});_r.add(e,u),s.manager.itemStart(e)}}let ou;class rm{static getContext(){return ou===void 0&&(ou=new(window.AudioContext||window.webkitAudioContext)),ou}static setContext(e){ou=e}}class Ub extends ni{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Er(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(u){try{const h=u.slice(0);rm.getContext().decodeAudioData(h,function(p){t(p)}).catch(c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const c0=new rt,u0=new rt,ms=new rt;class Ob{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new En,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new En,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,ms.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,a=t.near*Math.tan(Is*t.fov*.5)/t.zoom;let c,u;u0.elements[12]=-i,c0.elements[12]=i,c=-a*t.aspect+s,u=a*t.aspect+s,ms.elements[0]=2*t.near/(u-c),ms.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(ms),c=-a*t.aspect-s,u=a*t.aspect-s,ms.elements[0]=2*t.near/(u-c),ms.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(ms)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(u0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(c0)}}class sm{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=h0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=h0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function h0(){return performance.now()}const gs=new F,d0=new Wn,Nb=new F,_s=new F;class Fb extends Lt{constructor(){super(),this.type="AudioListener",this.context=rm.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new sm}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(gs,d0,Nb),_s.set(0,0,-1).applyQuaternion(d0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(gs.x,i),t.positionY.linearRampToValueAtTime(gs.y,i),t.positionZ.linearRampToValueAtTime(gs.z,i),t.forwardX.linearRampToValueAtTime(_s.x,i),t.forwardY.linearRampToValueAtTime(_s.y,i),t.forwardZ.linearRampToValueAtTime(_s.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(gs.x,gs.y,gs.z),t.setOrientation(_s.x,_s.y,_s.z,n.x,n.y,n.z)}}class Jy extends Lt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const vs=new F,f0=new Wn,zb=new F,ys=new F;class Bb extends Jy{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(vs,f0,zb),ys.set(0,0,1).applyQuaternion(f0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(vs.x,n),t.positionY.linearRampToValueAtTime(vs.y,n),t.positionZ.linearRampToValueAtTime(vs.z,n),t.orientationX.linearRampToValueAtTime(ys.x,n),t.orientationY.linearRampToValueAtTime(ys.y,n),t.orientationZ.linearRampToValueAtTime(ys.z,n)}else t.setPosition(vs.x,vs.y,vs.z),t.setOrientation(ys.x,ys.y,ys.z)}}class kb{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Ky{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,a;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let c=0;c!==i;++c)n[s+c]=n[c];a=t}else{a+=t;const c=t/a;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,a=i;s!==a;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let a=0;a!==s;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){Wn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const a=this._workIndex*s;Wn.multiplyQuaternionsFlat(e,a,e,t,e,n),Wn.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,s){const a=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*a+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let a=0;a!==s;++a){const c=t+a;e[c]=e[c]+e[n+a]*i}}}const om="\\[\\]\\.:\\/",Hb=new RegExp("["+om+"]","g"),am="[^"+om+"]",Vb="[^"+om.replace("\\.","")+"]",Gb=/((?:WC+[\/:])*)/.source.replace("WC",am),Wb=/(WCOD+)?/.source.replace("WCOD",Vb),Xb=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",am),Yb=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",am),qb=new RegExp("^"+Gb+Wb+Xb+Yb+"$"),Zb=["material","materials","bones","map"];class Jb{constructor(e,t,n){const i=n||It.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class It{constructor(e,t,n){this.path=t,this.parsedPath=n||It.parseTrackName(t),this.node=It.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new It.Composite(e,t,n):new It(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Hb,"")}static parseTrackName(e){const t=qb.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);Zb.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let a=0;a<s.length;a++){const c=s[a];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=It.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===h){h=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const a=e[i];if(a===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(u=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}It.Composite=Jb;It.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};It.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};It.prototype.GetterByBindingType=[It.prototype._getValue_direct,It.prototype._getValue_array,It.prototype._getValue_arrayElement,It.prototype._getValue_toArray];It.prototype.SetterByBindingTypeAndVersioning=[[It.prototype._setValue_direct,It.prototype._setValue_direct_setNeedsUpdate,It.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[It.prototype._setValue_array,It.prototype._setValue_array_setNeedsUpdate,It.prototype._setValue_array_setMatrixWorldNeedsUpdate],[It.prototype._setValue_arrayElement,It.prototype._setValue_arrayElement_setNeedsUpdate,It.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[It.prototype._setValue_fromArray,It.prototype._setValue_fromArray_setNeedsUpdate,It.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Kb{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ci(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,a=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let d=0,p=arguments.length;d!==p;++d){const m=arguments[d],_=m.uuid;let y=t[_];if(y===void 0){y=u++,t[_]=y,e.push(m);for(let S=0,x=a;S!==x;++S)s[S].push(new It(m,n[S],i[S]))}else if(y<h){c=e[y];const S=--h,x=e[S];t[x.uuid]=y,e[y]=x,t[_]=S,e[S]=m;for(let g=0,E=a;g!==E;++g){const w=s[g],T=w[S];let I=w[y];w[y]=T,I===void 0&&(I=new It(m,n[g],i[g])),w[S]=I}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let a=0,c=arguments.length;a!==c;++a){const u=arguments[a],h=u.uuid,d=t[h];if(d!==void 0&&d>=s){const p=s++,m=e[p];t[m.uuid]=d,e[d]=m,t[h]=p,e[p]=u;for(let _=0,y=i;_!==y;++_){const S=n[_],x=S[p],g=S[d];S[d]=x,S[p]=g}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,a=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],d=h.uuid,p=t[d];if(p!==void 0)if(delete t[d],p<s){const m=--s,_=e[m],y=--a,S=e[y];t[_.uuid]=p,e[p]=_,t[S.uuid]=m,e[m]=S,e.pop();for(let x=0,g=i;x!==g;++x){const E=n[x],w=E[m],T=E[y];E[p]=w,E[m]=T,E.pop()}}else{const m=--a,_=e[m];m>0&&(t[_.uuid]=p),e[p]=_,e.pop();for(let y=0,S=i;y!==S;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const a=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,d=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,a.push(e),c.push(t),s.push(p);for(let m=d,_=u.length;m!==_;++m){const y=u[m];p[m]=new It(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,a=this._bindings,c=a.length-1,u=a[c],h=e[c];t[h]=n,a[n]=u,a.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class jy{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,a=s.length,c=new Array(a),u={endingStart:ws,endingEnd:ws};for(let h=0;h!==a;++h){const d=s[h].createInterpolant(null);c[h]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Pv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,a=s/i,c=i/s;e.warp(1,a,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,a=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/a,h[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const a=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Dp:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(a),h[d].accumulateAdditive(c);break;case yh:default:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(a),h[d].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const a=n===Iv;if(e===0)return s===-1?i:a&&(s&1)===1?t-i:i;if(n===Rv){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(a&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=As,i.endingEnd=As):(e?i.endingStart=this.zeroSlopeAtStart?As:ws:i.endingStart=ja,t?i.endingEnd=this.zeroSlopeAtEnd?As:ws:i.endingEnd=ja)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const c=a.parameterPositions,u=a.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const jb=new Float32Array(1);class Qb extends er{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,a=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let d=h[u];d===void 0&&(d={},h[u]=d);for(let p=0;p!==s;++p){const m=i[p],_=m.name;let y=d[_];if(y!==void 0)++y.referenceCount,a[p]=y;else{if(y=a[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,_));continue}const S=t&&t._propertyBindings[p].binding.parsedPath;y=new Ky(It.create(n,_,S),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,_),a[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let a=s[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=a;else{const c=a.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,a=this._actionsByClip,c=a[s],u=c.knownActions,h=u[u.length-1],d=e._byClipCacheIndex;h._byClipCacheIndex=d,u[d]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete a[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,a=this._bindingsByRootAndName,c=a[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new em(new Float32Array(2),new Float32Array(2),1,jb),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let a=typeof e=="string"?al.findByName(i,e):e;const c=a!==null?a.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(a!==null?n=a.blendMode:n=yh),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],a===null&&(a=h._clip)}if(a===null)return null;const d=new jy(this,a,t,n);return this._bindAction(d,h),this._addInactiveAction(d,c,s),d}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?al.findByName(n,e):e,a=s?s.uuid:e,c=this._actionsByClip[a];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),a=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,a);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const a=s.knownActions;for(let c=0,u=a.length;c!==u;++c){const h=a[c];this._deactivateAction(h);const d=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=d,t[d]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const c=n[a].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const a in s){const c=s[a];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class lm{constructor(e){this.value=e}clone(){return new lm(this.value.clone===void 0?this.value:this.value.clone())}}let $b=0;class eC extends er{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:$b++}),this.name="",this.usage=Qa,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let a=0;a<s.length;a++)this.uniforms.push(s[a].clone())}return this}clone(){return new this.constructor().copy(this)}}class tC extends Th{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class nC{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const p0=new rt;class cm{constructor(e,t,n=0,i=1/0){this.ray=new Xo(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Ls,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return p0.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(p0),this}intersectObject(e,t=!0,n=[]){return gp(e,this,n,t),n.sort(m0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)gp(e[i],this,n,t);return n.sort(m0),n}}function m0(r,e){return r.distance-e.distance}function gp(r,e,t,n){let i=!0;if(r.layers.test(e.layers)&&r.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const s=r.children;for(let a=0,c=s.length;a<c;a++)gp(s[a],e,t,!0)}}class Qy{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(nn(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class iC{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}class um{constructor(e,t,n,i){um.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){const s=this.elements;return s[0]=e,s[2]=t,s[1]=n,s[3]=i,this}}const g0=new fe;class rC{constructor(e=new fe(1/0,1/0),t=new fe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=g0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,g0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const _0=new F,au=new F;class sC{constructor(e=new F,t=new F){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){_0.subVectors(e,this.start),au.subVectors(this.end,this.start);const n=au.dot(au);let s=au.dot(_0)/n;return t&&(s=nn(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const v0=new F;class oC extends Lt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new _t,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,c=1,u=32;a<u;a++,c++){const h=a/u*Math.PI*2,d=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new Ze(i,3));const s=new Xn({fog:!1,toneMapped:!1});this.cone=new tr(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),v0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(v0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Hr=new F,lu=new rt,Of=new rt;class aC extends tr{constructor(e){const t=$y(e),n=new _t,i=[],s=[],a=new Ne(0,0,1),c=new Ne(0,1,0);for(let h=0;h<t.length;h++){const d=t[h];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(a.r,a.g,a.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new Ze(i,3)),n.setAttribute("color",new Ze(s,3));const u=new Xn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Of.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(lu.multiplyMatrices(Of,c.matrixWorld),Hr.setFromMatrixPosition(lu),i.setXYZ(a,Hr.x,Hr.y,Hr.z),lu.multiplyMatrices(Of,c.parent.matrixWorld),Hr.setFromMatrixPosition(lu),i.setXYZ(a+1,Hr.x,Hr.y,Hr.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function $y(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,$y(r.children[t]));return e}class lC extends un{constructor(e,t,n){const i=new vl(t,4,2),s=new Zr({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const cC=new F,y0=new Ne,x0=new Ne;class uC extends Lt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new _l(t);i.rotateY(Math.PI*.5),this.material=new Zr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),a=new Float32Array(s.count*3);i.setAttribute("color",new Vt(a,3)),this.add(new un(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");y0.copy(this.light.color),x0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?y0:x0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(cC.setFromMatrixPosition(this.light.matrixWorld).negate())}}class hC extends tr{constructor(e=10,t=10,n=4473924,i=8947848){n=new Ne(n),i=new Ne(i);const s=t/2,a=e/t,c=e/2,u=[],h=[];for(let m=0,_=0,y=-c;m<=t;m++,y+=a){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const S=m===s?n:i;S.toArray(h,_),_+=3,S.toArray(h,_),_+=3,S.toArray(h,_),_+=3,S.toArray(h,_),_+=3}const d=new _t;d.setAttribute("position",new Ze(u,3)),d.setAttribute("color",new Ze(h,3));const p=new Xn({vertexColors:!0,toneMapped:!1});super(d,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class dC extends tr{constructor(e=10,t=16,n=8,i=64,s=4473924,a=8947848){s=new Ne(s),a=new Ne(a);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),_=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(_,0,y);const S=p&1?s:a;u.push(S.r,S.g,S.b),u.push(S.r,S.g,S.b)}for(let p=0;p<n;p++){const m=p&1?s:a,_=e-e/n*p;for(let y=0;y<i;y++){let S=y/i*(Math.PI*2),x=Math.sin(S)*_,g=Math.cos(S)*_;c.push(x,0,g),u.push(m.r,m.g,m.b),S=(y+1)/i*(Math.PI*2),x=Math.sin(S)*_,g=Math.cos(S)*_,c.push(x,0,g),u.push(m.r,m.g,m.b)}}const h=new _t;h.setAttribute("position",new Ze(c,3)),h.setAttribute("color",new Ze(u,3));const d=new Xn({vertexColors:!0,toneMapped:!1});super(h,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const S0=new F,cu=new F,M0=new F;class fC extends Lt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new _t;i.setAttribute("position",new Ze([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Xn({fog:!1,toneMapped:!1});this.lightPlane=new Yr(i,s),this.add(this.lightPlane),i=new _t,i.setAttribute("position",new Ze([0,0,0,0,0,1],3)),this.targetLine=new Yr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),S0.setFromMatrixPosition(this.light.matrixWorld),cu.setFromMatrixPosition(this.light.target.matrixWorld),M0.subVectors(cu,S0),this.lightPlane.lookAt(cu),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(cu),this.targetLine.scale.z=M0.length()}}const uu=new F,tn=new dl;class pC extends tr{constructor(e){const t=new _t,n=new Xn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],a={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,S){u(y),u(S)}function u(y){i.push(0,0,0),s.push(0,0,0),a[y]===void 0&&(a[y]=[]),a[y].push(i.length/3-1)}t.setAttribute("position",new Ze(i,3)),t.setAttribute("color",new Ze(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const h=new Ne(16755200),d=new Ne(16711680),p=new Ne(43775),m=new Ne(16777215),_=new Ne(3355443);this.setColors(h,d,p,m,_)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;tn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),on("c",t,e,tn,0,0,-1),on("t",t,e,tn,0,0,1),on("n1",t,e,tn,-n,-i,-1),on("n2",t,e,tn,n,-i,-1),on("n3",t,e,tn,-n,i,-1),on("n4",t,e,tn,n,i,-1),on("f1",t,e,tn,-n,-i,1),on("f2",t,e,tn,n,-i,1),on("f3",t,e,tn,-n,i,1),on("f4",t,e,tn,n,i,1),on("u1",t,e,tn,n*.7,i*1.1,-1),on("u2",t,e,tn,-n*.7,i*1.1,-1),on("u3",t,e,tn,0,i*2,-1),on("cf1",t,e,tn,-n,0,1),on("cf2",t,e,tn,n,0,1),on("cf3",t,e,tn,0,-i,1),on("cf4",t,e,tn,0,i,1),on("cn1",t,e,tn,-n,0,-1),on("cn2",t,e,tn,n,0,-1),on("cn3",t,e,tn,0,-i,-1),on("cn4",t,e,tn,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function on(r,e,t,n,i,s,a){uu.set(i,s,a).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,d=c.length;h<d;h++)u.setXYZ(c[h],uu.x,uu.y,uu.z)}}const hu=new Nn;class mC extends tr{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new _t;s.setIndex(new Vt(n,1)),s.setAttribute("position",new Vt(i,3)),super(s,new Xn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&hu.setFromObject(this.object),hu.isEmpty())return;const t=hu.min,n=hu.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class gC extends tr{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new _t;s.setIndex(new Vt(n,1)),s.setAttribute("position",new Ze(i,3)),super(s,new Xn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class _C extends Yr{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new _t;a.setAttribute("position",new Ze(s,3)),a.computeBoundingSphere(),super(a,new Xn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new _t;u.setAttribute("position",new Ze(c,3)),u.computeBoundingSphere(),this.add(new un(u,new Zr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const E0=new F;let du,Nf;class vC extends Lt{constructor(e=new F(0,0,1),t=new F(0,0,0),n=1,i=16776960,s=n*.2,a=s*.2){super(),this.type="ArrowHelper",du===void 0&&(du=new _t,du.setAttribute("position",new Ze([0,0,0,0,1,0],3)),Nf=new Zo(0,.5,1,5,1),Nf.translate(0,-.5,0)),this.position.copy(t),this.line=new Yr(du,new Xn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new un(Nf,new Zr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{E0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(E0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class yC extends tr{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new _t;i.setAttribute("position",new Ze(t,3)),i.setAttribute("color",new Ze(n,3));const s=new Xn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Ne,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class xC{constructor(){this.type="ShapePath",this.color=new Ne,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new tl,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,a){return this.currentPath.bezierCurveTo(e,t,n,i,s,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(g){const E=[];for(let w=0,T=g.length;w<T;w++){const I=g[w],C=new Ds;C.curves=I.curves,E.push(C)}return E}function n(g,E){const w=E.length;let T=!1;for(let I=w-1,C=0;C<w;I=C++){let L=E[I],U=E[C],R=U.x-L.x,b=U.y-L.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(L=E[C],R=-R,U=E[I],b=-b),g.y<L.y||g.y>U.y)continue;if(g.y===L.y){if(g.x===L.x)return!0}else{const O=b*(g.x-L.x)-R*(g.y-L.y);if(O===0)return!0;if(O<0)continue;T=!T}}else{if(g.y!==L.y)continue;if(U.x<=g.x&&g.x<=L.x||L.x<=g.x&&g.x<=U.x)return!0}}return T}const i=$i.isClockWise,s=this.subPaths;if(s.length===0)return[];let a,c,u;const h=[];if(s.length===1)return c=s[0],u=new Ds,u.curves=c.curves,h.push(u),h;let d=!i(s[0].getPoints());d=e?!d:d;const p=[],m=[];let _=[],y=0,S;m[y]=void 0,_[y]=[];for(let g=0,E=s.length;g<E;g++)c=s[g],S=c.getPoints(),a=i(S),a=e?!a:a,a?(!d&&m[y]&&y++,m[y]={s:new Ds,p:S},m[y].s.curves=c.curves,d&&y++,_[y]=[]):_[y].push({h:c,p:S[0]});if(!m[0])return t(s);if(m.length>1){let g=!1,E=0;for(let w=0,T=m.length;w<T;w++)p[w]=[];for(let w=0,T=m.length;w<T;w++){const I=_[w];for(let C=0;C<I.length;C++){const L=I[C];let U=!0;for(let R=0;R<m.length;R++)n(L.p,m[R].p)&&(w!==R&&E++,U?(U=!1,p[R].push(L)):g=!0);U&&p[w].push(L)}}E>0&&g===!1&&(_=p)}let x;for(let g=0,E=m.length;g<E;g++){u=m[g].s,h.push(u),x=_[g];for(let w=0,T=x.length;w<T;w++)u.holes.push(x[w].h)}return h}}class SC extends er{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}class MC extends Li{constructor(e=1,t=1,n=1,i={}){console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'),super(e,t,{...i,count:n}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:uh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=uh);const EC=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Mp,AddEquation:Wr,AddOperation:Sv,AdditiveAnimationBlendMode:Dp,AdditiveBlending:np,AgXToneMapping:Av,AlphaFormat:bp,AlwaysCompare:Hv,AlwaysDepth:wu,AlwaysStencilFunc:op,AmbientLight:Gy,AnimationAction:jy,AnimationClip:al,AnimationLoader:Eb,AnimationMixer:Qb,AnimationObjectGroup:Kb,AnimationUtils:yb,ArcCurve:py,ArrayCamera:ry,ArrowHelper:vC,AttachedBindMode:sp,Audio:Jy,AudioAnalyser:kb,AudioContext:rm,AudioListener:Fb,AudioLoader:Ub,AxesHelper:yC,BackSide:Gn,BasicDepthPacking:Lv,BasicShadowMap:tv,BatchedMesh:hy,Bone:Wp,BooleanKeyframeTrack:Hs,Box2:rC,Box3:Nn,Box3Helper:gC,BoxGeometry:ks,BoxHelper:mC,BufferAttribute:Vt,BufferGeometry:_t,BufferGeometryLoader:Zy,ByteType:Tp,Cache:_r,Camera:dl,CameraHelper:pC,CanvasTexture:GA,CapsuleGeometry:Ch,CatmullRomCurve3:my,CineonToneMapping:Tv,CircleGeometry:Rh,ClampToEdgeWrapping:Si,Clock:sm,Color:Ne,ColorKeyframeTrack:tm,ColorManagement:Rt,CompressedArrayTexture:HA,CompressedCubeTexture:VA,CompressedTexture:Ah,CompressedTextureLoader:Tb,ConeGeometry:Ph,ConstantAlphaFactor:vv,ConstantColorFactor:gv,Controls:SC,CubeCamera:Kv,CubeReflectionMapping:Sr,CubeRefractionMapping:Xr,CubeTexture:fl,CubeTextureLoader:wb,CubeUVReflectionMapping:Go,CubicBezierCurve:qp,CubicBezierCurve3:gy,CubicInterpolant:Oy,CullFaceBack:tp,CullFaceFront:ev,CullFaceFrontBack:vS,CullFaceNone:$0,Curve:Ui,CurvePath:vy,CustomBlending:nv,CustomToneMapping:wv,CylinderGeometry:Zo,Cylindrical:iC,Data3DTexture:Np,DataArrayTexture:xh,DataTexture:Qi,DataTextureLoader:Ab,DataUtils:IM,DecrementStencilOp:LS,DecrementWrapStencilOp:US,DefaultLoadingManager:zy,DepthFormat:Ps,DepthStencilFormat:Ns,DepthTexture:kp,DetachedBindMode:Cv,DirectionalLight:Vy,DirectionalLightHelper:fC,DiscreteInterpolant:Ny,DodecahedronGeometry:Ih,DoubleSide:Zi,DstAlphaFactor:hv,DstColorFactor:fv,DynamicCopyUsage:JS,DynamicDrawUsage:GS,DynamicReadUsage:YS,EdgesGeometry:yy,EllipseCurve:bh,EqualCompare:Fv,EqualDepth:bu,EqualStencilFunc:zS,EquirectangularReflectionMapping:Ya,EquirectangularRefractionMapping:qa,Euler:ui,EventDispatcher:er,ExtrudeGeometry:Dh,FileLoader:Er,Float16BufferAttribute:FM,Float32BufferAttribute:Ze,FloatType:ti,Fog:Eh,FogExp2:Mh,FramebufferTexture:kA,FrontSide:xr,Frustum:pl,GLBufferAttribute:nC,GLSL1:jS,GLSL3:ap,GreaterCompare:zv,GreaterDepth:Ru,GreaterEqualCompare:kv,GreaterEqualDepth:Cu,GreaterEqualStencilFunc:VS,GreaterStencilFunc:kS,GridHelper:hC,Group:Uo,HalfFloatType:Wo,HemisphereLight:By,HemisphereLightHelper:uC,IcosahedronGeometry:Uh,ImageBitmapLoader:Db,ImageLoader:ll,ImageUtils:Xv,IncrementStencilOp:IS,IncrementWrapStencilOp:DS,InstancedBufferAttribute:Ho,InstancedBufferGeometry:qy,InstancedInterleavedBuffer:tC,InstancedMesh:uy,Int16BufferAttribute:OM,Int32BufferAttribute:NM,Int8BufferAttribute:LM,IntType:fh,InterleavedBuffer:Th,InterleavedBufferAttribute:Fs,Interpolant:yl,InterpolateDiscrete:Ka,InterpolateLinear:ih,InterpolateSmooth:yu,InvertStencilOp:OS,KeepStencilOp:Ms,KeyframeTrack:Oi,LOD:ly,LatheGeometry:gl,Layers:Ls,LessCompare:Nv,LessDepth:Au,LessEqualCompare:Up,LessEqualDepth:Us,LessEqualStencilFunc:BS,LessStencilFunc:FS,Light:Kr,LightProbe:Yy,Line:Yr,Line3:sC,LineBasicMaterial:Xn,LineCurve:Zp,LineCurve3:_y,LineDashedMaterial:Ly,LineLoop:dy,LineSegments:tr,LinearFilter:pn,LinearInterpolant:em,LinearMipMapLinearFilter:MS,LinearMipMapNearestFilter:SS,LinearMipmapLinearFilter:Ji,LinearMipmapNearestFilter:Fa,LinearSRGBColorSpace:Bs,LinearToneMapping:Mv,LinearTransfer:hl,Loader:ni,LoaderUtils:mp,LoadingManager:nm,LoopOnce:Rv,LoopPingPong:Iv,LoopRepeat:Pv,LuminanceAlphaFormat:Pp,LuminanceFormat:Rp,MOUSE:gS,Material:bn,MaterialLoader:Hh,MathUtils:Vv,Matrix2:um,Matrix3:mt,Matrix4:rt,MaxEquation:ov,Mesh:un,MeshBasicMaterial:Zr,MeshDepthMaterial:Hp,MeshDistanceMaterial:Vp,MeshLambertMaterial:Py,MeshMatcapMaterial:Iy,MeshNormalMaterial:Ry,MeshPhongMaterial:by,MeshPhysicalMaterial:Ay,MeshStandardMaterial:Qp,MeshToonMaterial:Cy,MinEquation:sv,MirroredRepeatWrapping:Ja,MixOperation:xv,MultiplyBlending:rp,MultiplyOperation:cl,NearestFilter:wn,NearestMipMapLinearFilter:xS,NearestMipMapNearestFilter:yS,NearestMipmapLinearFilter:Io,NearestMipmapNearestFilter:Ep,NeutralToneMapping:bv,NeverCompare:Ov,NeverDepth:Tu,NeverStencilFunc:NS,NoBlending:vr,NoColorSpace:mr,NoToneMapping:ji,NormalAnimationBlendMode:yh,NormalBlending:Rs,NotEqualCompare:Bv,NotEqualDepth:Pu,NotEqualStencilFunc:HS,NumberKeyframeTrack:sl,Object3D:Lt,ObjectLoader:Ib,ObjectSpaceNormalMap:Uv,OctahedronGeometry:_l,OneFactor:lv,OneMinusConstantAlphaFactor:yv,OneMinusConstantColorFactor:_v,OneMinusDstAlphaFactor:dv,OneMinusDstColorFactor:pv,OneMinusSrcAlphaFactor:Eu,OneMinusSrcColorFactor:uv,OrthographicCamera:ml,PCFShadowMap:hh,PCFSoftShadowMap:Na,PMREMGenerator:lp,Path:tl,PerspectiveCamera:En,Plane:Gr,PlaneGeometry:Yo,PlaneHelper:_C,PointLight:Hy,PointLightHelper:lC,Points:fy,PointsMaterial:Xp,PolarGridHelper:dC,PolyhedronGeometry:Jr,PositionalAudio:Bb,PropertyBinding:It,PropertyMixer:Ky,QuadraticBezierCurve:Jp,QuadraticBezierCurve3:Kp,Quaternion:Wn,QuaternionKeyframeTrack:xl,QuaternionLinearInterpolant:Fy,RED_GREEN_RGTC2_Format:th,RED_RGTC1_Format:Lp,REVISION:uh,RGBADepthPacking:Dv,RGBAFormat:On,RGBAIntegerFormat:vh,RGBA_ASTC_10x10_Format:Ju,RGBA_ASTC_10x5_Format:Yu,RGBA_ASTC_10x6_Format:qu,RGBA_ASTC_10x8_Format:Zu,RGBA_ASTC_12x10_Format:Ku,RGBA_ASTC_12x12_Format:ju,RGBA_ASTC_4x4_Format:zu,RGBA_ASTC_5x4_Format:Bu,RGBA_ASTC_5x5_Format:ku,RGBA_ASTC_6x5_Format:Hu,RGBA_ASTC_6x6_Format:Vu,RGBA_ASTC_8x5_Format:Gu,RGBA_ASTC_8x6_Format:Wu,RGBA_ASTC_8x8_Format:Xu,RGBA_BPTC_Format:Va,RGBA_ETC2_EAC_Format:Fu,RGBA_PVRTC_2BPPV1_Format:Uu,RGBA_PVRTC_4BPPV1_Format:Du,RGBA_S3TC_DXT1_Format:Ba,RGBA_S3TC_DXT3_Format:ka,RGBA_S3TC_DXT5_Format:Ha,RGBDepthPacking:bS,RGBFormat:Cp,RGBIntegerFormat:ES,RGB_BPTC_SIGNED_Format:Qu,RGB_BPTC_UNSIGNED_Format:$u,RGB_ETC1_Format:Ou,RGB_ETC2_Format:Nu,RGB_PVRTC_2BPPV1_Format:Lu,RGB_PVRTC_4BPPV1_Format:Iu,RGB_S3TC_DXT1_Format:za,RGDepthPacking:CS,RGFormat:Ip,RGIntegerFormat:_h,RawShaderMaterial:wy,Ray:Xo,Raycaster:cm,RectAreaLight:Wy,RedFormat:gh,RedIntegerFormat:ul,ReinhardToneMapping:Ev,RenderTarget:Yv,RepeatWrapping:Za,ReplaceStencilOp:PS,ReverseSubtractEquation:rv,RingGeometry:Oh,SIGNED_RED_GREEN_RGTC2_Format:nh,SIGNED_RED_RGTC1_Format:eh,SRGBColorSpace:$n,SRGBTransfer:Bt,Scene:rh,ShaderChunk:xt,ShaderLib:Pi,ShaderMaterial:Di,ShadowMaterial:Ty,Shape:Ds,ShapeGeometry:Nh,ShapePath:xC,ShapeUtils:$i,ShortType:wp,Skeleton:wh,SkeletonHelper:aC,SkinnedMesh:cy,Source:bs,Sphere:An,SphereGeometry:vl,Spherical:Qy,SphericalHarmonics3:Xy,SplineCurve:jp,SpotLight:ky,SpotLightHelper:oC,Sprite:ay,SpriteMaterial:Gp,SrcAlphaFactor:Mu,SrcAlphaSaturateFactor:mv,SrcColorFactor:cv,StaticCopyUsage:ZS,StaticDrawUsage:Qa,StaticReadUsage:XS,StereoCamera:Ob,StreamCopyUsage:KS,StreamDrawUsage:WS,StreamReadUsage:qS,StringKeyframeTrack:Vs,SubtractEquation:iv,SubtractiveBlending:ip,TOUCH:_S,TangentSpaceNormalMap:qr,TetrahedronGeometry:Fh,Texture:$t,TextureLoader:bb,TextureUtils:xA,TorusGeometry:zh,TorusKnotGeometry:Bh,Triangle:ei,TriangleFanDrawMode:AS,TriangleStripDrawMode:wS,TrianglesDrawMode:TS,TubeGeometry:kh,UVMapping:dh,Uint16BufferAttribute:Fp,Uint32BufferAttribute:zp,Uint8BufferAttribute:DM,Uint8ClampedBufferAttribute:UM,Uniform:lm,UniformsGroup:eC,UniformsLib:Ae,UniformsUtils:Jv,UnsignedByteType:Ii,UnsignedInt248Type:Os,UnsignedInt5999Type:Ap,UnsignedIntType:Mr,UnsignedShort4444Type:ph,UnsignedShort5551Type:mh,UnsignedShortType:zo,VSMShadowMap:Ri,Vector2:fe,Vector3:F,Vector4:Pt,VectorKeyframeTrack:ol,VideoTexture:BA,WebGL3DRenderTarget:SM,WebGLArrayRenderTarget:xM,WebGLCoordinateSystem:Ki,WebGLCubeRenderTarget:jv,WebGLMultipleRenderTargets:MC,WebGLRenderTarget:Li,WebGLRenderer:sy,WebGLUtils:iy,WebGPUCoordinateSystem:$a,WireframeGeometry:Ey,WrapAroundEnding:ja,ZeroCurvatureEnding:ws,ZeroFactor:av,ZeroSlopeEnding:As,ZeroStencilOp:RS,createCanvasElement:Wv},Symbol.toStringTag,{value:"Module"}));var ex={exports:{}},Gs={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Gs.ConcurrentRoot=1;Gs.ContinuousEventPriority=4;Gs.DefaultEventPriority=16;Gs.DiscreteEventPriority=1;Gs.IdleEventPriority=536870912;Gs.LegacyRoot=0;ex.exports=Gs;var No=ex.exports;function TC(r){let e;const t=new Set,n=(h,d)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=d?p:Object.assign({},e,p),t.forEach(_=>_(e,m))}},i=()=>e,s=(h,d=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=d(e);function _(){const y=d(e);if(!p(m,y)){const S=m;h(m=y,S)}}return t.add(_),()=>t.delete(_)},u={setState:n,getState:i,subscribe:(h,d,p)=>d||p?s(h,d,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const wC=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),T0=wC?We.useEffect:We.useLayoutEffect;function AC(r){const e=typeof r=="function"?TC(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=We.useReducer(x=>x+1,0),a=e.getState(),c=We.useRef(a),u=We.useRef(n),h=We.useRef(i),d=We.useRef(!1),p=We.useRef();p.current===void 0&&(p.current=n(a));let m,_=!1;(c.current!==a||u.current!==n||h.current!==i||d.current)&&(m=n(a),_=!i(p.current,m)),T0(()=>{_&&(p.current=m),c.current=a,u.current=n,h.current=i,d.current=!1});const y=We.useRef(a);T0(()=>{const x=()=>{try{const E=e.getState(),w=u.current(E);h.current(p.current,w)||(c.current=E,p.current=w,s())}catch{d.current=!0,s()}},g=e.subscribe(x);return e.getState()!==y.current&&x(),g},[]);const S=_?m:p.current;return We.useDebugValue(S),S};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var tx={exports:{}},Ff={exports:{}},zf={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var w0;function bC(){return w0||(w0=1,function(r){function e(z,Z){var J=z.length;z.push(Z);e:for(;0<J;){var re=J-1>>>1,xe=z[re];if(0<i(xe,Z))z[re]=Z,z[J]=xe,J=re;else break e}}function t(z){return z.length===0?null:z[0]}function n(z){if(z.length===0)return null;var Z=z[0],J=z.pop();if(J!==Z){z[0]=J;e:for(var re=0,xe=z.length,Be=xe>>>1;re<Be;){var ne=2*(re+1)-1,ge=z[ne],we=ne+1,ve=z[we];if(0>i(ge,J))we<xe&&0>i(ve,ge)?(z[re]=ve,z[we]=J,re=we):(z[re]=ge,z[ne]=J,re=ne);else if(we<xe&&0>i(ve,J))z[re]=ve,z[we]=J,re=we;else break e}}return Z}function i(z,Z){var J=z.sortIndex-Z.sortIndex;return J!==0?J:z.id-Z.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var a=Date,c=a.now();r.unstable_now=function(){return a.now()-c}}var u=[],h=[],d=1,p=null,m=3,_=!1,y=!1,S=!1,x=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(z){for(var Z=t(h);Z!==null;){if(Z.callback===null)n(h);else if(Z.startTime<=z)n(h),Z.sortIndex=Z.expirationTime,e(u,Z);else break;Z=t(h)}}function T(z){if(S=!1,w(z),!y)if(t(u)!==null)y=!0,$(I);else{var Z=t(h);Z!==null&&pe(T,Z.startTime-z)}}function I(z,Z){y=!1,S&&(S=!1,g(U),U=-1),_=!0;var J=m;try{for(w(Z),p=t(u);p!==null&&(!(p.expirationTime>Z)||z&&!O());){var re=p.callback;if(typeof re=="function"){p.callback=null,m=p.priorityLevel;var xe=re(p.expirationTime<=Z);Z=r.unstable_now(),typeof xe=="function"?p.callback=xe:p===t(u)&&n(u),w(Z)}else n(u);p=t(u)}if(p!==null)var Be=!0;else{var ne=t(h);ne!==null&&pe(T,ne.startTime-Z),Be=!1}return Be}finally{p=null,m=J,_=!1}}var C=!1,L=null,U=-1,R=5,b=-1;function O(){return!(r.unstable_now()-b<R)}function q(){if(L!==null){var z=r.unstable_now();b=z;var Z=!0;try{Z=L(!0,z)}finally{Z?Y():(C=!1,L=null)}}else C=!1}var Y;if(typeof E=="function")Y=function(){E(q)};else if(typeof MessageChannel<"u"){var Q=new MessageChannel,ae=Q.port2;Q.port1.onmessage=q,Y=function(){ae.postMessage(null)}}else Y=function(){x(q,0)};function $(z){L=z,C||(C=!0,Y())}function pe(z,Z){U=x(function(){z(r.unstable_now())},Z)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(z){z.callback=null},r.unstable_continueExecution=function(){y||_||(y=!0,$(I))},r.unstable_forceFrameRate=function(z){0>z||125<z?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):R=0<z?Math.floor(1e3/z):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(z){switch(m){case 1:case 2:case 3:var Z=3;break;default:Z=m}var J=m;m=Z;try{return z()}finally{m=J}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(z,Z){switch(z){case 1:case 2:case 3:case 4:case 5:break;default:z=3}var J=m;m=z;try{return Z()}finally{m=J}},r.unstable_scheduleCallback=function(z,Z,J){var re=r.unstable_now();switch(typeof J=="object"&&J!==null?(J=J.delay,J=typeof J=="number"&&0<J?re+J:re):J=re,z){case 1:var xe=-1;break;case 2:xe=250;break;case 5:xe=1073741823;break;case 4:xe=1e4;break;default:xe=5e3}return xe=J+xe,z={id:d++,callback:Z,priorityLevel:z,startTime:J,expirationTime:xe,sortIndex:-1},J>re?(z.sortIndex=J,e(h,z),t(u)===null&&z===t(h)&&(S?(g(U),U=-1):S=!0,pe(T,J-re))):(z.sortIndex=xe,e(u,z),y||_||(y=!0,$(I))),z},r.unstable_shouldYield=O,r.unstable_wrapCallback=function(z){var Z=m;return function(){var J=m;m=Z;try{return z.apply(this,arguments)}finally{m=J}}}}(zf)),zf}var A0;function CC(){return A0||(A0=1,Ff.exports=bC()),Ff.exports}/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var RC=function(e){var t={},n=We,i=CC(),s=Object.assign;function a(o){for(var l="https://reactjs.org/docs/error-decoder.html?invariant="+o,f=1;f<arguments.length;f++)l+="&args[]="+encodeURIComponent(arguments[f]);return"Minified React error #"+o+"; visit "+l+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),y=Symbol.for("react.context"),S=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),g=Symbol.for("react.suspense_list"),E=Symbol.for("react.memo"),w=Symbol.for("react.lazy"),T=Symbol.for("react.offscreen"),I=Symbol.iterator;function C(o){return o===null||typeof o!="object"?null:(o=I&&o[I]||o["@@iterator"],typeof o=="function"?o:null)}function L(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case d:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case g:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case _:return(o._context.displayName||"Context")+".Provider";case S:var l=o.render;return o=o.displayName,o||(o=l.displayName||l.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case E:return l=o.displayName||null,l!==null?l:L(o.type)||"Memo";case w:l=o._payload,o=o._init;try{return L(o(l))}catch{}}return null}function U(o){var l=o.type;switch(o.tag){case 24:return"Cache";case 9:return(l.displayName||"Context")+".Consumer";case 10:return(l._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=l.render,o=o.displayName||o.name||"",l.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return l;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return L(l);case 8:return l===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof l=="function")return l.displayName||l.name||null;if(typeof l=="string")return l}return null}function R(o){var l=o,f=o;if(o.alternate)for(;l.return;)l=l.return;else{o=l;do l=o,l.flags&4098&&(f=l.return),o=l.return;while(o)}return l.tag===3?f:null}function b(o){if(R(o)!==o)throw Error(a(188))}function O(o){var l=o.alternate;if(!l){if(l=R(o),l===null)throw Error(a(188));return l!==o?null:o}for(var f=o,v=l;;){var M=f.return;if(M===null)break;var A=M.alternate;if(A===null){if(v=M.return,v!==null){f=v;continue}break}if(M.child===A.child){for(A=M.child;A;){if(A===f)return b(M),o;if(A===v)return b(M),l;A=A.sibling}throw Error(a(188))}if(f.return!==v.return)f=M,v=A;else{for(var B=!1,H=M.child;H;){if(H===f){B=!0,f=M,v=A;break}if(H===v){B=!0,v=M,f=A;break}H=H.sibling}if(!B){for(H=A.child;H;){if(H===f){B=!0,f=A,v=M;break}if(H===v){B=!0,v=A,f=M;break}H=H.sibling}if(!B)throw Error(a(189))}}if(f.alternate!==v)throw Error(a(190))}if(f.tag!==3)throw Error(a(188));return f.stateNode.current===f?o:l}function q(o){return o=O(o),o!==null?Y(o):null}function Y(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var l=Y(o);if(l!==null)return l;o=o.sibling}return null}function Q(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var l=Q(o);if(l!==null)return l}o=o.sibling}return null}var ae=Array.isArray,$=e.getPublicInstance,pe=e.getRootHostContext,z=e.getChildHostContext,Z=e.prepareForCommit,J=e.resetAfterCommit,re=e.createInstance,xe=e.appendInitialChild,Be=e.finalizeInitialChildren,ne=e.prepareUpdate,ge=e.shouldSetTextContent,we=e.createTextInstance,ve=e.scheduleTimeout,Qe=e.cancelTimeout,st=e.noTimeout,$e=e.isPrimaryRenderer,ct=e.supportsMutation,he=e.supportsPersistence,_e=e.supportsHydration,k=e.getInstanceFromNode,Je=e.preparePortalMount,ye=e.getCurrentEventPriority,ze=e.detachDeletedInstance,Te=e.supportsMicrotasks,nt=e.scheduleMicrotask,De=e.supportsTestSelectors,N=e.findFiberRoot,P=e.getBoundingRect,K=e.getTextContent,ce=e.isHiddenSubtree,me=e.matchAccessibilityRole,ue=e.setFocusIfFocusable,qe=e.setupIntersectionObserver,be=e.appendChild,Fe=e.appendChildToContainer,wt=e.commitTextUpdate,Se=e.commitMount,ke=e.commitUpdate,it=e.insertBefore,at=e.insertInContainerBefore,He=e.removeChild,bt=e.removeChildFromContainer,ht=e.resetTextContent,kt=e.hideInstance,V=e.hideTextInstance,Ce=e.unhideInstance,oe=e.unhideTextInstance,de=e.clearContainer,Oe=e.cloneInstance,Ie=e.createContainerChildSet,ut=e.appendChildToContainerChildSet,Yt=e.finalizeContainerChildren,hn=e.replaceContainerChildren,Dt=e.cloneHiddenInstance,Yn=e.cloneHiddenTextInstance,Mi=e.canHydrateInstance,Ml=e.canHydrateTextInstance,El=e.canHydrateSuspenseInstance,Ni=e.isSuspenseInstancePending,jr=e.isSuspenseInstanceFallback,Tl=e.registerSuspenseInstanceRetry,Tr=e.getNextHydratableSibling,Ws=e.getFirstHydratableChild,wl=e.getFirstHydratableChildWithinContainer,Xs=e.getFirstHydratableChildWithinSuspenseInstance,Al=e.hydrateInstance,bl=e.hydrateTextInstance,Vh=e.hydrateSuspenseInstance,Gh=e.getNextHydratableInstanceAfterSuspenseInstance,Cl=e.commitHydratedContainer,D=e.commitHydratedSuspenseInstance,G=e.clearSuspenseBoundary,ee=e.clearSuspenseBoundaryFromContainer,te=e.shouldDeleteUnhydratedTailInstances,X=e.didNotMatchHydratedContainerTextInstance,Ee=e.didNotMatchHydratedTextInstance,Re;function Ge(o){if(Re===void 0)try{throw Error()}catch(f){var l=f.stack.trim().match(/\n( *(at )?)/);Re=l&&l[1]||""}return`
`+Re+o}var Xe=!1;function ot(o,l){if(!o||Xe)return"";Xe=!0;var f=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(l)if(l=function(){throw Error()},Object.defineProperty(l.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(l,[])}catch(Me){var v=Me}Reflect.construct(o,[],l)}else{try{l.call()}catch(Me){v=Me}o.call(l.prototype)}else{try{throw Error()}catch(Me){v=Me}o()}}catch(Me){if(Me&&v&&typeof Me.stack=="string"){for(var M=Me.stack.split(`
`),A=v.stack.split(`
`),B=M.length-1,H=A.length-1;1<=B&&0<=H&&M[B]!==A[H];)H--;for(;1<=B&&0<=H;B--,H--)if(M[B]!==A[H]){if(B!==1||H!==1)do if(B--,H--,0>H||M[B]!==A[H]){var se=`
`+M[B].replace(" at new "," at ");return o.displayName&&se.includes("<anonymous>")&&(se=se.replace("<anonymous>",o.displayName)),se}while(1<=B&&0<=H);break}}}finally{Xe=!1,Error.prepareStackTrace=f}return(o=o?o.displayName||o.name:"")?Ge(o):""}var dt=Object.prototype.hasOwnProperty,Ye=[],Mt=-1;function Ct(o){return{current:o}}function tt(o){0>Mt||(o.current=Ye[Mt],Ye[Mt]=null,Mt--)}function vt(o,l){Mt++,Ye[Mt]=o.current,o.current=l}var Et={},Le=Ct(Et),qt=Ct(!1),At=Et;function _n(o,l){var f=o.type.contextTypes;if(!f)return Et;var v=o.stateNode;if(v&&v.__reactInternalMemoizedUnmaskedChildContext===l)return v.__reactInternalMemoizedMaskedChildContext;var M={},A;for(A in f)M[A]=l[A];return v&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=l,o.__reactInternalMemoizedMaskedChildContext=M),M}function rn(o){return o=o.childContextTypes,o!=null}function vn(){tt(qt),tt(Le)}function wr(o,l,f){if(Le.current!==Et)throw Error(a(168));vt(Le,l),vt(qt,f)}function Ht(o,l,f){var v=o.stateNode;if(l=l.childContextTypes,typeof v.getChildContext!="function")return f;v=v.getChildContext();for(var M in v)if(!(M in l))throw Error(a(108,U(o)||"Unknown",M));return s({},f,v)}function Fn(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||Et,At=Le.current,vt(Le,o),vt(qt,qt.current),!0}function Ar(o,l,f){var v=o.stateNode;if(!v)throw Error(a(169));f?(o=Ht(o,l,At),v.__reactInternalMemoizedMergedChildContext=o,tt(qt),tt(Le),vt(Le,o)):tt(qt),vt(qt,f)}var Zt=Math.clz32?Math.clz32:Rl,Fi=Math.log,zi=Math.LN2;function Rl(o){return o>>>=0,o===0?32:31-(Fi(o)/zi|0)|0}var Pl=64,Il=4194304;function Jo(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function Ll(o,l){var f=o.pendingLanes;if(f===0)return 0;var v=0,M=o.suspendedLanes,A=o.pingedLanes,B=f&268435455;if(B!==0){var H=B&~M;H!==0?v=Jo(H):(A&=B,A!==0&&(v=Jo(A)))}else B=f&~M,B!==0?v=Jo(B):A!==0&&(v=Jo(A));if(v===0)return 0;if(l!==0&&l!==v&&!(l&M)&&(M=v&-v,A=l&-l,M>=A||M===16&&(A&4194240)!==0))return l;if(v&4&&(v|=f&16),l=o.entangledLanes,l!==0)for(o=o.entanglements,l&=v;0<l;)f=31-Zt(l),M=1<<f,v|=o[f],l&=~M;return v}function Mx(o,l){switch(o){case 1:case 2:case 4:return l+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return l+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Ex(o,l){for(var f=o.suspendedLanes,v=o.pingedLanes,M=o.expirationTimes,A=o.pendingLanes;0<A;){var B=31-Zt(A),H=1<<B,se=M[B];se===-1?(!(H&f)||H&v)&&(M[B]=Mx(H,l)):se<=l&&(o.expiredLanes|=H),A&=~H}}function Wh(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function Xh(o){for(var l=[],f=0;31>f;f++)l.push(o);return l}function Ko(o,l,f){o.pendingLanes|=l,l!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,l=31-Zt(l),o[l]=f}function Tx(o,l){var f=o.pendingLanes&~l;o.pendingLanes=l,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=l,o.mutableReadLanes&=l,o.entangledLanes&=l,l=o.entanglements;var v=o.eventTimes;for(o=o.expirationTimes;0<f;){var M=31-Zt(f),A=1<<M;l[M]=0,v[M]=-1,o[M]=-1,f&=~A}}function Yh(o,l){var f=o.entangledLanes|=l;for(o=o.entanglements;f;){var v=31-Zt(f),M=1<<v;M&l|o[v]&l&&(o[v]|=l),f&=~M}}var Ut=0;function fm(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var qh=i.unstable_scheduleCallback,pm=i.unstable_cancelCallback,wx=i.unstable_shouldYield,Ax=i.unstable_requestPaint,yn=i.unstable_now,Zh=i.unstable_ImmediatePriority,bx=i.unstable_UserBlockingPriority,Jh=i.unstable_NormalPriority,Cx=i.unstable_IdlePriority,Dl=null,Bi=null;function Rx(o){if(Bi&&typeof Bi.onCommitFiberRoot=="function")try{Bi.onCommitFiberRoot(Dl,o,void 0,(o.current.flags&128)===128)}catch{}}function Px(o,l){return o===l&&(o!==0||1/o===1/l)||o!==o&&l!==l}var ki=typeof Object.is=="function"?Object.is:Px,nr=null,Ul=!1,Kh=!1;function mm(o){nr===null?nr=[o]:nr.push(o)}function Ix(o){Ul=!0,mm(o)}function Hi(){if(!Kh&&nr!==null){Kh=!0;var o=0,l=Ut;try{var f=nr;for(Ut=1;o<f.length;o++){var v=f[o];do v=v(!0);while(v!==null)}nr=null,Ul=!1}catch(M){throw nr!==null&&(nr=nr.slice(o+1)),qh(Zh,Hi),M}finally{Ut=l,Kh=!1}}return null}var Lx=c.ReactCurrentBatchConfig;function Ol(o,l){if(ki(o,l))return!0;if(typeof o!="object"||o===null||typeof l!="object"||l===null)return!1;var f=Object.keys(o),v=Object.keys(l);if(f.length!==v.length)return!1;for(v=0;v<f.length;v++){var M=f[v];if(!dt.call(l,M)||!ki(o[M],l[M]))return!1}return!0}function Dx(o){switch(o.tag){case 5:return Ge(o.type);case 16:return Ge("Lazy");case 13:return Ge("Suspense");case 19:return Ge("SuspenseList");case 0:case 2:case 15:return o=ot(o.type,!1),o;case 11:return o=ot(o.type.render,!1),o;case 1:return o=ot(o.type,!0),o;default:return""}}function Ei(o,l){if(o&&o.defaultProps){l=s({},l),o=o.defaultProps;for(var f in o)l[f]===void 0&&(l[f]=o[f]);return l}return l}var Nl=Ct(null),Fl=null,Ys=null,jh=null;function Qh(){jh=Ys=Fl=null}function gm(o,l,f){$e?(vt(Nl,l._currentValue),l._currentValue=f):(vt(Nl,l._currentValue2),l._currentValue2=f)}function $h(o){var l=Nl.current;tt(Nl),$e?o._currentValue=l:o._currentValue2=l}function ed(o,l,f){for(;o!==null;){var v=o.alternate;if((o.childLanes&l)!==l?(o.childLanes|=l,v!==null&&(v.childLanes|=l)):v!==null&&(v.childLanes&l)!==l&&(v.childLanes|=l),o===f)break;o=o.return}}function qs(o,l){Fl=o,jh=Ys=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&l&&(si=!0),o.firstContext=null)}function hi(o){var l=$e?o._currentValue:o._currentValue2;if(jh!==o)if(o={context:o,memoizedValue:l,next:null},Ys===null){if(Fl===null)throw Error(a(308));Ys=o,Fl.dependencies={lanes:0,firstContext:o}}else Ys=Ys.next=o;return l}var Vi=null,br=!1;function td(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function _m(o,l){o=o.updateQueue,l.updateQueue===o&&(l.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function ir(o,l){return{eventTime:o,lane:l,tag:0,payload:null,callback:null,next:null}}function Cr(o,l){var f=o.updateQueue;f!==null&&(f=f.shared,an!==null&&o.mode&1&&!(Tt&2)?(o=f.interleaved,o===null?(l.next=l,Vi===null?Vi=[f]:Vi.push(f)):(l.next=o.next,o.next=l),f.interleaved=l):(o=f.pending,o===null?l.next=l:(l.next=o.next,o.next=l),f.pending=l))}function zl(o,l,f){if(l=l.updateQueue,l!==null&&(l=l.shared,(f&4194240)!==0)){var v=l.lanes;v&=o.pendingLanes,f|=v,l.lanes=f,Yh(o,f)}}function vm(o,l){var f=o.updateQueue,v=o.alternate;if(v!==null&&(v=v.updateQueue,f===v)){var M=null,A=null;if(f=f.firstBaseUpdate,f!==null){do{var B={eventTime:f.eventTime,lane:f.lane,tag:f.tag,payload:f.payload,callback:f.callback,next:null};A===null?M=A=B:A=A.next=B,f=f.next}while(f!==null);A===null?M=A=l:A=A.next=l}else M=A=l;f={baseState:v.baseState,firstBaseUpdate:M,lastBaseUpdate:A,shared:v.shared,effects:v.effects},o.updateQueue=f;return}o=f.lastBaseUpdate,o===null?f.firstBaseUpdate=l:o.next=l,f.lastBaseUpdate=l}function Bl(o,l,f,v){var M=o.updateQueue;br=!1;var A=M.firstBaseUpdate,B=M.lastBaseUpdate,H=M.shared.pending;if(H!==null){M.shared.pending=null;var se=H,Me=se.next;se.next=null,B===null?A=Me:B.next=Me,B=se;var Ve=o.alternate;Ve!==null&&(Ve=Ve.updateQueue,H=Ve.lastBaseUpdate,H!==B&&(H===null?Ve.firstBaseUpdate=Me:H.next=Me,Ve.lastBaseUpdate=se))}if(A!==null){var ft=M.baseState;B=0,Ve=Me=se=null,H=A;do{var et=H.lane,Gt=H.eventTime;if((v&et)===et){Ve!==null&&(Ve=Ve.next={eventTime:Gt,lane:0,tag:H.tag,payload:H.payload,callback:H.callback,next:null});e:{var je=o,In=H;switch(et=l,Gt=f,In.tag){case 1:if(je=In.payload,typeof je=="function"){ft=je.call(Gt,ft,et);break e}ft=je;break e;case 3:je.flags=je.flags&-65537|128;case 0:if(je=In.payload,et=typeof je=="function"?je.call(Gt,ft,et):je,et==null)break e;ft=s({},ft,et);break e;case 2:br=!0}}H.callback!==null&&H.lane!==0&&(o.flags|=64,et=M.effects,et===null?M.effects=[H]:et.push(H))}else Gt={eventTime:Gt,lane:et,tag:H.tag,payload:H.payload,callback:H.callback,next:null},Ve===null?(Me=Ve=Gt,se=ft):Ve=Ve.next=Gt,B|=et;if(H=H.next,H===null){if(H=M.shared.pending,H===null)break;et=H,H=et.next,et.next=null,M.lastBaseUpdate=et,M.shared.pending=null}}while(!0);if(Ve===null&&(se=ft),M.baseState=se,M.firstBaseUpdate=Me,M.lastBaseUpdate=Ve,l=M.shared.interleaved,l!==null){M=l;do B|=M.lane,M=M.next;while(M!==l)}else A===null&&(M.shared.lanes=0);no|=B,o.lanes=B,o.memoizedState=ft}}function ym(o,l,f){if(o=l.effects,l.effects=null,o!==null)for(l=0;l<o.length;l++){var v=o[l],M=v.callback;if(M!==null){if(v.callback=null,v=f,typeof M!="function")throw Error(a(191,M));M.call(v)}}}var xm=new n.Component().refs;function nd(o,l,f,v){l=o.memoizedState,f=f(v,l),f=f==null?l:s({},l,f),o.memoizedState=f,o.lanes===0&&(o.updateQueue.baseState=f)}var kl={isMounted:function(o){return(o=o._reactInternals)?R(o)===o:!1},enqueueSetState:function(o,l,f){o=o._reactInternals;var v=Bn(),M=Ir(o),A=ir(v,M);A.payload=l,f!=null&&(A.callback=f),Cr(o,A),l=gi(o,M,v),l!==null&&zl(l,o,M)},enqueueReplaceState:function(o,l,f){o=o._reactInternals;var v=Bn(),M=Ir(o),A=ir(v,M);A.tag=1,A.payload=l,f!=null&&(A.callback=f),Cr(o,A),l=gi(o,M,v),l!==null&&zl(l,o,M)},enqueueForceUpdate:function(o,l){o=o._reactInternals;var f=Bn(),v=Ir(o),M=ir(f,v);M.tag=2,l!=null&&(M.callback=l),Cr(o,M),l=gi(o,v,f),l!==null&&zl(l,o,v)}};function Sm(o,l,f,v,M,A,B){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(v,A,B):l.prototype&&l.prototype.isPureReactComponent?!Ol(f,v)||!Ol(M,A):!0}function Mm(o,l,f){var v=!1,M=Et,A=l.contextType;return typeof A=="object"&&A!==null?A=hi(A):(M=rn(l)?At:Le.current,v=l.contextTypes,A=(v=v!=null)?_n(o,M):Et),l=new l(f,A),o.memoizedState=l.state!==null&&l.state!==void 0?l.state:null,l.updater=kl,o.stateNode=l,l._reactInternals=o,v&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=M,o.__reactInternalMemoizedMaskedChildContext=A),l}function Em(o,l,f,v){o=l.state,typeof l.componentWillReceiveProps=="function"&&l.componentWillReceiveProps(f,v),typeof l.UNSAFE_componentWillReceiveProps=="function"&&l.UNSAFE_componentWillReceiveProps(f,v),l.state!==o&&kl.enqueueReplaceState(l,l.state,null)}function id(o,l,f,v){var M=o.stateNode;M.props=f,M.state=o.memoizedState,M.refs=xm,td(o);var A=l.contextType;typeof A=="object"&&A!==null?M.context=hi(A):(A=rn(l)?At:Le.current,M.context=_n(o,A)),M.state=o.memoizedState,A=l.getDerivedStateFromProps,typeof A=="function"&&(nd(o,l,A,f),M.state=o.memoizedState),typeof l.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(l=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),l!==M.state&&kl.enqueueReplaceState(M,M.state,null),Bl(o,f,M,v),M.state=o.memoizedState),typeof M.componentDidMount=="function"&&(o.flags|=4194308)}var Zs=[],Js=0,Hl=null,Vl=0,di=[],fi=0,Qr=null,rr=1,sr="";function $r(o,l){Zs[Js++]=Vl,Zs[Js++]=Hl,Hl=o,Vl=l}function Tm(o,l,f){di[fi++]=rr,di[fi++]=sr,di[fi++]=Qr,Qr=o;var v=rr;o=sr;var M=32-Zt(v)-1;v&=~(1<<M),f+=1;var A=32-Zt(l)+M;if(30<A){var B=M-M%5;A=(v&(1<<B)-1).toString(32),v>>=B,M-=B,rr=1<<32-Zt(l)+M|f<<M|v,sr=A+o}else rr=1<<A|f<<M|v,sr=o}function rd(o){o.return!==null&&($r(o,1),Tm(o,1,0))}function sd(o){for(;o===Hl;)Hl=Zs[--Js],Zs[Js]=null,Vl=Zs[--Js],Zs[Js]=null;for(;o===Qr;)Qr=di[--fi],di[fi]=null,sr=di[--fi],di[fi]=null,rr=di[--fi],di[fi]=null}var ii=null,ri=null,Jt=!1,jo=!1,Ti=null;function wm(o,l){var f=_i(5,null,null,0);f.elementType="DELETED",f.stateNode=l,f.return=o,l=o.deletions,l===null?(o.deletions=[f],o.flags|=16):l.push(f)}function Am(o,l){switch(o.tag){case 5:return l=Mi(l,o.type,o.pendingProps),l!==null?(o.stateNode=l,ii=o,ri=Ws(l),!0):!1;case 6:return l=Ml(l,o.pendingProps),l!==null?(o.stateNode=l,ii=o,ri=null,!0):!1;case 13:if(l=El(l),l!==null){var f=Qr!==null?{id:rr,overflow:sr}:null;return o.memoizedState={dehydrated:l,treeContext:f,retryLane:1073741824},f=_i(18,null,null,0),f.stateNode=l,f.return=o,o.child=f,ii=o,ri=null,!0}return!1;default:return!1}}function od(o){return(o.mode&1)!==0&&(o.flags&128)===0}function ad(o){if(Jt){var l=ri;if(l){var f=l;if(!Am(o,l)){if(od(o))throw Error(a(418));l=Tr(f);var v=ii;l&&Am(o,l)?wm(v,f):(o.flags=o.flags&-4097|2,Jt=!1,ii=o)}}else{if(od(o))throw Error(a(418));o.flags=o.flags&-4097|2,Jt=!1,ii=o}}}function bm(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;ii=o}function Qo(o){if(!_e||o!==ii)return!1;if(!Jt)return bm(o),Jt=!0,!1;if(o.tag!==3&&(o.tag!==5||te(o.type)&&!ge(o.type,o.memoizedProps))){var l=ri;if(l){if(od(o)){for(o=ri;o;)o=Tr(o);throw Error(a(418))}for(;l;)wm(o,l),l=Tr(l)}}if(bm(o),o.tag===13){if(!_e)throw Error(a(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(a(317));ri=Gh(o)}else ri=ii?Tr(o.stateNode):null;return!0}function Ks(){_e&&(ri=ii=null,jo=Jt=!1)}function ld(o){Ti===null?Ti=[o]:Ti.push(o)}function $o(o,l,f){if(o=f.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(f._owner){if(f=f._owner,f){if(f.tag!==1)throw Error(a(309));var v=f.stateNode}if(!v)throw Error(a(147,o));var M=v,A=""+o;return l!==null&&l.ref!==null&&typeof l.ref=="function"&&l.ref._stringRef===A?l.ref:(l=function(B){var H=M.refs;H===xm&&(H=M.refs={}),B===null?delete H[A]:H[A]=B},l._stringRef=A,l)}if(typeof o!="string")throw Error(a(284));if(!f._owner)throw Error(a(290,o))}return o}function Gl(o,l){throw o=Object.prototype.toString.call(l),Error(a(31,o==="[object Object]"?"object with keys {"+Object.keys(l).join(", ")+"}":o))}function Cm(o){var l=o._init;return l(o._payload)}function Rm(o){function l(j,W){if(o){var ie=j.deletions;ie===null?(j.deletions=[W],j.flags|=16):ie.push(W)}}function f(j,W){if(!o)return null;for(;W!==null;)l(j,W),W=W.sibling;return null}function v(j,W){for(j=new Map;W!==null;)W.key!==null?j.set(W.key,W):j.set(W.index,W),W=W.sibling;return j}function M(j,W){return j=Dr(j,W),j.index=0,j.sibling=null,j}function A(j,W,ie){return j.index=ie,o?(ie=j.alternate,ie!==null?(ie=ie.index,ie<W?(j.flags|=2,W):ie):(j.flags|=2,W)):(j.flags|=1048576,W)}function B(j){return o&&j.alternate===null&&(j.flags|=2),j}function H(j,W,ie,Ue){return W===null||W.tag!==6?(W=Xd(ie,j.mode,Ue),W.return=j,W):(W=M(W,ie),W.return=j,W)}function se(j,W,ie,Ue){var Ke=ie.type;return Ke===d?Ve(j,W,ie.props.children,Ue,ie.key):W!==null&&(W.elementType===Ke||typeof Ke=="object"&&Ke!==null&&Ke.$$typeof===w&&Cm(Ke)===W.type)?(Ue=M(W,ie.props),Ue.ref=$o(j,W,ie),Ue.return=j,Ue):(Ue=xc(ie.type,ie.key,ie.props,null,j.mode,Ue),Ue.ref=$o(j,W,ie),Ue.return=j,Ue)}function Me(j,W,ie,Ue){return W===null||W.tag!==4||W.stateNode.containerInfo!==ie.containerInfo||W.stateNode.implementation!==ie.implementation?(W=Yd(ie,j.mode,Ue),W.return=j,W):(W=M(W,ie.children||[]),W.return=j,W)}function Ve(j,W,ie,Ue,Ke){return W===null||W.tag!==7?(W=os(ie,j.mode,Ue,Ke),W.return=j,W):(W=M(W,ie),W.return=j,W)}function ft(j,W,ie){if(typeof W=="string"&&W!==""||typeof W=="number")return W=Xd(""+W,j.mode,ie),W.return=j,W;if(typeof W=="object"&&W!==null){switch(W.$$typeof){case u:return ie=xc(W.type,W.key,W.props,null,j.mode,ie),ie.ref=$o(j,null,W),ie.return=j,ie;case h:return W=Yd(W,j.mode,ie),W.return=j,W;case w:var Ue=W._init;return ft(j,Ue(W._payload),ie)}if(ae(W)||C(W))return W=os(W,j.mode,ie,null),W.return=j,W;Gl(j,W)}return null}function et(j,W,ie,Ue){var Ke=W!==null?W.key:null;if(typeof ie=="string"&&ie!==""||typeof ie=="number")return Ke!==null?null:H(j,W,""+ie,Ue);if(typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case u:return ie.key===Ke?se(j,W,ie,Ue):null;case h:return ie.key===Ke?Me(j,W,ie,Ue):null;case w:return Ke=ie._init,et(j,W,Ke(ie._payload),Ue)}if(ae(ie)||C(ie))return Ke!==null?null:Ve(j,W,ie,Ue,null);Gl(j,ie)}return null}function Gt(j,W,ie,Ue,Ke){if(typeof Ue=="string"&&Ue!==""||typeof Ue=="number")return j=j.get(ie)||null,H(W,j,""+Ue,Ke);if(typeof Ue=="object"&&Ue!==null){switch(Ue.$$typeof){case u:return j=j.get(Ue.key===null?ie:Ue.key)||null,se(W,j,Ue,Ke);case h:return j=j.get(Ue.key===null?ie:Ue.key)||null,Me(W,j,Ue,Ke);case w:var St=Ue._init;return Gt(j,W,ie,St(Ue._payload),Ke)}if(ae(Ue)||C(Ue))return j=j.get(ie)||null,Ve(W,j,Ue,Ke,null);Gl(W,Ue)}return null}function je(j,W,ie,Ue){for(var Ke=null,St=null,pt=W,Ot=W=0,Sn=null;pt!==null&&Ot<ie.length;Ot++){pt.index>Ot?(Sn=pt,pt=null):Sn=pt.sibling;var Nt=et(j,pt,ie[Ot],Ue);if(Nt===null){pt===null&&(pt=Sn);break}o&&pt&&Nt.alternate===null&&l(j,pt),W=A(Nt,W,Ot),St===null?Ke=Nt:St.sibling=Nt,St=Nt,pt=Sn}if(Ot===ie.length)return f(j,pt),Jt&&$r(j,Ot),Ke;if(pt===null){for(;Ot<ie.length;Ot++)pt=ft(j,ie[Ot],Ue),pt!==null&&(W=A(pt,W,Ot),St===null?Ke=pt:St.sibling=pt,St=pt);return Jt&&$r(j,Ot),Ke}for(pt=v(j,pt);Ot<ie.length;Ot++)Sn=Gt(pt,j,Ot,ie[Ot],Ue),Sn!==null&&(o&&Sn.alternate!==null&&pt.delete(Sn.key===null?Ot:Sn.key),W=A(Sn,W,Ot),St===null?Ke=Sn:St.sibling=Sn,St=Sn);return o&&pt.forEach(function(Ur){return l(j,Ur)}),Jt&&$r(j,Ot),Ke}function In(j,W,ie,Ue){var Ke=C(ie);if(typeof Ke!="function")throw Error(a(150));if(ie=Ke.call(ie),ie==null)throw Error(a(151));for(var St=Ke=null,pt=W,Ot=W=0,Sn=null,Nt=ie.next();pt!==null&&!Nt.done;Ot++,Nt=ie.next()){pt.index>Ot?(Sn=pt,pt=null):Sn=pt.sibling;var Ur=et(j,pt,Nt.value,Ue);if(Ur===null){pt===null&&(pt=Sn);break}o&&pt&&Ur.alternate===null&&l(j,pt),W=A(Ur,W,Ot),St===null?Ke=Ur:St.sibling=Ur,St=Ur,pt=Sn}if(Nt.done)return f(j,pt),Jt&&$r(j,Ot),Ke;if(pt===null){for(;!Nt.done;Ot++,Nt=ie.next())Nt=ft(j,Nt.value,Ue),Nt!==null&&(W=A(Nt,W,Ot),St===null?Ke=Nt:St.sibling=Nt,St=Nt);return Jt&&$r(j,Ot),Ke}for(pt=v(j,pt);!Nt.done;Ot++,Nt=ie.next())Nt=Gt(pt,j,Ot,Nt.value,Ue),Nt!==null&&(o&&Nt.alternate!==null&&pt.delete(Nt.key===null?Ot:Nt.key),W=A(Nt,W,Ot),St===null?Ke=Nt:St.sibling=Nt,St=Nt);return o&&pt.forEach(function(cS){return l(j,cS)}),Jt&&$r(j,Ot),Ke}function vi(j,W,ie,Ue){if(typeof ie=="object"&&ie!==null&&ie.type===d&&ie.key===null&&(ie=ie.props.children),typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case u:e:{for(var Ke=ie.key,St=W;St!==null;){if(St.key===Ke){if(Ke=ie.type,Ke===d){if(St.tag===7){f(j,St.sibling),W=M(St,ie.props.children),W.return=j,j=W;break e}}else if(St.elementType===Ke||typeof Ke=="object"&&Ke!==null&&Ke.$$typeof===w&&Cm(Ke)===St.type){f(j,St.sibling),W=M(St,ie.props),W.ref=$o(j,St,ie),W.return=j,j=W;break e}f(j,St);break}else l(j,St);St=St.sibling}ie.type===d?(W=os(ie.props.children,j.mode,Ue,ie.key),W.return=j,j=W):(Ue=xc(ie.type,ie.key,ie.props,null,j.mode,Ue),Ue.ref=$o(j,W,ie),Ue.return=j,j=Ue)}return B(j);case h:e:{for(St=ie.key;W!==null;){if(W.key===St)if(W.tag===4&&W.stateNode.containerInfo===ie.containerInfo&&W.stateNode.implementation===ie.implementation){f(j,W.sibling),W=M(W,ie.children||[]),W.return=j,j=W;break e}else{f(j,W);break}else l(j,W);W=W.sibling}W=Yd(ie,j.mode,Ue),W.return=j,j=W}return B(j);case w:return St=ie._init,vi(j,W,St(ie._payload),Ue)}if(ae(ie))return je(j,W,ie,Ue);if(C(ie))return In(j,W,ie,Ue);Gl(j,ie)}return typeof ie=="string"&&ie!==""||typeof ie=="number"?(ie=""+ie,W!==null&&W.tag===6?(f(j,W.sibling),W=M(W,ie),W.return=j,j=W):(f(j,W),W=Xd(ie,j.mode,Ue),W.return=j,j=W),B(j)):f(j,W)}return vi}var js=Rm(!0),Pm=Rm(!1),ea={},pi=Ct(ea),ta=Ct(ea),Qs=Ct(ea);function Gi(o){if(o===ea)throw Error(a(174));return o}function cd(o,l){vt(Qs,l),vt(ta,o),vt(pi,ea),o=pe(l),tt(pi),vt(pi,o)}function $s(){tt(pi),tt(ta),tt(Qs)}function Im(o){var l=Gi(Qs.current),f=Gi(pi.current);l=z(f,o.type,l),f!==l&&(vt(ta,o),vt(pi,l))}function ud(o){ta.current===o&&(tt(pi),tt(ta))}var Kt=Ct(0);function Wl(o){for(var l=o;l!==null;){if(l.tag===13){var f=l.memoizedState;if(f!==null&&(f=f.dehydrated,f===null||Ni(f)||jr(f)))return l}else if(l.tag===19&&l.memoizedProps.revealOrder!==void 0){if(l.flags&128)return l}else if(l.child!==null){l.child.return=l,l=l.child;continue}if(l===o)break;for(;l.sibling===null;){if(l.return===null||l.return===o)return null;l=l.return}l.sibling.return=l.return,l=l.sibling}return null}var hd=[];function dd(){for(var o=0;o<hd.length;o++){var l=hd[o];$e?l._workInProgressVersionPrimary=null:l._workInProgressVersionSecondary=null}hd.length=0}var Xl=c.ReactCurrentDispatcher,mi=c.ReactCurrentBatchConfig,eo=0,en=null,Cn=null,xn=null,Yl=!1,na=!1,ia=0,Ux=0;function Rn(){throw Error(a(321))}function fd(o,l){if(l===null)return!1;for(var f=0;f<l.length&&f<o.length;f++)if(!ki(o[f],l[f]))return!1;return!0}function pd(o,l,f,v,M,A){if(eo=A,en=l,l.memoizedState=null,l.updateQueue=null,l.lanes=0,Xl.current=o===null||o.memoizedState===null?zx:Bx,o=f(v,M),na){A=0;do{if(na=!1,ia=0,25<=A)throw Error(a(301));A+=1,xn=Cn=null,l.updateQueue=null,Xl.current=kx,o=f(v,M)}while(na)}if(Xl.current=jl,l=Cn!==null&&Cn.next!==null,eo=0,xn=Cn=en=null,Yl=!1,l)throw Error(a(300));return o}function md(){var o=ia!==0;return ia=0,o}function or(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return xn===null?en.memoizedState=xn=o:xn=xn.next=o,xn}function Wi(){if(Cn===null){var o=en.alternate;o=o!==null?o.memoizedState:null}else o=Cn.next;var l=xn===null?en.memoizedState:xn.next;if(l!==null)xn=l,Cn=o;else{if(o===null)throw Error(a(310));Cn=o,o={memoizedState:Cn.memoizedState,baseState:Cn.baseState,baseQueue:Cn.baseQueue,queue:Cn.queue,next:null},xn===null?en.memoizedState=xn=o:xn=xn.next=o}return xn}function es(o,l){return typeof l=="function"?l(o):l}function ql(o){var l=Wi(),f=l.queue;if(f===null)throw Error(a(311));f.lastRenderedReducer=o;var v=Cn,M=v.baseQueue,A=f.pending;if(A!==null){if(M!==null){var B=M.next;M.next=A.next,A.next=B}v.baseQueue=M=A,f.pending=null}if(M!==null){A=M.next,v=v.baseState;var H=B=null,se=null,Me=A;do{var Ve=Me.lane;if((eo&Ve)===Ve)se!==null&&(se=se.next={lane:0,action:Me.action,hasEagerState:Me.hasEagerState,eagerState:Me.eagerState,next:null}),v=Me.hasEagerState?Me.eagerState:o(v,Me.action);else{var ft={lane:Ve,action:Me.action,hasEagerState:Me.hasEagerState,eagerState:Me.eagerState,next:null};se===null?(H=se=ft,B=v):se=se.next=ft,en.lanes|=Ve,no|=Ve}Me=Me.next}while(Me!==null&&Me!==A);se===null?B=v:se.next=H,ki(v,l.memoizedState)||(si=!0),l.memoizedState=v,l.baseState=B,l.baseQueue=se,f.lastRenderedState=v}if(o=f.interleaved,o!==null){M=o;do A=M.lane,en.lanes|=A,no|=A,M=M.next;while(M!==o)}else M===null&&(f.lanes=0);return[l.memoizedState,f.dispatch]}function Zl(o){var l=Wi(),f=l.queue;if(f===null)throw Error(a(311));f.lastRenderedReducer=o;var v=f.dispatch,M=f.pending,A=l.memoizedState;if(M!==null){f.pending=null;var B=M=M.next;do A=o(A,B.action),B=B.next;while(B!==M);ki(A,l.memoizedState)||(si=!0),l.memoizedState=A,l.baseQueue===null&&(l.baseState=A),f.lastRenderedState=A}return[A,v]}function Lm(){}function Dm(o,l){var f=en,v=Wi(),M=l(),A=!ki(v.memoizedState,M);if(A&&(v.memoizedState=M,si=!0),v=v.queue,sa(Nm.bind(null,f,v,o),[o]),v.getSnapshot!==l||A||xn!==null&&xn.memoizedState.tag&1){if(f.flags|=2048,ra(9,Om.bind(null,f,v,M,l),void 0,null),an===null)throw Error(a(349));eo&30||Um(f,l,M)}return M}function Um(o,l,f){o.flags|=16384,o={getSnapshot:l,value:f},l=en.updateQueue,l===null?(l={lastEffect:null,stores:null},en.updateQueue=l,l.stores=[o]):(f=l.stores,f===null?l.stores=[o]:f.push(o))}function Om(o,l,f,v){l.value=f,l.getSnapshot=v,Fm(l)&&gi(o,1,-1)}function Nm(o,l,f){return f(function(){Fm(l)&&gi(o,1,-1)})}function Fm(o){var l=o.getSnapshot;o=o.value;try{var f=l();return!ki(o,f)}catch{return!0}}function gd(o){var l=or();return typeof o=="function"&&(o=o()),l.memoizedState=l.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:es,lastRenderedState:o},l.queue=o,o=o.dispatch=Fx.bind(null,en,o),[l.memoizedState,o]}function ra(o,l,f,v){return o={tag:o,create:l,destroy:f,deps:v,next:null},l=en.updateQueue,l===null?(l={lastEffect:null,stores:null},en.updateQueue=l,l.lastEffect=o.next=o):(f=l.lastEffect,f===null?l.lastEffect=o.next=o:(v=f.next,f.next=o,o.next=v,l.lastEffect=o)),o}function zm(){return Wi().memoizedState}function Jl(o,l,f,v){var M=or();en.flags|=o,M.memoizedState=ra(1|l,f,void 0,v===void 0?null:v)}function Kl(o,l,f,v){var M=Wi();v=v===void 0?null:v;var A=void 0;if(Cn!==null){var B=Cn.memoizedState;if(A=B.destroy,v!==null&&fd(v,B.deps)){M.memoizedState=ra(l,f,A,v);return}}en.flags|=o,M.memoizedState=ra(1|l,f,A,v)}function _d(o,l){return Jl(8390656,8,o,l)}function sa(o,l){return Kl(2048,8,o,l)}function Bm(o,l){return Kl(4,2,o,l)}function km(o,l){return Kl(4,4,o,l)}function Hm(o,l){if(typeof l=="function")return o=o(),l(o),function(){l(null)};if(l!=null)return o=o(),l.current=o,function(){l.current=null}}function Vm(o,l,f){return f=f!=null?f.concat([o]):null,Kl(4,4,Hm.bind(null,l,o),f)}function vd(){}function Gm(o,l){var f=Wi();l=l===void 0?null:l;var v=f.memoizedState;return v!==null&&l!==null&&fd(l,v[1])?v[0]:(f.memoizedState=[o,l],o)}function Wm(o,l){var f=Wi();l=l===void 0?null:l;var v=f.memoizedState;return v!==null&&l!==null&&fd(l,v[1])?v[0]:(o=o(),f.memoizedState=[o,l],o)}function Ox(o,l){var f=Ut;Ut=f!==0&&4>f?f:4,o(!0);var v=mi.transition;mi.transition={};try{o(!1),l()}finally{Ut=f,mi.transition=v}}function Xm(){return Wi().memoizedState}function Nx(o,l,f){var v=Ir(o);f={lane:v,action:f,hasEagerState:!1,eagerState:null,next:null},Ym(o)?qm(l,f):(Zm(o,l,f),f=Bn(),o=gi(o,v,f),o!==null&&Jm(o,l,v))}function Fx(o,l,f){var v=Ir(o),M={lane:v,action:f,hasEagerState:!1,eagerState:null,next:null};if(Ym(o))qm(l,M);else{Zm(o,l,M);var A=o.alternate;if(o.lanes===0&&(A===null||A.lanes===0)&&(A=l.lastRenderedReducer,A!==null))try{var B=l.lastRenderedState,H=A(B,f);if(M.hasEagerState=!0,M.eagerState=H,ki(H,B))return}catch{}finally{}f=Bn(),o=gi(o,v,f),o!==null&&Jm(o,l,v)}}function Ym(o){var l=o.alternate;return o===en||l!==null&&l===en}function qm(o,l){na=Yl=!0;var f=o.pending;f===null?l.next=l:(l.next=f.next,f.next=l),o.pending=l}function Zm(o,l,f){an!==null&&o.mode&1&&!(Tt&2)?(o=l.interleaved,o===null?(f.next=f,Vi===null?Vi=[l]:Vi.push(l)):(f.next=o.next,o.next=f),l.interleaved=f):(o=l.pending,o===null?f.next=f:(f.next=o.next,o.next=f),l.pending=f)}function Jm(o,l,f){if(f&4194240){var v=l.lanes;v&=o.pendingLanes,f|=v,l.lanes=f,Yh(o,f)}}var jl={readContext:hi,useCallback:Rn,useContext:Rn,useEffect:Rn,useImperativeHandle:Rn,useInsertionEffect:Rn,useLayoutEffect:Rn,useMemo:Rn,useReducer:Rn,useRef:Rn,useState:Rn,useDebugValue:Rn,useDeferredValue:Rn,useTransition:Rn,useMutableSource:Rn,useSyncExternalStore:Rn,useId:Rn,unstable_isNewReconciler:!1},zx={readContext:hi,useCallback:function(o,l){return or().memoizedState=[o,l===void 0?null:l],o},useContext:hi,useEffect:_d,useImperativeHandle:function(o,l,f){return f=f!=null?f.concat([o]):null,Jl(4194308,4,Hm.bind(null,l,o),f)},useLayoutEffect:function(o,l){return Jl(4194308,4,o,l)},useInsertionEffect:function(o,l){return Jl(4,2,o,l)},useMemo:function(o,l){var f=or();return l=l===void 0?null:l,o=o(),f.memoizedState=[o,l],o},useReducer:function(o,l,f){var v=or();return l=f!==void 0?f(l):l,v.memoizedState=v.baseState=l,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:l},v.queue=o,o=o.dispatch=Nx.bind(null,en,o),[v.memoizedState,o]},useRef:function(o){var l=or();return o={current:o},l.memoizedState=o},useState:gd,useDebugValue:vd,useDeferredValue:function(o){var l=gd(o),f=l[0],v=l[1];return _d(function(){var M=mi.transition;mi.transition={};try{v(o)}finally{mi.transition=M}},[o]),f},useTransition:function(){var o=gd(!1),l=o[0];return o=Ox.bind(null,o[1]),or().memoizedState=o,[l,o]},useMutableSource:function(){},useSyncExternalStore:function(o,l,f){var v=en,M=or();if(Jt){if(f===void 0)throw Error(a(407));f=f()}else{if(f=l(),an===null)throw Error(a(349));eo&30||Um(v,l,f)}M.memoizedState=f;var A={value:f,getSnapshot:l};return M.queue=A,_d(Nm.bind(null,v,A,o),[o]),v.flags|=2048,ra(9,Om.bind(null,v,A,f,l),void 0,null),f},useId:function(){var o=or(),l=an.identifierPrefix;if(Jt){var f=sr,v=rr;f=(v&~(1<<32-Zt(v)-1)).toString(32)+f,l=":"+l+"R"+f,f=ia++,0<f&&(l+="H"+f.toString(32)),l+=":"}else f=Ux++,l=":"+l+"r"+f.toString(32)+":";return o.memoizedState=l},unstable_isNewReconciler:!1},Bx={readContext:hi,useCallback:Gm,useContext:hi,useEffect:sa,useImperativeHandle:Vm,useInsertionEffect:Bm,useLayoutEffect:km,useMemo:Wm,useReducer:ql,useRef:zm,useState:function(){return ql(es)},useDebugValue:vd,useDeferredValue:function(o){var l=ql(es),f=l[0],v=l[1];return sa(function(){var M=mi.transition;mi.transition={};try{v(o)}finally{mi.transition=M}},[o]),f},useTransition:function(){var o=ql(es)[0],l=Wi().memoizedState;return[o,l]},useMutableSource:Lm,useSyncExternalStore:Dm,useId:Xm,unstable_isNewReconciler:!1},kx={readContext:hi,useCallback:Gm,useContext:hi,useEffect:sa,useImperativeHandle:Vm,useInsertionEffect:Bm,useLayoutEffect:km,useMemo:Wm,useReducer:Zl,useRef:zm,useState:function(){return Zl(es)},useDebugValue:vd,useDeferredValue:function(o){var l=Zl(es),f=l[0],v=l[1];return sa(function(){var M=mi.transition;mi.transition={};try{v(o)}finally{mi.transition=M}},[o]),f},useTransition:function(){var o=Zl(es)[0],l=Wi().memoizedState;return[o,l]},useMutableSource:Lm,useSyncExternalStore:Dm,useId:Xm,unstable_isNewReconciler:!1};function yd(o,l){try{var f="",v=l;do f+=Dx(v),v=v.return;while(v);var M=f}catch(A){M=`
Error generating stack: `+A.message+`
`+A.stack}return{value:o,source:l,stack:M}}function xd(o,l){try{console.error(l.value)}catch(f){setTimeout(function(){throw f})}}var Hx=typeof WeakMap=="function"?WeakMap:Map;function Km(o,l,f){f=ir(-1,f),f.tag=3,f.payload={element:null};var v=l.value;return f.callback=function(){fc||(fc=!0,zd=v),xd(o,l)},f}function jm(o,l,f){f=ir(-1,f),f.tag=3;var v=o.type.getDerivedStateFromError;if(typeof v=="function"){var M=l.value;f.payload=function(){return v(M)},f.callback=function(){xd(o,l)}}var A=o.stateNode;return A!==null&&typeof A.componentDidCatch=="function"&&(f.callback=function(){xd(o,l),typeof v!="function"&&(Rr===null?Rr=new Set([this]):Rr.add(this));var B=l.stack;this.componentDidCatch(l.value,{componentStack:B!==null?B:""})}),f}function Qm(o,l,f){var v=o.pingCache;if(v===null){v=o.pingCache=new Hx;var M=new Set;v.set(l,M)}else M=v.get(l),M===void 0&&(M=new Set,v.set(l,M));M.has(f)||(M.add(f),o=tS.bind(null,o,l,f),l.then(o,o))}function $m(o){do{var l;if((l=o.tag===13)&&(l=o.memoizedState,l=l!==null?l.dehydrated!==null:!0),l)return o;o=o.return}while(o!==null);return null}function eg(o,l,f,v,M){return o.mode&1?(o.flags|=65536,o.lanes=M,o):(o===l?o.flags|=65536:(o.flags|=128,f.flags|=131072,f.flags&=-52805,f.tag===1&&(f.alternate===null?f.tag=17:(l=ir(-1,1),l.tag=2,Cr(f,l))),f.lanes|=1),o)}function Xi(o){o.flags|=4}function tg(o,l){if(o!==null&&o.child===l.child)return!0;if(l.flags&16)return!1;for(o=l.child;o!==null;){if(o.flags&12854||o.subtreeFlags&12854)return!1;o=o.sibling}return!0}var oa,aa,Ql,$l;if(ct)oa=function(o,l){for(var f=l.child;f!==null;){if(f.tag===5||f.tag===6)xe(o,f.stateNode);else if(f.tag!==4&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===l)break;for(;f.sibling===null;){if(f.return===null||f.return===l)return;f=f.return}f.sibling.return=f.return,f=f.sibling}},aa=function(){},Ql=function(o,l,f,v,M){if(o=o.memoizedProps,o!==v){var A=l.stateNode,B=Gi(pi.current);f=ne(A,f,o,v,M,B),(l.updateQueue=f)&&Xi(l)}},$l=function(o,l,f,v){f!==v&&Xi(l)};else if(he){oa=function(o,l,f,v){for(var M=l.child;M!==null;){if(M.tag===5){var A=M.stateNode;f&&v&&(A=Dt(A,M.type,M.memoizedProps,M)),xe(o,A)}else if(M.tag===6)A=M.stateNode,f&&v&&(A=Yn(A,M.memoizedProps,M)),xe(o,A);else if(M.tag!==4){if(M.tag===22&&M.memoizedState!==null)A=M.child,A!==null&&(A.return=M),oa(o,M,!0,!0);else if(M.child!==null){M.child.return=M,M=M.child;continue}}if(M===l)break;for(;M.sibling===null;){if(M.return===null||M.return===l)return;M=M.return}M.sibling.return=M.return,M=M.sibling}};var ng=function(o,l,f,v){for(var M=l.child;M!==null;){if(M.tag===5){var A=M.stateNode;f&&v&&(A=Dt(A,M.type,M.memoizedProps,M)),ut(o,A)}else if(M.tag===6)A=M.stateNode,f&&v&&(A=Yn(A,M.memoizedProps,M)),ut(o,A);else if(M.tag!==4){if(M.tag===22&&M.memoizedState!==null)A=M.child,A!==null&&(A.return=M),ng(o,M,!0,!0);else if(M.child!==null){M.child.return=M,M=M.child;continue}}if(M===l)break;for(;M.sibling===null;){if(M.return===null||M.return===l)return;M=M.return}M.sibling.return=M.return,M=M.sibling}};aa=function(o,l){var f=l.stateNode;if(!tg(o,l)){o=f.containerInfo;var v=Ie(o);ng(v,l,!1,!1),f.pendingChildren=v,Xi(l),Yt(o,v)}},Ql=function(o,l,f,v,M){var A=o.stateNode,B=o.memoizedProps;if((o=tg(o,l))&&B===v)l.stateNode=A;else{var H=l.stateNode,se=Gi(pi.current),Me=null;B!==v&&(Me=ne(H,f,B,v,M,se)),o&&Me===null?l.stateNode=A:(A=Oe(A,Me,f,B,v,l,o,H),Be(A,f,v,M,se)&&Xi(l),l.stateNode=A,o?Xi(l):oa(A,l,!1,!1))}},$l=function(o,l,f,v){f!==v?(o=Gi(Qs.current),f=Gi(pi.current),l.stateNode=we(v,o,f,l),Xi(l)):l.stateNode=o.stateNode}}else aa=function(){},Ql=function(){},$l=function(){};function la(o,l){if(!Jt)switch(o.tailMode){case"hidden":l=o.tail;for(var f=null;l!==null;)l.alternate!==null&&(f=l),l=l.sibling;f===null?o.tail=null:f.sibling=null;break;case"collapsed":f=o.tail;for(var v=null;f!==null;)f.alternate!==null&&(v=f),f=f.sibling;v===null?l||o.tail===null?o.tail=null:o.tail.sibling=null:v.sibling=null}}function Pn(o){var l=o.alternate!==null&&o.alternate.child===o.child,f=0,v=0;if(l)for(var M=o.child;M!==null;)f|=M.lanes|M.childLanes,v|=M.subtreeFlags&14680064,v|=M.flags&14680064,M.return=o,M=M.sibling;else for(M=o.child;M!==null;)f|=M.lanes|M.childLanes,v|=M.subtreeFlags,v|=M.flags,M.return=o,M=M.sibling;return o.subtreeFlags|=v,o.childLanes=f,l}function Vx(o,l,f){var v=l.pendingProps;switch(sd(l),l.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Pn(l),null;case 1:return rn(l.type)&&vn(),Pn(l),null;case 3:return v=l.stateNode,$s(),tt(qt),tt(Le),dd(),v.pendingContext&&(v.context=v.pendingContext,v.pendingContext=null),(o===null||o.child===null)&&(Qo(l)?Xi(l):o===null||o.memoizedState.isDehydrated&&!(l.flags&256)||(l.flags|=1024,Ti!==null&&(Hd(Ti),Ti=null))),aa(o,l),Pn(l),null;case 5:ud(l),f=Gi(Qs.current);var M=l.type;if(o!==null&&l.stateNode!=null)Ql(o,l,M,v,f),o.ref!==l.ref&&(l.flags|=512,l.flags|=2097152);else{if(!v){if(l.stateNode===null)throw Error(a(166));return Pn(l),null}if(o=Gi(pi.current),Qo(l)){if(!_e)throw Error(a(175));o=Al(l.stateNode,l.type,l.memoizedProps,f,o,l,!jo),l.updateQueue=o,o!==null&&Xi(l)}else{var A=re(M,v,f,o,l);oa(A,l,!1,!1),l.stateNode=A,Be(A,M,v,f,o)&&Xi(l)}l.ref!==null&&(l.flags|=512,l.flags|=2097152)}return Pn(l),null;case 6:if(o&&l.stateNode!=null)$l(o,l,o.memoizedProps,v);else{if(typeof v!="string"&&l.stateNode===null)throw Error(a(166));if(o=Gi(Qs.current),f=Gi(pi.current),Qo(l)){if(!_e)throw Error(a(176));if(o=l.stateNode,v=l.memoizedProps,(f=bl(o,v,l,!jo))&&(M=ii,M!==null))switch(A=(M.mode&1)!==0,M.tag){case 3:X(M.stateNode.containerInfo,o,v,A);break;case 5:Ee(M.type,M.memoizedProps,M.stateNode,o,v,A)}f&&Xi(l)}else l.stateNode=we(v,o,f,l)}return Pn(l),null;case 13:if(tt(Kt),v=l.memoizedState,Jt&&ri!==null&&l.mode&1&&!(l.flags&128)){for(o=ri;o;)o=Tr(o);return Ks(),l.flags|=98560,l}if(v!==null&&v.dehydrated!==null){if(v=Qo(l),o===null){if(!v)throw Error(a(318));if(!_e)throw Error(a(344));if(o=l.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(a(317));Vh(o,l)}else Ks(),!(l.flags&128)&&(l.memoizedState=null),l.flags|=4;return Pn(l),null}return Ti!==null&&(Hd(Ti),Ti=null),l.flags&128?(l.lanes=f,l):(v=v!==null,f=!1,o===null?Qo(l):f=o.memoizedState!==null,v&&!f&&(l.child.flags|=8192,l.mode&1&&(o===null||Kt.current&1?dn===0&&(dn=3):Gd())),l.updateQueue!==null&&(l.flags|=4),Pn(l),null);case 4:return $s(),aa(o,l),o===null&&Je(l.stateNode.containerInfo),Pn(l),null;case 10:return $h(l.type._context),Pn(l),null;case 17:return rn(l.type)&&vn(),Pn(l),null;case 19:if(tt(Kt),M=l.memoizedState,M===null)return Pn(l),null;if(v=(l.flags&128)!==0,A=M.rendering,A===null)if(v)la(M,!1);else{if(dn!==0||o!==null&&o.flags&128)for(o=l.child;o!==null;){if(A=Wl(o),A!==null){for(l.flags|=128,la(M,!1),o=A.updateQueue,o!==null&&(l.updateQueue=o,l.flags|=4),l.subtreeFlags=0,o=f,v=l.child;v!==null;)f=v,M=o,f.flags&=14680066,A=f.alternate,A===null?(f.childLanes=0,f.lanes=M,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=A.childLanes,f.lanes=A.lanes,f.child=A.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=A.memoizedProps,f.memoizedState=A.memoizedState,f.updateQueue=A.updateQueue,f.type=A.type,M=A.dependencies,f.dependencies=M===null?null:{lanes:M.lanes,firstContext:M.firstContext}),v=v.sibling;return vt(Kt,Kt.current&1|2),l.child}o=o.sibling}M.tail!==null&&yn()>Fd&&(l.flags|=128,v=!0,la(M,!1),l.lanes=4194304)}else{if(!v)if(o=Wl(A),o!==null){if(l.flags|=128,v=!0,o=o.updateQueue,o!==null&&(l.updateQueue=o,l.flags|=4),la(M,!0),M.tail===null&&M.tailMode==="hidden"&&!A.alternate&&!Jt)return Pn(l),null}else 2*yn()-M.renderingStartTime>Fd&&f!==1073741824&&(l.flags|=128,v=!0,la(M,!1),l.lanes=4194304);M.isBackwards?(A.sibling=l.child,l.child=A):(o=M.last,o!==null?o.sibling=A:l.child=A,M.last=A)}return M.tail!==null?(l=M.tail,M.rendering=l,M.tail=l.sibling,M.renderingStartTime=yn(),l.sibling=null,o=Kt.current,vt(Kt,v?o&1|2:o&1),l):(Pn(l),null);case 22:case 23:return Vd(),v=l.memoizedState!==null,o!==null&&o.memoizedState!==null!==v&&(l.flags|=8192),v&&l.mode&1?oi&1073741824&&(Pn(l),ct&&l.subtreeFlags&6&&(l.flags|=8192)):Pn(l),null;case 24:return null;case 25:return null}throw Error(a(156,l.tag))}var Gx=c.ReactCurrentOwner,si=!1;function zn(o,l,f,v){l.child=o===null?Pm(l,null,f,v):js(l,o.child,f,v)}function ig(o,l,f,v,M){f=f.render;var A=l.ref;return qs(l,M),v=pd(o,l,f,v,A,M),f=md(),o!==null&&!si?(l.updateQueue=o.updateQueue,l.flags&=-2053,o.lanes&=~M,ar(o,l,M)):(Jt&&f&&rd(l),l.flags|=1,zn(o,l,v,M),l.child)}function rg(o,l,f,v,M){if(o===null){var A=f.type;return typeof A=="function"&&!Wd(A)&&A.defaultProps===void 0&&f.compare===null&&f.defaultProps===void 0?(l.tag=15,l.type=A,sg(o,l,A,v,M)):(o=xc(f.type,null,v,l,l.mode,M),o.ref=l.ref,o.return=l,l.child=o)}if(A=o.child,!(o.lanes&M)){var B=A.memoizedProps;if(f=f.compare,f=f!==null?f:Ol,f(B,v)&&o.ref===l.ref)return ar(o,l,M)}return l.flags|=1,o=Dr(A,v),o.ref=l.ref,o.return=l,l.child=o}function sg(o,l,f,v,M){if(o!==null&&Ol(o.memoizedProps,v)&&o.ref===l.ref)if(si=!1,(o.lanes&M)!==0)o.flags&131072&&(si=!0);else return l.lanes=o.lanes,ar(o,l,M);return Sd(o,l,f,v,M)}function og(o,l,f){var v=l.pendingProps,M=v.children,A=o!==null?o.memoizedState:null;if(v.mode==="hidden")if(!(l.mode&1))l.memoizedState={baseLanes:0,cachePool:null},vt(to,oi),oi|=f;else if(f&1073741824)l.memoizedState={baseLanes:0,cachePool:null},v=A!==null?A.baseLanes:f,vt(to,oi),oi|=v;else return o=A!==null?A.baseLanes|f:f,l.lanes=l.childLanes=1073741824,l.memoizedState={baseLanes:o,cachePool:null},l.updateQueue=null,vt(to,oi),oi|=o,null;else A!==null?(v=A.baseLanes|f,l.memoizedState=null):v=f,vt(to,oi),oi|=v;return zn(o,l,M,f),l.child}function ag(o,l){var f=l.ref;(o===null&&f!==null||o!==null&&o.ref!==f)&&(l.flags|=512,l.flags|=2097152)}function Sd(o,l,f,v,M){var A=rn(f)?At:Le.current;return A=_n(l,A),qs(l,M),f=pd(o,l,f,v,A,M),v=md(),o!==null&&!si?(l.updateQueue=o.updateQueue,l.flags&=-2053,o.lanes&=~M,ar(o,l,M)):(Jt&&v&&rd(l),l.flags|=1,zn(o,l,f,M),l.child)}function lg(o,l,f,v,M){if(rn(f)){var A=!0;Fn(l)}else A=!1;if(qs(l,M),l.stateNode===null)o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),Mm(l,f,v),id(l,f,v,M),v=!0;else if(o===null){var B=l.stateNode,H=l.memoizedProps;B.props=H;var se=B.context,Me=f.contextType;typeof Me=="object"&&Me!==null?Me=hi(Me):(Me=rn(f)?At:Le.current,Me=_n(l,Me));var Ve=f.getDerivedStateFromProps,ft=typeof Ve=="function"||typeof B.getSnapshotBeforeUpdate=="function";ft||typeof B.UNSAFE_componentWillReceiveProps!="function"&&typeof B.componentWillReceiveProps!="function"||(H!==v||se!==Me)&&Em(l,B,v,Me),br=!1;var et=l.memoizedState;B.state=et,Bl(l,v,B,M),se=l.memoizedState,H!==v||et!==se||qt.current||br?(typeof Ve=="function"&&(nd(l,f,Ve,v),se=l.memoizedState),(H=br||Sm(l,f,H,v,et,se,Me))?(ft||typeof B.UNSAFE_componentWillMount!="function"&&typeof B.componentWillMount!="function"||(typeof B.componentWillMount=="function"&&B.componentWillMount(),typeof B.UNSAFE_componentWillMount=="function"&&B.UNSAFE_componentWillMount()),typeof B.componentDidMount=="function"&&(l.flags|=4194308)):(typeof B.componentDidMount=="function"&&(l.flags|=4194308),l.memoizedProps=v,l.memoizedState=se),B.props=v,B.state=se,B.context=Me,v=H):(typeof B.componentDidMount=="function"&&(l.flags|=4194308),v=!1)}else{B=l.stateNode,_m(o,l),H=l.memoizedProps,Me=l.type===l.elementType?H:Ei(l.type,H),B.props=Me,ft=l.pendingProps,et=B.context,se=f.contextType,typeof se=="object"&&se!==null?se=hi(se):(se=rn(f)?At:Le.current,se=_n(l,se));var Gt=f.getDerivedStateFromProps;(Ve=typeof Gt=="function"||typeof B.getSnapshotBeforeUpdate=="function")||typeof B.UNSAFE_componentWillReceiveProps!="function"&&typeof B.componentWillReceiveProps!="function"||(H!==ft||et!==se)&&Em(l,B,v,se),br=!1,et=l.memoizedState,B.state=et,Bl(l,v,B,M);var je=l.memoizedState;H!==ft||et!==je||qt.current||br?(typeof Gt=="function"&&(nd(l,f,Gt,v),je=l.memoizedState),(Me=br||Sm(l,f,Me,v,et,je,se)||!1)?(Ve||typeof B.UNSAFE_componentWillUpdate!="function"&&typeof B.componentWillUpdate!="function"||(typeof B.componentWillUpdate=="function"&&B.componentWillUpdate(v,je,se),typeof B.UNSAFE_componentWillUpdate=="function"&&B.UNSAFE_componentWillUpdate(v,je,se)),typeof B.componentDidUpdate=="function"&&(l.flags|=4),typeof B.getSnapshotBeforeUpdate=="function"&&(l.flags|=1024)):(typeof B.componentDidUpdate!="function"||H===o.memoizedProps&&et===o.memoizedState||(l.flags|=4),typeof B.getSnapshotBeforeUpdate!="function"||H===o.memoizedProps&&et===o.memoizedState||(l.flags|=1024),l.memoizedProps=v,l.memoizedState=je),B.props=v,B.state=je,B.context=se,v=Me):(typeof B.componentDidUpdate!="function"||H===o.memoizedProps&&et===o.memoizedState||(l.flags|=4),typeof B.getSnapshotBeforeUpdate!="function"||H===o.memoizedProps&&et===o.memoizedState||(l.flags|=1024),v=!1)}return Md(o,l,f,v,A,M)}function Md(o,l,f,v,M,A){ag(o,l);var B=(l.flags&128)!==0;if(!v&&!B)return M&&Ar(l,f,!1),ar(o,l,A);v=l.stateNode,Gx.current=l;var H=B&&typeof f.getDerivedStateFromError!="function"?null:v.render();return l.flags|=1,o!==null&&B?(l.child=js(l,o.child,null,A),l.child=js(l,null,H,A)):zn(o,l,H,A),l.memoizedState=v.state,M&&Ar(l,f,!0),l.child}function cg(o){var l=o.stateNode;l.pendingContext?wr(o,l.pendingContext,l.pendingContext!==l.context):l.context&&wr(o,l.context,!1),cd(o,l.containerInfo)}function ug(o,l,f,v,M){return Ks(),ld(M),l.flags|=256,zn(o,l,f,v),l.child}var ec={dehydrated:null,treeContext:null,retryLane:0};function tc(o){return{baseLanes:o,cachePool:null}}function hg(o,l,f){var v=l.pendingProps,M=Kt.current,A=!1,B=(l.flags&128)!==0,H;if((H=B)||(H=o!==null&&o.memoizedState===null?!1:(M&2)!==0),H?(A=!0,l.flags&=-129):(o===null||o.memoizedState!==null)&&(M|=1),vt(Kt,M&1),o===null)return ad(l),o=l.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(l.mode&1?jr(o)?l.lanes=8:l.lanes=1073741824:l.lanes=1,null):(M=v.children,o=v.fallback,A?(v=l.mode,A=l.child,M={mode:"hidden",children:M},!(v&1)&&A!==null?(A.childLanes=0,A.pendingProps=M):A=Sc(M,v,0,null),o=os(o,v,f,null),A.return=l,o.return=l,A.sibling=o,l.child=A,l.child.memoizedState=tc(f),l.memoizedState=ec,o):Ed(l,M));if(M=o.memoizedState,M!==null){if(H=M.dehydrated,H!==null){if(B)return l.flags&256?(l.flags&=-257,nc(o,l,f,Error(a(422)))):l.memoizedState!==null?(l.child=o.child,l.flags|=128,null):(A=v.fallback,M=l.mode,v=Sc({mode:"visible",children:v.children},M,0,null),A=os(A,M,f,null),A.flags|=2,v.return=l,A.return=l,v.sibling=A,l.child=v,l.mode&1&&js(l,o.child,null,f),l.child.memoizedState=tc(f),l.memoizedState=ec,A);if(!(l.mode&1))l=nc(o,l,f,null);else if(jr(H))l=nc(o,l,f,Error(a(419)));else if(v=(f&o.childLanes)!==0,si||v){if(v=an,v!==null){switch(f&-f){case 4:A=2;break;case 16:A=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:A=32;break;case 536870912:A=268435456;break;default:A=0}v=A&(v.suspendedLanes|f)?0:A,v!==0&&v!==M.retryLane&&(M.retryLane=v,gi(o,v,-1))}Gd(),l=nc(o,l,f,Error(a(421)))}else Ni(H)?(l.flags|=128,l.child=o.child,l=nS.bind(null,o),Tl(H,l),l=null):(f=M.treeContext,_e&&(ri=Xs(H),ii=l,Jt=!0,Ti=null,jo=!1,f!==null&&(di[fi++]=rr,di[fi++]=sr,di[fi++]=Qr,rr=f.id,sr=f.overflow,Qr=l)),l=Ed(l,l.pendingProps.children),l.flags|=4096);return l}return A?(v=fg(o,l,v.children,v.fallback,f),A=l.child,M=o.child.memoizedState,A.memoizedState=M===null?tc(f):{baseLanes:M.baseLanes|f,cachePool:null},A.childLanes=o.childLanes&~f,l.memoizedState=ec,v):(f=dg(o,l,v.children,f),l.memoizedState=null,f)}return A?(v=fg(o,l,v.children,v.fallback,f),A=l.child,M=o.child.memoizedState,A.memoizedState=M===null?tc(f):{baseLanes:M.baseLanes|f,cachePool:null},A.childLanes=o.childLanes&~f,l.memoizedState=ec,v):(f=dg(o,l,v.children,f),l.memoizedState=null,f)}function Ed(o,l){return l=Sc({mode:"visible",children:l},o.mode,0,null),l.return=o,o.child=l}function dg(o,l,f,v){var M=o.child;return o=M.sibling,f=Dr(M,{mode:"visible",children:f}),!(l.mode&1)&&(f.lanes=v),f.return=l,f.sibling=null,o!==null&&(v=l.deletions,v===null?(l.deletions=[o],l.flags|=16):v.push(o)),l.child=f}function fg(o,l,f,v,M){var A=l.mode;o=o.child;var B=o.sibling,H={mode:"hidden",children:f};return!(A&1)&&l.child!==o?(f=l.child,f.childLanes=0,f.pendingProps=H,l.deletions=null):(f=Dr(o,H),f.subtreeFlags=o.subtreeFlags&14680064),B!==null?v=Dr(B,v):(v=os(v,A,M,null),v.flags|=2),v.return=l,f.return=l,f.sibling=v,l.child=f,v}function nc(o,l,f,v){return v!==null&&ld(v),js(l,o.child,null,f),o=Ed(l,l.pendingProps.children),o.flags|=2,l.memoizedState=null,o}function pg(o,l,f){o.lanes|=l;var v=o.alternate;v!==null&&(v.lanes|=l),ed(o.return,l,f)}function Td(o,l,f,v,M){var A=o.memoizedState;A===null?o.memoizedState={isBackwards:l,rendering:null,renderingStartTime:0,last:v,tail:f,tailMode:M}:(A.isBackwards=l,A.rendering=null,A.renderingStartTime=0,A.last=v,A.tail=f,A.tailMode=M)}function mg(o,l,f){var v=l.pendingProps,M=v.revealOrder,A=v.tail;if(zn(o,l,v.children,f),v=Kt.current,v&2)v=v&1|2,l.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=l.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&pg(o,f,l);else if(o.tag===19)pg(o,f,l);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===l)break e;for(;o.sibling===null;){if(o.return===null||o.return===l)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}v&=1}if(vt(Kt,v),!(l.mode&1))l.memoizedState=null;else switch(M){case"forwards":for(f=l.child,M=null;f!==null;)o=f.alternate,o!==null&&Wl(o)===null&&(M=f),f=f.sibling;f=M,f===null?(M=l.child,l.child=null):(M=f.sibling,f.sibling=null),Td(l,!1,M,f,A);break;case"backwards":for(f=null,M=l.child,l.child=null;M!==null;){if(o=M.alternate,o!==null&&Wl(o)===null){l.child=M;break}o=M.sibling,M.sibling=f,f=M,M=o}Td(l,!0,f,null,A);break;case"together":Td(l,!1,null,null,void 0);break;default:l.memoizedState=null}return l.child}function ar(o,l,f){if(o!==null&&(l.dependencies=o.dependencies),no|=l.lanes,!(f&l.childLanes))return null;if(o!==null&&l.child!==o.child)throw Error(a(153));if(l.child!==null){for(o=l.child,f=Dr(o,o.pendingProps),l.child=f,f.return=l;o.sibling!==null;)o=o.sibling,f=f.sibling=Dr(o,o.pendingProps),f.return=l;f.sibling=null}return l.child}function Wx(o,l,f){switch(l.tag){case 3:cg(l),Ks();break;case 5:Im(l);break;case 1:rn(l.type)&&Fn(l);break;case 4:cd(l,l.stateNode.containerInfo);break;case 10:gm(l,l.type._context,l.memoizedProps.value);break;case 13:var v=l.memoizedState;if(v!==null)return v.dehydrated!==null?(vt(Kt,Kt.current&1),l.flags|=128,null):f&l.child.childLanes?hg(o,l,f):(vt(Kt,Kt.current&1),o=ar(o,l,f),o!==null?o.sibling:null);vt(Kt,Kt.current&1);break;case 19:if(v=(f&l.childLanes)!==0,o.flags&128){if(v)return mg(o,l,f);l.flags|=128}var M=l.memoizedState;if(M!==null&&(M.rendering=null,M.tail=null,M.lastEffect=null),vt(Kt,Kt.current),v)break;return null;case 22:case 23:return l.lanes=0,og(o,l,f)}return ar(o,l,f)}function Xx(o,l){switch(sd(l),l.tag){case 1:return rn(l.type)&&vn(),o=l.flags,o&65536?(l.flags=o&-65537|128,l):null;case 3:return $s(),tt(qt),tt(Le),dd(),o=l.flags,o&65536&&!(o&128)?(l.flags=o&-65537|128,l):null;case 5:return ud(l),null;case 13:if(tt(Kt),o=l.memoizedState,o!==null&&o.dehydrated!==null){if(l.alternate===null)throw Error(a(340));Ks()}return o=l.flags,o&65536?(l.flags=o&-65537|128,l):null;case 19:return tt(Kt),null;case 4:return $s(),null;case 10:return $h(l.type._context),null;case 22:case 23:return Vd(),null;case 24:return null;default:return null}}var ic=!1,ts=!1,Yx=typeof WeakSet=="function"?WeakSet:Set,Pe=null;function rc(o,l){var f=o.ref;if(f!==null)if(typeof f=="function")try{f(null)}catch(v){Jn(o,l,v)}else f.current=null}function wd(o,l,f){try{f()}catch(v){Jn(o,l,v)}}var gg=!1;function qx(o,l){for(Z(o.containerInfo),Pe=l;Pe!==null;)if(o=Pe,l=o.child,(o.subtreeFlags&1028)!==0&&l!==null)l.return=o,Pe=l;else for(;Pe!==null;){o=Pe;try{var f=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var v=f.memoizedProps,M=f.memoizedState,A=o.stateNode,B=A.getSnapshotBeforeUpdate(o.elementType===o.type?v:Ei(o.type,v),M);A.__reactInternalSnapshotBeforeUpdate=B}break;case 3:ct&&de(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(a(163))}}catch(H){Jn(o,o.return,H)}if(l=o.sibling,l!==null){l.return=o.return,Pe=l;break}Pe=o.return}return f=gg,gg=!1,f}function ns(o,l,f){var v=l.updateQueue;if(v=v!==null?v.lastEffect:null,v!==null){var M=v=v.next;do{if((M.tag&o)===o){var A=M.destroy;M.destroy=void 0,A!==void 0&&wd(l,f,A)}M=M.next}while(M!==v)}}function ca(o,l){if(l=l.updateQueue,l=l!==null?l.lastEffect:null,l!==null){var f=l=l.next;do{if((f.tag&o)===o){var v=f.create;f.destroy=v()}f=f.next}while(f!==l)}}function Ad(o){var l=o.ref;if(l!==null){var f=o.stateNode;switch(o.tag){case 5:o=$(f);break;default:o=f}typeof l=="function"?l(o):l.current=o}}function _g(o,l,f){if(Bi&&typeof Bi.onCommitFiberUnmount=="function")try{Bi.onCommitFiberUnmount(Dl,l)}catch{}switch(l.tag){case 0:case 11:case 14:case 15:if(o=l.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var v=o=o.next;do{var M=v,A=M.destroy;M=M.tag,A!==void 0&&(M&2||M&4)&&wd(l,f,A),v=v.next}while(v!==o)}break;case 1:if(rc(l,f),o=l.stateNode,typeof o.componentWillUnmount=="function")try{o.props=l.memoizedProps,o.state=l.memoizedState,o.componentWillUnmount()}catch(B){Jn(l,f,B)}break;case 5:rc(l,f);break;case 4:ct?Eg(o,l,f):he&&he&&(l=l.stateNode.containerInfo,f=Ie(l),hn(l,f))}}function vg(o,l,f){for(var v=l;;)if(_g(o,v,f),v.child===null||ct&&v.tag===4){if(v===l)break;for(;v.sibling===null;){if(v.return===null||v.return===l)return;v=v.return}v.sibling.return=v.return,v=v.sibling}else v.child.return=v,v=v.child}function yg(o){var l=o.alternate;l!==null&&(o.alternate=null,yg(l)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(l=o.stateNode,l!==null&&ze(l)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function xg(o){return o.tag===5||o.tag===3||o.tag===4}function Sg(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||xg(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Mg(o){if(ct){e:{for(var l=o.return;l!==null;){if(xg(l))break e;l=l.return}throw Error(a(160))}var f=l;switch(f.tag){case 5:l=f.stateNode,f.flags&32&&(ht(l),f.flags&=-33),f=Sg(o),Cd(o,f,l);break;case 3:case 4:l=f.stateNode.containerInfo,f=Sg(o),bd(o,f,l);break;default:throw Error(a(161))}}}function bd(o,l,f){var v=o.tag;if(v===5||v===6)o=o.stateNode,l?at(f,o,l):Fe(f,o);else if(v!==4&&(o=o.child,o!==null))for(bd(o,l,f),o=o.sibling;o!==null;)bd(o,l,f),o=o.sibling}function Cd(o,l,f){var v=o.tag;if(v===5||v===6)o=o.stateNode,l?it(f,o,l):be(f,o);else if(v!==4&&(o=o.child,o!==null))for(Cd(o,l,f),o=o.sibling;o!==null;)Cd(o,l,f),o=o.sibling}function Eg(o,l,f){for(var v=l,M=!1,A,B;;){if(!M){M=v.return;e:for(;;){if(M===null)throw Error(a(160));switch(A=M.stateNode,M.tag){case 5:B=!1;break e;case 3:A=A.containerInfo,B=!0;break e;case 4:A=A.containerInfo,B=!0;break e}M=M.return}M=!0}if(v.tag===5||v.tag===6)vg(o,v,f),B?bt(A,v.stateNode):He(A,v.stateNode);else if(v.tag===18)B?ee(A,v.stateNode):G(A,v.stateNode);else if(v.tag===4){if(v.child!==null){A=v.stateNode.containerInfo,B=!0,v.child.return=v,v=v.child;continue}}else if(_g(o,v,f),v.child!==null){v.child.return=v,v=v.child;continue}if(v===l)break;for(;v.sibling===null;){if(v.return===null||v.return===l)return;v=v.return,v.tag===4&&(M=!1)}v.sibling.return=v.return,v=v.sibling}}function Rd(o,l){if(ct){switch(l.tag){case 0:case 11:case 14:case 15:ns(3,l,l.return),ca(3,l),ns(5,l,l.return);return;case 1:return;case 5:var f=l.stateNode;if(f!=null){var v=l.memoizedProps;o=o!==null?o.memoizedProps:v;var M=l.type,A=l.updateQueue;l.updateQueue=null,A!==null&&ke(f,A,M,o,v,l)}return;case 6:if(l.stateNode===null)throw Error(a(162));f=l.memoizedProps,wt(l.stateNode,o!==null?o.memoizedProps:f,f);return;case 3:_e&&o!==null&&o.memoizedState.isDehydrated&&Cl(l.stateNode.containerInfo);return;case 12:return;case 13:sc(l);return;case 19:sc(l);return;case 17:return}throw Error(a(163))}switch(l.tag){case 0:case 11:case 14:case 15:ns(3,l,l.return),ca(3,l),ns(5,l,l.return);return;case 12:return;case 13:sc(l);return;case 19:sc(l);return;case 3:_e&&o!==null&&o.memoizedState.isDehydrated&&Cl(l.stateNode.containerInfo);break;case 22:case 23:return}e:if(he){switch(l.tag){case 1:case 5:case 6:break e;case 3:case 4:l=l.stateNode,hn(l.containerInfo,l.pendingChildren);break e}throw Error(a(163))}}function sc(o){var l=o.updateQueue;if(l!==null){o.updateQueue=null;var f=o.stateNode;f===null&&(f=o.stateNode=new Yx),l.forEach(function(v){var M=iS.bind(null,o,v);f.has(v)||(f.add(v),v.then(M,M))})}}function Zx(o,l){for(Pe=l;Pe!==null;){l=Pe;var f=l.deletions;if(f!==null)for(var v=0;v<f.length;v++){var M=f[v];try{var A=o;ct?Eg(A,M,l):vg(A,M,l);var B=M.alternate;B!==null&&(B.return=null),M.return=null}catch(Ke){Jn(M,l,Ke)}}if(f=l.child,l.subtreeFlags&12854&&f!==null)f.return=l,Pe=f;else for(;Pe!==null;){l=Pe;try{var H=l.flags;if(H&32&&ct&&ht(l.stateNode),H&512){var se=l.alternate;if(se!==null){var Me=se.ref;Me!==null&&(typeof Me=="function"?Me(null):Me.current=null)}}if(H&8192)switch(l.tag){case 13:if(l.memoizedState!==null){var Ve=l.alternate;(Ve===null||Ve.memoizedState===null)&&(Nd=yn())}break;case 22:var ft=l.memoizedState!==null,et=l.alternate,Gt=et!==null&&et.memoizedState!==null;if(f=l,ct){e:if(v=f,M=ft,A=null,ct)for(var je=v;;){if(je.tag===5){if(A===null){A=je;var In=je.stateNode;M?kt(In):Ce(je.stateNode,je.memoizedProps)}}else if(je.tag===6){if(A===null){var vi=je.stateNode;M?V(vi):oe(vi,je.memoizedProps)}}else if((je.tag!==22&&je.tag!==23||je.memoizedState===null||je===v)&&je.child!==null){je.child.return=je,je=je.child;continue}if(je===v)break;for(;je.sibling===null;){if(je.return===null||je.return===v)break e;A===je&&(A=null),je=je.return}A===je&&(A=null),je.sibling.return=je.return,je=je.sibling}}if(ft&&!Gt&&f.mode&1){Pe=f;for(var j=f.child;j!==null;){for(f=Pe=j;Pe!==null;){v=Pe;var W=v.child;switch(v.tag){case 0:case 11:case 14:case 15:ns(4,v,v.return);break;case 1:rc(v,v.return);var ie=v.stateNode;if(typeof ie.componentWillUnmount=="function"){var Ue=v.return;try{ie.props=v.memoizedProps,ie.state=v.memoizedState,ie.componentWillUnmount()}catch(Ke){Jn(v,Ue,Ke)}}break;case 5:rc(v,v.return);break;case 22:if(v.memoizedState!==null){Ag(f);continue}}W!==null?(W.return=v,Pe=W):Ag(f)}j=j.sibling}}}switch(H&4102){case 2:Mg(l),l.flags&=-3;break;case 6:Mg(l),l.flags&=-3,Rd(l.alternate,l);break;case 4096:l.flags&=-4097;break;case 4100:l.flags&=-4097,Rd(l.alternate,l);break;case 4:Rd(l.alternate,l)}}catch(Ke){Jn(l,l.return,Ke)}if(f=l.sibling,f!==null){f.return=l.return,Pe=f;break}Pe=l.return}}}function Jx(o,l,f){Pe=o,Tg(o)}function Tg(o,l,f){for(var v=(o.mode&1)!==0;Pe!==null;){var M=Pe,A=M.child;if(M.tag===22&&v){var B=M.memoizedState!==null||ic;if(!B){var H=M.alternate,se=H!==null&&H.memoizedState!==null||ts;H=ic;var Me=ts;if(ic=B,(ts=se)&&!Me)for(Pe=M;Pe!==null;)B=Pe,se=B.child,B.tag===22&&B.memoizedState!==null?bg(M):se!==null?(se.return=B,Pe=se):bg(M);for(;A!==null;)Pe=A,Tg(A),A=A.sibling;Pe=M,ic=H,ts=Me}wg(o)}else M.subtreeFlags&8772&&A!==null?(A.return=M,Pe=A):wg(o)}}function wg(o){for(;Pe!==null;){var l=Pe;if(l.flags&8772){var f=l.alternate;try{if(l.flags&8772)switch(l.tag){case 0:case 11:case 15:ts||ca(5,l);break;case 1:var v=l.stateNode;if(l.flags&4&&!ts)if(f===null)v.componentDidMount();else{var M=l.elementType===l.type?f.memoizedProps:Ei(l.type,f.memoizedProps);v.componentDidUpdate(M,f.memoizedState,v.__reactInternalSnapshotBeforeUpdate)}var A=l.updateQueue;A!==null&&ym(l,A,v);break;case 3:var B=l.updateQueue;if(B!==null){if(f=null,l.child!==null)switch(l.child.tag){case 5:f=$(l.child.stateNode);break;case 1:f=l.child.stateNode}ym(l,B,f)}break;case 5:var H=l.stateNode;f===null&&l.flags&4&&Se(H,l.type,l.memoizedProps,l);break;case 6:break;case 4:break;case 12:break;case 13:if(_e&&l.memoizedState===null){var se=l.alternate;if(se!==null){var Me=se.memoizedState;if(Me!==null){var Ve=Me.dehydrated;Ve!==null&&D(Ve)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(a(163))}ts||l.flags&512&&Ad(l)}catch(ft){Jn(l,l.return,ft)}}if(l===o){Pe=null;break}if(f=l.sibling,f!==null){f.return=l.return,Pe=f;break}Pe=l.return}}function Ag(o){for(;Pe!==null;){var l=Pe;if(l===o){Pe=null;break}var f=l.sibling;if(f!==null){f.return=l.return,Pe=f;break}Pe=l.return}}function bg(o){for(;Pe!==null;){var l=Pe;try{switch(l.tag){case 0:case 11:case 15:var f=l.return;try{ca(4,l)}catch(se){Jn(l,f,se)}break;case 1:var v=l.stateNode;if(typeof v.componentDidMount=="function"){var M=l.return;try{v.componentDidMount()}catch(se){Jn(l,M,se)}}var A=l.return;try{Ad(l)}catch(se){Jn(l,A,se)}break;case 5:var B=l.return;try{Ad(l)}catch(se){Jn(l,B,se)}}}catch(se){Jn(l,l.return,se)}if(l===o){Pe=null;break}var H=l.sibling;if(H!==null){H.return=l.return,Pe=H;break}Pe=l.return}}var oc=0,ac=1,lc=2,cc=3,uc=4;if(typeof Symbol=="function"&&Symbol.for){var ua=Symbol.for;oc=ua("selector.component"),ac=ua("selector.has_pseudo_class"),lc=ua("selector.role"),cc=ua("selector.test_id"),uc=ua("selector.text")}function Pd(o){var l=k(o);if(l!=null){if(typeof l.memoizedProps["data-testname"]!="string")throw Error(a(364));return l}if(o=N(o),o===null)throw Error(a(362));return o.stateNode.current}function Id(o,l){switch(l.$$typeof){case oc:if(o.type===l.value)return!0;break;case ac:e:{l=l.value,o=[o,0];for(var f=0;f<o.length;){var v=o[f++],M=o[f++],A=l[M];if(v.tag!==5||!ce(v)){for(;A!=null&&Id(v,A);)M++,A=l[M];if(M===l.length){l=!0;break e}else for(v=v.child;v!==null;)o.push(v,M),v=v.sibling}}l=!1}return l;case lc:if(o.tag===5&&me(o.stateNode,l.value))return!0;break;case uc:if((o.tag===5||o.tag===6)&&(o=K(o),o!==null&&0<=o.indexOf(l.value)))return!0;break;case cc:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===l.value.toLowerCase()))return!0;break;default:throw Error(a(365))}return!1}function Ld(o){switch(o.$$typeof){case oc:return"<"+(L(o.value)||"Unknown")+">";case ac:return":has("+(Ld(o)||"")+")";case lc:return'[role="'+o.value+'"]';case uc:return'"'+o.value+'"';case cc:return'[data-testname="'+o.value+'"]';default:throw Error(a(365))}}function Cg(o,l){var f=[];o=[o,0];for(var v=0;v<o.length;){var M=o[v++],A=o[v++],B=l[A];if(M.tag!==5||!ce(M)){for(;B!=null&&Id(M,B);)A++,B=l[A];if(A===l.length)f.push(M);else for(M=M.child;M!==null;)o.push(M,A),M=M.sibling}}return f}function Dd(o,l){if(!De)throw Error(a(363));o=Pd(o),o=Cg(o,l),l=[],o=Array.from(o);for(var f=0;f<o.length;){var v=o[f++];if(v.tag===5)ce(v)||l.push(v.stateNode);else for(v=v.child;v!==null;)o.push(v),v=v.sibling}return l}var Kx=Math.ceil,hc=c.ReactCurrentDispatcher,Ud=c.ReactCurrentOwner,sn=c.ReactCurrentBatchConfig,Tt=0,an=null,ln=null,Tn=0,oi=0,to=Ct(0),dn=0,ha=null,no=0,dc=0,Od=0,da=null,qn=null,Nd=0,Fd=1/0;function io(){Fd=yn()+500}var fc=!1,zd=null,Rr=null,pc=!1,Pr=null,mc=0,fa=0,Bd=null,gc=-1,_c=0;function Bn(){return Tt&6?yn():gc!==-1?gc:gc=yn()}function Ir(o){return o.mode&1?Tt&2&&Tn!==0?Tn&-Tn:Lx.transition!==null?(_c===0&&(o=Pl,Pl<<=1,!(Pl&4194240)&&(Pl=64),_c=o),_c):(o=Ut,o!==0?o:ye()):1}function gi(o,l,f){if(50<fa)throw fa=0,Bd=null,Error(a(185));var v=vc(o,l);return v===null?null:(Ko(v,l,f),(!(Tt&2)||v!==an)&&(v===an&&(!(Tt&2)&&(dc|=l),dn===4&&Lr(v,Tn)),Zn(v,f),l===1&&Tt===0&&!(o.mode&1)&&(io(),Ul&&Hi())),v)}function vc(o,l){o.lanes|=l;var f=o.alternate;for(f!==null&&(f.lanes|=l),f=o,o=o.return;o!==null;)o.childLanes|=l,f=o.alternate,f!==null&&(f.childLanes|=l),f=o,o=o.return;return f.tag===3?f.stateNode:null}function Zn(o,l){var f=o.callbackNode;Ex(o,l);var v=Ll(o,o===an?Tn:0);if(v===0)f!==null&&pm(f),o.callbackNode=null,o.callbackPriority=0;else if(l=v&-v,o.callbackPriority!==l){if(f!=null&&pm(f),l===1)o.tag===0?Ix(Pg.bind(null,o)):mm(Pg.bind(null,o)),Te?nt(function(){Tt===0&&Hi()}):qh(Zh,Hi),f=null;else{switch(fm(v)){case 1:f=Zh;break;case 4:f=bx;break;case 16:f=Jh;break;case 536870912:f=Cx;break;default:f=Jh}f=Bg(f,Rg.bind(null,o))}o.callbackPriority=l,o.callbackNode=f}}function Rg(o,l){if(gc=-1,_c=0,Tt&6)throw Error(a(327));var f=o.callbackNode;if(ss()&&o.callbackNode!==f)return null;var v=Ll(o,o===an?Tn:0);if(v===0)return null;if(v&30||v&o.expiredLanes||l)l=yc(o,v);else{l=v;var M=Tt;Tt|=2;var A=Dg();(an!==o||Tn!==l)&&(io(),is(o,l));do try{$x();break}catch(H){Lg(o,H)}while(!0);Qh(),hc.current=A,Tt=M,ln!==null?l=0:(an=null,Tn=0,l=dn)}if(l!==0){if(l===2&&(M=Wh(o),M!==0&&(v=M,l=kd(o,M))),l===1)throw f=ha,is(o,0),Lr(o,v),Zn(o,yn()),f;if(l===6)Lr(o,v);else{if(M=o.current.alternate,!(v&30)&&!jx(M)&&(l=yc(o,v),l===2&&(A=Wh(o),A!==0&&(v=A,l=kd(o,A))),l===1))throw f=ha,is(o,0),Lr(o,v),Zn(o,yn()),f;switch(o.finishedWork=M,o.finishedLanes=v,l){case 0:case 1:throw Error(a(345));case 2:rs(o,qn);break;case 3:if(Lr(o,v),(v&130023424)===v&&(l=Nd+500-yn(),10<l)){if(Ll(o,0)!==0)break;if(M=o.suspendedLanes,(M&v)!==v){Bn(),o.pingedLanes|=o.suspendedLanes&M;break}o.timeoutHandle=ve(rs.bind(null,o,qn),l);break}rs(o,qn);break;case 4:if(Lr(o,v),(v&4194240)===v)break;for(l=o.eventTimes,M=-1;0<v;){var B=31-Zt(v);A=1<<B,B=l[B],B>M&&(M=B),v&=~A}if(v=M,v=yn()-v,v=(120>v?120:480>v?480:1080>v?1080:1920>v?1920:3e3>v?3e3:4320>v?4320:1960*Kx(v/1960))-v,10<v){o.timeoutHandle=ve(rs.bind(null,o,qn),v);break}rs(o,qn);break;case 5:rs(o,qn);break;default:throw Error(a(329))}}}return Zn(o,yn()),o.callbackNode===f?Rg.bind(null,o):null}function kd(o,l){var f=da;return o.current.memoizedState.isDehydrated&&(is(o,l).flags|=256),o=yc(o,l),o!==2&&(l=qn,qn=f,l!==null&&Hd(l)),o}function Hd(o){qn===null?qn=o:qn.push.apply(qn,o)}function jx(o){for(var l=o;;){if(l.flags&16384){var f=l.updateQueue;if(f!==null&&(f=f.stores,f!==null))for(var v=0;v<f.length;v++){var M=f[v],A=M.getSnapshot;M=M.value;try{if(!ki(A(),M))return!1}catch{return!1}}}if(f=l.child,l.subtreeFlags&16384&&f!==null)f.return=l,l=f;else{if(l===o)break;for(;l.sibling===null;){if(l.return===null||l.return===o)return!0;l=l.return}l.sibling.return=l.return,l=l.sibling}}return!0}function Lr(o,l){for(l&=~Od,l&=~dc,o.suspendedLanes|=l,o.pingedLanes&=~l,o=o.expirationTimes;0<l;){var f=31-Zt(l),v=1<<f;o[f]=-1,l&=~v}}function Pg(o){if(Tt&6)throw Error(a(327));ss();var l=Ll(o,0);if(!(l&1))return Zn(o,yn()),null;var f=yc(o,l);if(o.tag!==0&&f===2){var v=Wh(o);v!==0&&(l=v,f=kd(o,v))}if(f===1)throw f=ha,is(o,0),Lr(o,l),Zn(o,yn()),f;if(f===6)throw Error(a(345));return o.finishedWork=o.current.alternate,o.finishedLanes=l,rs(o,qn),Zn(o,yn()),null}function Ig(o){Pr!==null&&Pr.tag===0&&!(Tt&6)&&ss();var l=Tt;Tt|=1;var f=sn.transition,v=Ut;try{if(sn.transition=null,Ut=1,o)return o()}finally{Ut=v,sn.transition=f,Tt=l,!(Tt&6)&&Hi()}}function Vd(){oi=to.current,tt(to)}function is(o,l){o.finishedWork=null,o.finishedLanes=0;var f=o.timeoutHandle;if(f!==st&&(o.timeoutHandle=st,Qe(f)),ln!==null)for(f=ln.return;f!==null;){var v=f;switch(sd(v),v.tag){case 1:v=v.type.childContextTypes,v!=null&&vn();break;case 3:$s(),tt(qt),tt(Le),dd();break;case 5:ud(v);break;case 4:$s();break;case 13:tt(Kt);break;case 19:tt(Kt);break;case 10:$h(v.type._context);break;case 22:case 23:Vd()}f=f.return}if(an=o,ln=o=Dr(o.current,null),Tn=oi=l,dn=0,ha=null,Od=dc=no=0,qn=da=null,Vi!==null){for(l=0;l<Vi.length;l++)if(f=Vi[l],v=f.interleaved,v!==null){f.interleaved=null;var M=v.next,A=f.pending;if(A!==null){var B=A.next;A.next=M,v.next=B}f.pending=v}Vi=null}return o}function Lg(o,l){do{var f=ln;try{if(Qh(),Xl.current=jl,Yl){for(var v=en.memoizedState;v!==null;){var M=v.queue;M!==null&&(M.pending=null),v=v.next}Yl=!1}if(eo=0,xn=Cn=en=null,na=!1,ia=0,Ud.current=null,f===null||f.return===null){dn=1,ha=l,ln=null;break}e:{var A=o,B=f.return,H=f,se=l;if(l=Tn,H.flags|=32768,se!==null&&typeof se=="object"&&typeof se.then=="function"){var Me=se,Ve=H,ft=Ve.tag;if(!(Ve.mode&1)&&(ft===0||ft===11||ft===15)){var et=Ve.alternate;et?(Ve.updateQueue=et.updateQueue,Ve.memoizedState=et.memoizedState,Ve.lanes=et.lanes):(Ve.updateQueue=null,Ve.memoizedState=null)}var Gt=$m(B);if(Gt!==null){Gt.flags&=-257,eg(Gt,B,H,A,l),Gt.mode&1&&Qm(A,Me,l),l=Gt,se=Me;var je=l.updateQueue;if(je===null){var In=new Set;In.add(se),l.updateQueue=In}else je.add(se);break e}else{if(!(l&1)){Qm(A,Me,l),Gd();break e}se=Error(a(426))}}else if(Jt&&H.mode&1){var vi=$m(B);if(vi!==null){!(vi.flags&65536)&&(vi.flags|=256),eg(vi,B,H,A,l),ld(se);break e}}A=se,dn!==4&&(dn=2),da===null?da=[A]:da.push(A),se=yd(se,H),H=B;do{switch(H.tag){case 3:H.flags|=65536,l&=-l,H.lanes|=l;var j=Km(H,se,l);vm(H,j);break e;case 1:A=se;var W=H.type,ie=H.stateNode;if(!(H.flags&128)&&(typeof W.getDerivedStateFromError=="function"||ie!==null&&typeof ie.componentDidCatch=="function"&&(Rr===null||!Rr.has(ie)))){H.flags|=65536,l&=-l,H.lanes|=l;var Ue=jm(H,A,l);vm(H,Ue);break e}}H=H.return}while(H!==null)}Og(f)}catch(Ke){l=Ke,ln===f&&f!==null&&(ln=f=f.return);continue}break}while(!0)}function Dg(){var o=hc.current;return hc.current=jl,o===null?jl:o}function Gd(){(dn===0||dn===3||dn===2)&&(dn=4),an===null||!(no&268435455)&&!(dc&268435455)||Lr(an,Tn)}function yc(o,l){var f=Tt;Tt|=2;var v=Dg();an===o&&Tn===l||is(o,l);do try{Qx();break}catch(M){Lg(o,M)}while(!0);if(Qh(),Tt=f,hc.current=v,ln!==null)throw Error(a(261));return an=null,Tn=0,dn}function Qx(){for(;ln!==null;)Ug(ln)}function $x(){for(;ln!==null&&!wx();)Ug(ln)}function Ug(o){var l=zg(o.alternate,o,oi);o.memoizedProps=o.pendingProps,l===null?Og(o):ln=l,Ud.current=null}function Og(o){var l=o;do{var f=l.alternate;if(o=l.return,l.flags&32768){if(f=Xx(f,l),f!==null){f.flags&=32767,ln=f;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{dn=6,ln=null;return}}else if(f=Vx(f,l,oi),f!==null){ln=f;return}if(l=l.sibling,l!==null){ln=l;return}ln=l=o}while(l!==null);dn===0&&(dn=5)}function rs(o,l){var f=Ut,v=sn.transition;try{sn.transition=null,Ut=1,eS(o,l,f)}finally{sn.transition=v,Ut=f}return null}function eS(o,l,f){do ss();while(Pr!==null);if(Tt&6)throw Error(a(327));var v=o.finishedWork,M=o.finishedLanes;if(v===null)return null;if(o.finishedWork=null,o.finishedLanes=0,v===o.current)throw Error(a(177));o.callbackNode=null,o.callbackPriority=0;var A=v.lanes|v.childLanes;if(Tx(o,A),o===an&&(ln=an=null,Tn=0),!(v.subtreeFlags&2064)&&!(v.flags&2064)||pc||(pc=!0,Bg(Jh,function(){return ss(),null})),A=(v.flags&15990)!==0,v.subtreeFlags&15990||A){A=sn.transition,sn.transition=null;var B=Ut;Ut=1;var H=Tt;Tt|=4,Ud.current=null,qx(o,v),Zx(o,v),J(o.containerInfo),o.current=v,Jx(v),Ax(),Tt=H,Ut=B,sn.transition=A}else o.current=v;if(pc&&(pc=!1,Pr=o,mc=M),A=o.pendingLanes,A===0&&(Rr=null),Rx(v.stateNode),Zn(o,yn()),l!==null)for(f=o.onRecoverableError,v=0;v<l.length;v++)f(l[v]);if(fc)throw fc=!1,o=zd,zd=null,o;return mc&1&&o.tag!==0&&ss(),A=o.pendingLanes,A&1?o===Bd?fa++:(fa=0,Bd=o):fa=0,Hi(),null}function ss(){if(Pr!==null){var o=fm(mc),l=sn.transition,f=Ut;try{if(sn.transition=null,Ut=16>o?16:o,Pr===null)var v=!1;else{if(o=Pr,Pr=null,mc=0,Tt&6)throw Error(a(331));var M=Tt;for(Tt|=4,Pe=o.current;Pe!==null;){var A=Pe,B=A.child;if(Pe.flags&16){var H=A.deletions;if(H!==null){for(var se=0;se<H.length;se++){var Me=H[se];for(Pe=Me;Pe!==null;){var Ve=Pe;switch(Ve.tag){case 0:case 11:case 15:ns(8,Ve,A)}var ft=Ve.child;if(ft!==null)ft.return=Ve,Pe=ft;else for(;Pe!==null;){Ve=Pe;var et=Ve.sibling,Gt=Ve.return;if(yg(Ve),Ve===Me){Pe=null;break}if(et!==null){et.return=Gt,Pe=et;break}Pe=Gt}}}var je=A.alternate;if(je!==null){var In=je.child;if(In!==null){je.child=null;do{var vi=In.sibling;In.sibling=null,In=vi}while(In!==null)}}Pe=A}}if(A.subtreeFlags&2064&&B!==null)B.return=A,Pe=B;else e:for(;Pe!==null;){if(A=Pe,A.flags&2048)switch(A.tag){case 0:case 11:case 15:ns(9,A,A.return)}var j=A.sibling;if(j!==null){j.return=A.return,Pe=j;break e}Pe=A.return}}var W=o.current;for(Pe=W;Pe!==null;){B=Pe;var ie=B.child;if(B.subtreeFlags&2064&&ie!==null)ie.return=B,Pe=ie;else e:for(B=W;Pe!==null;){if(H=Pe,H.flags&2048)try{switch(H.tag){case 0:case 11:case 15:ca(9,H)}}catch(Ke){Jn(H,H.return,Ke)}if(H===B){Pe=null;break e}var Ue=H.sibling;if(Ue!==null){Ue.return=H.return,Pe=Ue;break e}Pe=H.return}}if(Tt=M,Hi(),Bi&&typeof Bi.onPostCommitFiberRoot=="function")try{Bi.onPostCommitFiberRoot(Dl,o)}catch{}v=!0}return v}finally{Ut=f,sn.transition=l}}return!1}function Ng(o,l,f){l=yd(f,l),l=Km(o,l,1),Cr(o,l),l=Bn(),o=vc(o,1),o!==null&&(Ko(o,1,l),Zn(o,l))}function Jn(o,l,f){if(o.tag===3)Ng(o,o,f);else for(;l!==null;){if(l.tag===3){Ng(l,o,f);break}else if(l.tag===1){var v=l.stateNode;if(typeof l.type.getDerivedStateFromError=="function"||typeof v.componentDidCatch=="function"&&(Rr===null||!Rr.has(v))){o=yd(f,o),o=jm(l,o,1),Cr(l,o),o=Bn(),l=vc(l,1),l!==null&&(Ko(l,1,o),Zn(l,o));break}}l=l.return}}function tS(o,l,f){var v=o.pingCache;v!==null&&v.delete(l),l=Bn(),o.pingedLanes|=o.suspendedLanes&f,an===o&&(Tn&f)===f&&(dn===4||dn===3&&(Tn&130023424)===Tn&&500>yn()-Nd?is(o,0):Od|=f),Zn(o,l)}function Fg(o,l){l===0&&(o.mode&1?(l=Il,Il<<=1,!(Il&130023424)&&(Il=4194304)):l=1);var f=Bn();o=vc(o,l),o!==null&&(Ko(o,l,f),Zn(o,f))}function nS(o){var l=o.memoizedState,f=0;l!==null&&(f=l.retryLane),Fg(o,f)}function iS(o,l){var f=0;switch(o.tag){case 13:var v=o.stateNode,M=o.memoizedState;M!==null&&(f=M.retryLane);break;case 19:v=o.stateNode;break;default:throw Error(a(314))}v!==null&&v.delete(l),Fg(o,f)}var zg;zg=function(o,l,f){if(o!==null)if(o.memoizedProps!==l.pendingProps||qt.current)si=!0;else{if(!(o.lanes&f)&&!(l.flags&128))return si=!1,Wx(o,l,f);si=!!(o.flags&131072)}else si=!1,Jt&&l.flags&1048576&&Tm(l,Vl,l.index);switch(l.lanes=0,l.tag){case 2:var v=l.type;o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),o=l.pendingProps;var M=_n(l,Le.current);qs(l,f),M=pd(null,l,v,o,M,f);var A=md();return l.flags|=1,typeof M=="object"&&M!==null&&typeof M.render=="function"&&M.$$typeof===void 0?(l.tag=1,l.memoizedState=null,l.updateQueue=null,rn(v)?(A=!0,Fn(l)):A=!1,l.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,td(l),M.updater=kl,l.stateNode=M,M._reactInternals=l,id(l,v,o,f),l=Md(null,l,v,!0,A,f)):(l.tag=0,Jt&&A&&rd(l),zn(null,l,M,f),l=l.child),l;case 16:v=l.elementType;e:{switch(o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),o=l.pendingProps,M=v._init,v=M(v._payload),l.type=v,M=l.tag=sS(v),o=Ei(v,o),M){case 0:l=Sd(null,l,v,o,f);break e;case 1:l=lg(null,l,v,o,f);break e;case 11:l=ig(null,l,v,o,f);break e;case 14:l=rg(null,l,v,Ei(v.type,o),f);break e}throw Error(a(306,v,""))}return l;case 0:return v=l.type,M=l.pendingProps,M=l.elementType===v?M:Ei(v,M),Sd(o,l,v,M,f);case 1:return v=l.type,M=l.pendingProps,M=l.elementType===v?M:Ei(v,M),lg(o,l,v,M,f);case 3:e:{if(cg(l),o===null)throw Error(a(387));v=l.pendingProps,A=l.memoizedState,M=A.element,_m(o,l),Bl(l,v,null,f);var B=l.memoizedState;if(v=B.element,_e&&A.isDehydrated)if(A={element:v,isDehydrated:!1,cache:B.cache,transitions:B.transitions},l.updateQueue.baseState=A,l.memoizedState=A,l.flags&256){M=Error(a(423)),l=ug(o,l,v,f,M);break e}else if(v!==M){M=Error(a(424)),l=ug(o,l,v,f,M);break e}else for(_e&&(ri=wl(l.stateNode.containerInfo),ii=l,Jt=!0,Ti=null,jo=!1),f=Pm(l,null,v,f),l.child=f;f;)f.flags=f.flags&-3|4096,f=f.sibling;else{if(Ks(),v===M){l=ar(o,l,f);break e}zn(o,l,v,f)}l=l.child}return l;case 5:return Im(l),o===null&&ad(l),v=l.type,M=l.pendingProps,A=o!==null?o.memoizedProps:null,B=M.children,ge(v,M)?B=null:A!==null&&ge(v,A)&&(l.flags|=32),ag(o,l),zn(o,l,B,f),l.child;case 6:return o===null&&ad(l),null;case 13:return hg(o,l,f);case 4:return cd(l,l.stateNode.containerInfo),v=l.pendingProps,o===null?l.child=js(l,null,v,f):zn(o,l,v,f),l.child;case 11:return v=l.type,M=l.pendingProps,M=l.elementType===v?M:Ei(v,M),ig(o,l,v,M,f);case 7:return zn(o,l,l.pendingProps,f),l.child;case 8:return zn(o,l,l.pendingProps.children,f),l.child;case 12:return zn(o,l,l.pendingProps.children,f),l.child;case 10:e:{if(v=l.type._context,M=l.pendingProps,A=l.memoizedProps,B=M.value,gm(l,v,B),A!==null)if(ki(A.value,B)){if(A.children===M.children&&!qt.current){l=ar(o,l,f);break e}}else for(A=l.child,A!==null&&(A.return=l);A!==null;){var H=A.dependencies;if(H!==null){B=A.child;for(var se=H.firstContext;se!==null;){if(se.context===v){if(A.tag===1){se=ir(-1,f&-f),se.tag=2;var Me=A.updateQueue;if(Me!==null){Me=Me.shared;var Ve=Me.pending;Ve===null?se.next=se:(se.next=Ve.next,Ve.next=se),Me.pending=se}}A.lanes|=f,se=A.alternate,se!==null&&(se.lanes|=f),ed(A.return,f,l),H.lanes|=f;break}se=se.next}}else if(A.tag===10)B=A.type===l.type?null:A.child;else if(A.tag===18){if(B=A.return,B===null)throw Error(a(341));B.lanes|=f,H=B.alternate,H!==null&&(H.lanes|=f),ed(B,f,l),B=A.sibling}else B=A.child;if(B!==null)B.return=A;else for(B=A;B!==null;){if(B===l){B=null;break}if(A=B.sibling,A!==null){A.return=B.return,B=A;break}B=B.return}A=B}zn(o,l,M.children,f),l=l.child}return l;case 9:return M=l.type,v=l.pendingProps.children,qs(l,f),M=hi(M),v=v(M),l.flags|=1,zn(o,l,v,f),l.child;case 14:return v=l.type,M=Ei(v,l.pendingProps),M=Ei(v.type,M),rg(o,l,v,M,f);case 15:return sg(o,l,l.type,l.pendingProps,f);case 17:return v=l.type,M=l.pendingProps,M=l.elementType===v?M:Ei(v,M),o!==null&&(o.alternate=null,l.alternate=null,l.flags|=2),l.tag=1,rn(v)?(o=!0,Fn(l)):o=!1,qs(l,f),Mm(l,v,M),id(l,v,M,f),Md(null,l,v,!0,o,f);case 19:return mg(o,l,f);case 22:return og(o,l,f)}throw Error(a(156,l.tag))};function Bg(o,l){return qh(o,l)}function rS(o,l,f,v){this.tag=o,this.key=f,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=l,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=v,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function _i(o,l,f,v){return new rS(o,l,f,v)}function Wd(o){return o=o.prototype,!(!o||!o.isReactComponent)}function sS(o){if(typeof o=="function")return Wd(o)?1:0;if(o!=null){if(o=o.$$typeof,o===S)return 11;if(o===E)return 14}return 2}function Dr(o,l){var f=o.alternate;return f===null?(f=_i(o.tag,l,o.key,o.mode),f.elementType=o.elementType,f.type=o.type,f.stateNode=o.stateNode,f.alternate=o,o.alternate=f):(f.pendingProps=l,f.type=o.type,f.flags=0,f.subtreeFlags=0,f.deletions=null),f.flags=o.flags&14680064,f.childLanes=o.childLanes,f.lanes=o.lanes,f.child=o.child,f.memoizedProps=o.memoizedProps,f.memoizedState=o.memoizedState,f.updateQueue=o.updateQueue,l=o.dependencies,f.dependencies=l===null?null:{lanes:l.lanes,firstContext:l.firstContext},f.sibling=o.sibling,f.index=o.index,f.ref=o.ref,f}function xc(o,l,f,v,M,A){var B=2;if(v=o,typeof o=="function")Wd(o)&&(B=1);else if(typeof o=="string")B=5;else e:switch(o){case d:return os(f.children,M,A,l);case p:B=8,M|=8;break;case m:return o=_i(12,f,l,M|2),o.elementType=m,o.lanes=A,o;case x:return o=_i(13,f,l,M),o.elementType=x,o.lanes=A,o;case g:return o=_i(19,f,l,M),o.elementType=g,o.lanes=A,o;case T:return Sc(f,M,A,l);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case _:B=10;break e;case y:B=9;break e;case S:B=11;break e;case E:B=14;break e;case w:B=16,v=null;break e}throw Error(a(130,o==null?o:typeof o,""))}return l=_i(B,f,l,M),l.elementType=o,l.type=v,l.lanes=A,l}function os(o,l,f,v){return o=_i(7,o,v,l),o.lanes=f,o}function Sc(o,l,f,v){return o=_i(22,o,v,l),o.elementType=T,o.lanes=f,o.stateNode={},o}function Xd(o,l,f){return o=_i(6,o,null,l),o.lanes=f,o}function Yd(o,l,f){return l=_i(4,o.children!==null?o.children:[],o.key,l),l.lanes=f,l.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},l}function oS(o,l,f,v,M){this.tag=l,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=st,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Xh(0),this.expirationTimes=Xh(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Xh(0),this.identifierPrefix=v,this.onRecoverableError=M,_e&&(this.mutableSourceEagerHydrationData=null)}function kg(o,l,f,v,M,A,B,H,se){return o=new oS(o,l,f,H,se),l===1?(l=1,A===!0&&(l|=8)):l=0,A=_i(3,null,null,l),o.current=A,A.stateNode=o,A.memoizedState={element:v,isDehydrated:f,cache:null,transitions:null},td(A),o}function Hg(o){if(!o)return Et;o=o._reactInternals;e:{if(R(o)!==o||o.tag!==1)throw Error(a(170));var l=o;do{switch(l.tag){case 3:l=l.stateNode.context;break e;case 1:if(rn(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break e}}l=l.return}while(l!==null);throw Error(a(171))}if(o.tag===1){var f=o.type;if(rn(f))return Ht(o,f,l)}return l}function Vg(o){var l=o._reactInternals;if(l===void 0)throw typeof o.render=="function"?Error(a(188)):(o=Object.keys(o).join(","),Error(a(268,o)));return o=q(l),o===null?null:o.stateNode}function Gg(o,l){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var f=o.retryLane;o.retryLane=f!==0&&f<l?f:l}}function qd(o,l){Gg(o,l),(o=o.alternate)&&Gg(o,l)}function aS(o){return o=q(o),o===null?null:o.stateNode}function lS(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var l=Bn();gi(o,134217728,l),qd(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var l=Bn(),f=Ir(o);gi(o,f,l),qd(o,f)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var l=o.stateNode;if(l.current.memoizedState.isDehydrated){var f=Jo(l.pendingLanes);f!==0&&(Yh(l,f|1),Zn(l,yn()),!(Tt&6)&&(io(),Hi()))}break;case 13:var v=Bn();Ig(function(){return gi(o,1,v)}),qd(o,1)}},t.batchedUpdates=function(o,l){var f=Tt;Tt|=1;try{return o(l)}finally{Tt=f,Tt===0&&(io(),Ul&&Hi())}},t.createComponentSelector=function(o){return{$$typeof:oc,value:o}},t.createContainer=function(o,l,f,v,M,A,B){return kg(o,l,!1,null,f,v,M,A,B)},t.createHasPseudoClassSelector=function(o){return{$$typeof:ac,value:o}},t.createHydrationContainer=function(o,l,f,v,M,A,B,H,se){return o=kg(f,v,!0,o,M,A,B,H,se),o.context=Hg(null),f=o.current,v=Bn(),M=Ir(f),A=ir(v,M),A.callback=l??null,Cr(f,A),o.current.lanes=M,Ko(o,M,v),Zn(o,v),o},t.createPortal=function(o,l,f){var v=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:v==null?null:""+v,children:o,containerInfo:l,implementation:f}},t.createRoleSelector=function(o){return{$$typeof:lc,value:o}},t.createTestNameSelector=function(o){return{$$typeof:cc,value:o}},t.createTextSelector=function(o){return{$$typeof:uc,value:o}},t.deferredUpdates=function(o){var l=Ut,f=sn.transition;try{return sn.transition=null,Ut=16,o()}finally{Ut=l,sn.transition=f}},t.discreteUpdates=function(o,l,f,v,M){var A=Ut,B=sn.transition;try{return sn.transition=null,Ut=1,o(l,f,v,M)}finally{Ut=A,sn.transition=B,Tt===0&&io()}},t.findAllNodes=Dd,t.findBoundingRects=function(o,l){if(!De)throw Error(a(363));l=Dd(o,l),o=[];for(var f=0;f<l.length;f++)o.push(P(l[f]));for(l=o.length-1;0<l;l--){f=o[l];for(var v=f.x,M=v+f.width,A=f.y,B=A+f.height,H=l-1;0<=H;H--)if(l!==H){var se=o[H],Me=se.x,Ve=Me+se.width,ft=se.y,et=ft+se.height;if(v>=Me&&A>=ft&&M<=Ve&&B<=et){o.splice(l,1);break}else if(v!==Me||f.width!==se.width||et<A||ft>B){if(!(A!==ft||f.height!==se.height||Ve<v||Me>M)){Me>v&&(se.width+=Me-v,se.x=v),Ve<M&&(se.width=M-Me),o.splice(l,1);break}}else{ft>A&&(se.height+=ft-A,se.y=A),et<B&&(se.height=B-ft),o.splice(l,1);break}}}return o},t.findHostInstance=Vg,t.findHostInstanceWithNoPortals=function(o){return o=O(o),o=o!==null?Q(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return Vg(o)},t.flushControlled=function(o){var l=Tt;Tt|=1;var f=sn.transition,v=Ut;try{sn.transition=null,Ut=1,o()}finally{Ut=v,sn.transition=f,Tt=l,Tt===0&&(io(),Hi())}},t.flushPassiveEffects=ss,t.flushSync=Ig,t.focusWithin=function(o,l){if(!De)throw Error(a(363));for(o=Pd(o),l=Cg(o,l),l=Array.from(l),o=0;o<l.length;){var f=l[o++];if(!ce(f)){if(f.tag===5&&ue(f.stateNode))return!0;for(f=f.child;f!==null;)l.push(f),f=f.sibling}}return!1},t.getCurrentUpdatePriority=function(){return Ut},t.getFindAllNodesFailureDescription=function(o,l){if(!De)throw Error(a(363));var f=0,v=[];o=[Pd(o),0];for(var M=0;M<o.length;){var A=o[M++],B=o[M++],H=l[B];if((A.tag!==5||!ce(A))&&(Id(A,H)&&(v.push(Ld(H)),B++,B>f&&(f=B)),B<l.length))for(A=A.child;A!==null;)o.push(A,B),A=A.sibling}if(f<l.length){for(o=[];f<l.length;f++)o.push(Ld(l[f]));return`findAllNodes was able to match part of the selector:
  `+(v.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return $(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:aS,findFiberByHostInstance:o.findFiberByHostInstance||lS,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var l=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(l.isDisabled||!l.supportsFiber)o=!0;else{try{Dl=l.inject(o),Bi=l}catch{}o=!!l.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,l,f,v){if(!De)throw Error(a(363));o=Dd(o,l);var M=qe(o,f,v).disconnect;return{disconnect:function(){M()}}},t.registerMutableSourceForHydration=function(o,l){var f=l._getVersion;f=f(l._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[l,f]:o.mutableSourceEagerHydrationData.push(l,f)},t.runWithPriority=function(o,l){var f=Ut;try{return Ut=o,l()}finally{Ut=f}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,l,f,v){var M=l.current,A=Bn(),B=Ir(M);return f=Hg(f),l.context===null?l.context=f:l.pendingContext=f,l=ir(A,B),l.payload={element:o},v=v===void 0?null:v,v!==null&&(l.callback=v),Cr(M,l),o=gi(M,B,A),o!==null&&zl(o,M,B),B},t};tx.exports=RC;var PC=tx.exports;const IC=K0(PC);var nx={exports:{}},ix={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(r){function e(z,Z){var J=z.length;z.push(Z);e:for(;0<J;){var re=J-1>>>1,xe=z[re];if(0<i(xe,Z))z[re]=Z,z[J]=xe,J=re;else break e}}function t(z){return z.length===0?null:z[0]}function n(z){if(z.length===0)return null;var Z=z[0],J=z.pop();if(J!==Z){z[0]=J;e:for(var re=0,xe=z.length,Be=xe>>>1;re<Be;){var ne=2*(re+1)-1,ge=z[ne],we=ne+1,ve=z[we];if(0>i(ge,J))we<xe&&0>i(ve,ge)?(z[re]=ve,z[we]=J,re=we):(z[re]=ge,z[ne]=J,re=ne);else if(we<xe&&0>i(ve,J))z[re]=ve,z[we]=J,re=we;else break e}}return Z}function i(z,Z){var J=z.sortIndex-Z.sortIndex;return J!==0?J:z.id-Z.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var a=Date,c=a.now();r.unstable_now=function(){return a.now()-c}}var u=[],h=[],d=1,p=null,m=3,_=!1,y=!1,S=!1,x=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(z){for(var Z=t(h);Z!==null;){if(Z.callback===null)n(h);else if(Z.startTime<=z)n(h),Z.sortIndex=Z.expirationTime,e(u,Z);else break;Z=t(h)}}function T(z){if(S=!1,w(z),!y)if(t(u)!==null)y=!0,$(I);else{var Z=t(h);Z!==null&&pe(T,Z.startTime-z)}}function I(z,Z){y=!1,S&&(S=!1,g(U),U=-1),_=!0;var J=m;try{for(w(Z),p=t(u);p!==null&&(!(p.expirationTime>Z)||z&&!O());){var re=p.callback;if(typeof re=="function"){p.callback=null,m=p.priorityLevel;var xe=re(p.expirationTime<=Z);Z=r.unstable_now(),typeof xe=="function"?p.callback=xe:p===t(u)&&n(u),w(Z)}else n(u);p=t(u)}if(p!==null)var Be=!0;else{var ne=t(h);ne!==null&&pe(T,ne.startTime-Z),Be=!1}return Be}finally{p=null,m=J,_=!1}}var C=!1,L=null,U=-1,R=5,b=-1;function O(){return!(r.unstable_now()-b<R)}function q(){if(L!==null){var z=r.unstable_now();b=z;var Z=!0;try{Z=L(!0,z)}finally{Z?Y():(C=!1,L=null)}}else C=!1}var Y;if(typeof E=="function")Y=function(){E(q)};else if(typeof MessageChannel<"u"){var Q=new MessageChannel,ae=Q.port2;Q.port1.onmessage=q,Y=function(){ae.postMessage(null)}}else Y=function(){x(q,0)};function $(z){L=z,C||(C=!0,Y())}function pe(z,Z){U=x(function(){z(r.unstable_now())},Z)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(z){z.callback=null},r.unstable_continueExecution=function(){y||_||(y=!0,$(I))},r.unstable_forceFrameRate=function(z){0>z||125<z?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):R=0<z?Math.floor(1e3/z):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(z){switch(m){case 1:case 2:case 3:var Z=3;break;default:Z=m}var J=m;m=Z;try{return z()}finally{m=J}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(z,Z){switch(z){case 1:case 2:case 3:case 4:case 5:break;default:z=3}var J=m;m=z;try{return Z()}finally{m=J}},r.unstable_scheduleCallback=function(z,Z,J){var re=r.unstable_now();switch(typeof J=="object"&&J!==null?(J=J.delay,J=typeof J=="number"&&0<J?re+J:re):J=re,z){case 1:var xe=-1;break;case 2:xe=250;break;case 5:xe=1073741823;break;case 4:xe=1e4;break;default:xe=5e3}return xe=J+xe,z={id:d++,callback:Z,priorityLevel:z,startTime:J,expirationTime:xe,sortIndex:-1},J>re?(z.sortIndex=J,e(h,z),t(u)===null&&z===t(h)&&(S?(g(U),U=-1):S=!0,pe(T,J-re))):(z.sortIndex=xe,e(u,z),y||_||(y=!0,$(I))),z},r.unstable_shouldYield=O,r.unstable_wrapCallback=function(z){var Z=m;return function(){var J=m;m=Z;try{return z.apply(this,arguments)}finally{m=J}}}})(ix);nx.exports=ix;var b0=nx.exports;const hm={},rx=r=>void Object.assign(hm,r);function LC(r,e){function t(d,{args:p=[],attach:m,..._},y){let S=`${d[0].toUpperCase()}${d.slice(1)}`,x;if(d==="primitive"){if(_.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const g=_.object;x=Ro(g,{type:d,root:y,attach:m,primitive:!0})}else{const g=hm[S];if(!g)throw new Error(`R3F: ${S} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=Ro(new g(...p),{type:d,root:y,attach:m,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x instanceof _t?x.__r3f.attach="geometry":x instanceof bn&&(x.__r3f.attach="material")),S!=="inject"&&Hf(x,_),x}function n(d,p){let m=!1;if(p){var _,y;(_=p.__r3f)!=null&&_.attach?kf(d,p,p.__r3f.attach):p.isObject3D&&d.isObject3D&&(d.add(p),m=!0),m||(y=d.__r3f)==null||y.objects.push(p),p.__r3f||Ro(p,{}),p.__r3f.parent=d,vp(p),Po(p)}}function i(d,p,m){let _=!1;if(p){var y,S;if((y=p.__r3f)!=null&&y.attach)kf(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){p.parent=d,p.dispatchEvent({type:"added"}),d.dispatchEvent({type:"childadded",child:p});const x=d.children.filter(E=>E!==p),g=x.indexOf(m);d.children=[...x.slice(0,g),p,...x.slice(g)],_=!0}_||(S=d.__r3f)==null||S.objects.push(p),p.__r3f||Ro(p,{}),p.__r3f.parent=d,vp(p),Po(p)}}function s(d,p,m=!1){d&&[...d].forEach(_=>a(p,_,m))}function a(d,p,m){if(p){var _,y,S;if(p.__r3f&&(p.__r3f.parent=null),(_=d.__r3f)!=null&&_.objects&&(d.__r3f.objects=d.__r3f.objects.filter(T=>T!==p)),(y=p.__r3f)!=null&&y.attach)L0(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){var x;d.remove(p),(x=p.__r3f)!=null&&x.root&&kC(Su(p),p)}const E=(S=p.__r3f)==null?void 0:S.primitive,w=!E&&(m===void 0?p.dispose!==null:m);if(!E){var g;s((g=p.__r3f)==null?void 0:g.objects,p,w),s(p.children,p,w)}if(delete p.__r3f,w&&p.dispose&&p.type!=="Scene"){const T=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?b0.unstable_scheduleCallback(b0.unstable_IdlePriority,T):T()}Po(d)}}function c(d,p,m,_){var y;const S=(y=d.__r3f)==null?void 0:y.parent;if(!S)return;const x=t(p,m,d.__r3f.root);if(d.children){for(const g of d.children)g.__r3f&&n(x,g);d.children=d.children.filter(g=>!g.__r3f)}d.__r3f.objects.forEach(g=>n(x,g)),d.__r3f.objects=[],d.__r3f.autoRemovedBeforeAppend||a(S,d),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(S,x),x.raycast&&x.__r3f.eventCount&&Su(x).getState().internal.interaction.push(x),[_,_.alternate].forEach(g=>{g!==null&&(g.stateNode=x,g.ref&&(typeof g.ref=="function"?g.ref(x):g.ref.current=x))})}const u=()=>{};return{reconciler:IC({createInstance:t,removeChild:a,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(d,p)=>{if(!p)return;const m=d.getState().scene;m.__r3f&&(m.__r3f.root=d,n(m,p))},removeChildFromContainer:(d,p)=>{p&&a(d.getState().scene,p)},insertInContainerBefore:(d,p,m)=>{if(!p||!m)return;const _=d.getState().scene;_.__r3f&&i(_,p,m)},getRootHostContext:()=>null,getChildHostContext:d=>d,finalizeInitialChildren(d){var p;return!!((p=d?.__r3f)!=null?p:{}).handlers},prepareUpdate(d,p,m,_){var y;if(((y=d?.__r3f)!=null?y:{}).primitive&&_.object&&_.object!==d)return[!0];{const{args:x=[],children:g,...E}=_,{args:w=[],children:T,...I}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((L,U)=>L!==w[U]))return[!0];const C=hx(d,E,I,!0);return C.changes.length?[!1,C]:null}},commitUpdate(d,[p,m],_,y,S,x){p?c(d,_,S,x):Hf(d,m)},commitMount(d,p,m,_){var y;const S=(y=d.__r3f)!=null?y:{};d.raycast&&S.handlers&&S.eventCount&&Su(d).getState().internal.interaction.push(d)},getPublicInstance:d=>d,prepareForCommit:()=>null,preparePortalMount:d=>Ro(d.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(d){var p;const{attach:m,parent:_}=(p=d.__r3f)!=null?p:{};m&&_&&L0(_,d,m),d.isObject3D&&(d.visible=!1),Po(d)},unhideInstance(d,p){var m;const{attach:_,parent:y}=(m=d.__r3f)!=null?m:{};_&&y&&kf(y,d,_),(d.isObject3D&&p.visible==null||p.visible)&&(d.visible=!0),Po(d)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():No.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Xt.fun(performance.now)?performance.now:Xt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Xt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Xt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Hf}}var C0,R0;const Bf=r=>"colorSpace"in r||"outputColorSpace"in r,sx=()=>{var r;return(r=hm.ColorManagement)!=null?r:null},ox=r=>r&&r.isOrthographicCamera,DC=r=>r&&r.hasOwnProperty("current"),Sl=typeof window<"u"&&((C0=window.document)!=null&&C0.createElement||((R0=window.navigator)==null?void 0:R0.product)==="ReactNative")?We.useLayoutEffect:We.useEffect;function ax(r){const e=We.useRef(r);return Sl(()=>void(e.current=r),[r]),e}function UC({set:r}){return Sl(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class lx extends We.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}lx.getDerivedStateFromError=()=>({error:!0});const cx="__default",P0=new Map,OC=r=>r&&!!r.memoized&&!!r.changes;function ux(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const Aa=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function Su(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const Xt={obj:r=>r===Object(r)&&!Xt.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(Xt.str(r)||Xt.num(r)||Xt.boo(r))return r===e;const s=Xt.obj(r);if(s&&n==="reference")return r===e;const a=Xt.arr(r);if(a&&t==="reference")return r===e;if((a||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!Xt.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(Xt.und(c)){if(a&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function NC(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function Ro(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function _p(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,a)=>s[a],r),{target:t,key:i}}else return{target:t,key:e}}const I0=/-\d+$/;function kf(r,e,t){if(Xt.str(t)){if(I0.test(t)){const s=t.replace(I0,""),{target:a,key:c}=_p(r,s);Array.isArray(a[c])||(a[c]=[])}const{target:n,key:i}=_p(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function L0(r,e,t){var n,i;if(Xt.str(t)){const{target:s,key:a}=_p(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[a]:s[a]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function hx(r,{children:e,key:t,ref:n,...i},{children:s,key:a,ref:c,...u}={},h=!1){const d=r.__r3f,p=Object.entries(i),m=[];if(h){const y=Object.keys(u);for(let S=0;S<y.length;S++)i.hasOwnProperty(y[S])||p.unshift([y[S],cx+"remove"])}p.forEach(([y,S])=>{var x;if((x=r.__r3f)!=null&&x.primitive&&y==="object"||Xt.equ(S,u[y]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(y))return m.push([y,S,!0,[]]);let g=[];y.includes("-")&&(g=y.split("-")),m.push([y,S,!1,g]);for(const E in i){const w=i[E];E.startsWith(`${y}-`)&&m.push([E,w,!1,E.split("-")])}});const _={...i};return d!=null&&d.memoizedProps&&d!=null&&d.memoizedProps.args&&(_.args=d.memoizedProps.args),d!=null&&d.memoizedProps&&d!=null&&d.memoizedProps.attach&&(_.attach=d.memoizedProps.attach),{memoized:_,changes:m}}const FC=typeof process<"u"&&!1;function Hf(r,e){var t;const n=r.__r3f,i=n?.root,s=i==null||i.getState==null?void 0:i.getState(),{memoized:a,changes:c}=OC(e)?e:hx(r,e),u=n?.eventCount;r.__r3f&&(r.__r3f.memoizedProps=a);for(let d=0;d<c.length;d++){let[p,m,_,y]=c[d];if(Bf(r)){const E="srgb",w="srgb-linear";p==="encoding"?(p="colorSpace",m=m===3001?E:w):p==="outputEncoding"&&(p="outputColorSpace",m=m===3001?E:w)}let S=r,x=S[p];if(y.length&&(x=y.reduce((g,E)=>g[E],r),!(x&&x.set))){const[g,...E]=y.reverse();S=E.reverse().reduce((w,T)=>w[T],r),p=g}if(m===cx+"remove")if(S.constructor){let g=P0.get(S.constructor);g||(g=new S.constructor,P0.set(S.constructor,g)),m=g[p]}else m=0;if(_&&n)m?n.handlers[p]=m:delete n.handlers[p],n.eventCount=Object.keys(n.handlers).length;else if(x&&x.set&&(x.copy||x instanceof Ls)){if(Array.isArray(m))x.fromArray?x.fromArray(m):x.set(...m);else if(x.copy&&m&&m.constructor&&(FC?x.constructor.name===m.constructor.name:x.constructor===m.constructor))x.copy(m);else if(m!==void 0){const g=x instanceof Ne;!g&&x.setScalar?x.setScalar(m):x instanceof Ls&&m instanceof Ls?x.mask=m.mask:x.set(m),!sx()&&s&&!s.linear&&g&&x.convertSRGBToLinear()}}else if(S[p]=m,S[p]instanceof $t&&S[p].format===On&&S[p].type===Ii&&s){const g=S[p];Bf(g)&&Bf(s.gl)?g.colorSpace=s.gl.outputColorSpace:g.encoding=s.gl.outputEncoding}Po(r)}if(n&&n.parent&&r.raycast&&u!==n.eventCount){const d=Su(r).getState().internal,p=d.interaction.indexOf(r);p>-1&&d.interaction.splice(p,1),n.eventCount&&d.interaction.push(r)}return!(c.length===1&&c[0][0]==="onUpdate")&&c.length&&(t=r.__r3f)!=null&&t.parent&&vp(r),r}function Po(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function vp(r){r.onUpdate==null||r.onUpdate(r)}function zC(r,e){r.manual||(ox(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function fu(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function BC(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return No.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return No.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return No.ContinuousEventPriority;default:return No.DefaultEventPriority}}function dx(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function kC(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{dx(t.capturedMap,e,n,i)})}function HC(r){function e(u){const{internal:h}=r.getState(),d=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(d*d+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(d=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+d]}))}function n(u,h){const d=r.getState(),p=new Set,m=[],_=h?h(d.internal.interaction):d.internal.interaction;for(let g=0;g<_.length;g++){const E=Aa(_[g]);E&&(E.raycaster.camera=void 0)}d.previousRoot||d.events.compute==null||d.events.compute(u,d);function y(g){const E=Aa(g);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var w;E.events.compute==null||E.events.compute(u,E,(w=E.previousRoot)==null?void 0:w.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(g,!0):[]}let S=_.flatMap(y).sort((g,E)=>{const w=Aa(g.object),T=Aa(E.object);return!w||!T?g.distance-E.distance:T.events.priority-w.events.priority||g.distance-E.distance}).filter(g=>{const E=fu(g);return p.has(E)?!1:(p.add(E),!0)});d.events.filter&&(S=d.events.filter(S,d));for(const g of S){let E=g.object;for(;E;){var x;(x=E.__r3f)!=null&&x.eventCount&&m.push({...g,eventObject:E}),E=E.parent}}if("pointerId"in u&&d.internal.capturedMap.has(u.pointerId))for(let g of d.internal.capturedMap.get(u.pointerId).values())p.has(fu(g.intersection))||m.push(g.intersection);return m}function i(u,h,d,p){const m=r.getState();if(u.length){const _={stopped:!1};for(const y of u){const S=Aa(y.object)||m,{raycaster:x,pointer:g,camera:E,internal:w}=S,T=new F(g.x,g.y,0).unproject(E),I=b=>{var O,q;return(O=(q=w.capturedMap.get(b))==null?void 0:q.has(y.eventObject))!=null?O:!1},C=b=>{const O={intersection:y,target:h.target};w.capturedMap.has(b)?w.capturedMap.get(b).set(y.eventObject,O):w.capturedMap.set(b,new Map([[y.eventObject,O]])),h.target.setPointerCapture(b)},L=b=>{const O=w.capturedMap.get(b);O&&dx(w.capturedMap,y.eventObject,O,b)};let U={};for(let b in h){let O=h[b];typeof O!="function"&&(U[b]=O)}let R={...y,...U,pointer:g,intersections:u,stopped:_.stopped,delta:d,unprojectedPoint:T,ray:x.ray,camera:E,stopPropagation(){const b="pointerId"in h&&w.capturedMap.get(h.pointerId);if((!b||b.has(y.eventObject))&&(R.stopped=_.stopped=!0,w.hovered.size&&Array.from(w.hovered.values()).find(O=>O.eventObject===y.eventObject))){const O=u.slice(0,u.indexOf(y));s([...O,y])}},target:{hasPointerCapture:I,setPointerCapture:C,releasePointerCapture:L},currentTarget:{hasPointerCapture:I,setPointerCapture:C,releasePointerCapture:L},nativeEvent:h};if(p(R),_.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const d of h.hovered.values())if(!u.length||!u.find(p=>p.object===d.object&&p.index===d.index&&p.instanceId===d.instanceId)){const m=d.eventObject.__r3f,_=m?.handlers;if(h.hovered.delete(fu(d)),m!=null&&m.eventCount){const y={...d,intersections:u};_.onPointerOut==null||_.onPointerOut(y),_.onPointerLeave==null||_.onPointerLeave(y)}}}function a(u,h){for(let d=0;d<h.length;d++){const p=h[d].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:d}=r.getState();"pointerId"in h&&d.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{d.capturedMap.has(h.pointerId)&&(d.capturedMap.delete(h.pointerId),s([]))})}}return function(d){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=d;const _=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(d,_?t:void 0),g=y?e(d):0;u==="onPointerDown"&&(m.initialClick=[d.offsetX,d.offsetY],m.initialHits=x.map(w=>w.eventObject)),y&&!x.length&&g<=2&&(a(d,m.interaction),p&&p(d)),_&&s(x);function E(w){const T=w.eventObject,I=T.__r3f,C=I?.handlers;if(I!=null&&I.eventCount)if(_){if(C.onPointerOver||C.onPointerEnter||C.onPointerOut||C.onPointerLeave){const L=fu(w),U=m.hovered.get(L);U?U.stopped&&w.stopPropagation():(m.hovered.set(L,w),C.onPointerOver==null||C.onPointerOver(w),C.onPointerEnter==null||C.onPointerEnter(w))}C.onPointerMove==null||C.onPointerMove(w)}else{const L=C[u];L?(!y||m.initialHits.includes(T))&&(a(d,m.interaction.filter(U=>!m.initialHits.includes(U))),L(w)):y&&m.initialHits.includes(T)&&a(d,m.interaction.filter(U=>!m.initialHits.includes(U)))}}i(x,d,g,E)}}return{handlePointer:c}}const fx=r=>!!(r!=null&&r.render),px=We.createContext(null),VC=(r,e)=>{const t=AC((c,u)=>{const h=new F,d=new F,p=new F;function m(g=u().camera,E=d,w=u().size){const{width:T,height:I,top:C,left:L}=w,U=T/I;E instanceof F?p.copy(E):p.set(...E);const R=g.getWorldPosition(h).distanceTo(p);if(ox(g))return{width:T/g.zoom,height:I/g.zoom,top:C,left:L,factor:1,distance:R,aspect:U};{const b=g.fov*Math.PI/180,O=2*Math.tan(b/2)*R,q=O*(T/I);return{width:q,height:O,top:C,left:L,factor:T/q,distance:R,aspect:U}}}let _;const y=g=>c(E=>({performance:{...E.performance,current:g}})),S=new fe;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(g=1)=>r(u(),g),advance:(g,E)=>e(g,E,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new sm,pointer:S,mouse:S,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const g=u();_&&clearTimeout(_),g.performance.current!==g.performance.min&&y(g.performance.min),_=setTimeout(()=>y(u().performance.max),g.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:g=>c(E=>({...E,events:{...E.events,...g}})),setSize:(g,E,w,T,I)=>{const C=u().camera,L={width:g,height:E,top:T||0,left:I||0,updateStyle:w};c(U=>({size:L,viewport:{...U.viewport,...m(C,d,L)}}))},setDpr:g=>c(E=>{const w=ux(g);return{viewport:{...E.viewport,dpr:w,initialDpr:E.viewport.initialDpr||w}}}),setFrameloop:(g="always")=>{const E=u().clock;E.stop(),E.elapsedTime=0,g!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:g}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:We.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(g,E,w)=>{const T=u().internal;return T.priority=T.priority+(E>0?1:0),T.subscribers.push({ref:g,priority:E,store:w}),T.subscribers=T.subscribers.sort((I,C)=>I.priority-C.priority),()=>{const I=u().internal;I!=null&&I.subscribers&&(I.priority=I.priority-(E>0?1:0),I.subscribers=I.subscribers.filter(C=>C.ref!==g))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,a=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:d,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,zC(c,u),d.setPixelRatio(h.dpr);const _=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&d.domElement instanceof HTMLCanvasElement;d.setSize(u.width,u.height,_)}c!==a&&(a=c,p(_=>({viewport:{..._.viewport,..._.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let pu,GC=new Set,WC=new Set,XC=new Set;function Vf(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function ba(r,e){switch(r){case"before":return Vf(GC,e);case"after":return Vf(WC,e);case"tail":return Vf(XC,e)}}let Gf,Wf;function Xf(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),Gf=e.internal.subscribers,pu=0;pu<Gf.length;pu++)Wf=Gf[pu],Wf.ref.current(Wf.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function YC(r){let e=!1,t=!1,n,i,s;function a(h){i=requestAnimationFrame(a),e=!0,n=0,ba("before",h),t=!0;for(const p of r.values()){var d;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((d=s.gl.xr)!=null&&d.isPresenting)&&(n+=Xf(h,s))}if(t=!1,ba("after",h),n===0)return ba("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,d=1){var p;if(!h)return r.forEach(m=>c(m.store.getState(),d));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(d>1?h.internal.frames=Math.min(60,h.internal.frames+d):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(a)))}function u(h,d=!0,p,m){if(d&&ba("before",h),p)Xf(h,p,m);else for(const _ of r.values())Xf(h,_.store.getState());d&&ba("after",h)}return{loop:a,invalidate:c,advance:u}}function mx(){const r=We.useContext(px);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function pr(r=t=>t,e){return mx()(r,e)}function qC(r,e=0){const t=mx(),n=t.getState().internal.subscribe,i=ax(r);return Sl(()=>n(i,e,t),[e,n,t]),null}const Vo=new Map,{invalidate:D0,advance:U0}=YC(Vo),{reconciler:lh,applyProps:Eo}=LC(Vo,BC),To={objects:"shallow",strict:!1},ZC=(r,e)=>{const t=typeof r=="function"?r(e):r;return fx(t)?t:new sy({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function JC(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:a,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:a,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:a}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:a,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function KC(r){const e=Vo.get(r),t=e?.fiber,n=e?.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||VC(D0,U0),a=t||lh.createContainer(s,No.ConcurrentRoot,null,!1,null,"",i,null);e||Vo.set(r,{fiber:a,store:s});let c,u=!1,h;return{configure(d={}){let{gl:p,size:m,scene:_,events:y,onCreated:S,shadows:x=!1,linear:g=!1,flat:E=!1,legacy:w=!1,orthographic:T=!1,frameloop:I="always",dpr:C=[1,2],performance:L,raycaster:U,camera:R,onPointerMissed:b}=d,O=s.getState(),q=O.gl;O.gl||O.set({gl:q=ZC(p,r)});let Y=O.raycaster;Y||O.set({raycaster:Y=new cm});const{params:Q,...ae}=U||{};if(Xt.equ(ae,Y,To)||Eo(Y,{...ae}),Xt.equ(Q,Y.params,To)||Eo(Y,{params:{...Y.params,...Q}}),!O.camera||O.camera===h&&!Xt.equ(h,R,To)){h=R;const J=R instanceof dl,re=J?R:T?new ml(0,0,0,0,.1,1e3):new En(75,0,.1,1e3);J||(re.position.z=5,R&&(Eo(re,R),("aspect"in R||"left"in R||"right"in R||"bottom"in R||"top"in R)&&(re.manual=!0,re.updateProjectionMatrix())),!O.camera&&!(R!=null&&R.rotation)&&re.lookAt(0,0,0)),O.set({camera:re}),Y.camera=re}if(!O.scene){let J;_ instanceof rh?J=_:(J=new rh,_&&Eo(J,_)),O.set({scene:Ro(J)})}if(!O.xr){var $;const J=(Be,ne)=>{const ge=s.getState();ge.frameloop!=="never"&&U0(Be,!0,ge,ne)},re=()=>{const Be=s.getState();Be.gl.xr.enabled=Be.gl.xr.isPresenting,Be.gl.xr.setAnimationLoop(Be.gl.xr.isPresenting?J:null),Be.gl.xr.isPresenting||D0(Be)},xe={connect(){const Be=s.getState().gl;Be.xr.addEventListener("sessionstart",re),Be.xr.addEventListener("sessionend",re)},disconnect(){const Be=s.getState().gl;Be.xr.removeEventListener("sessionstart",re),Be.xr.removeEventListener("sessionend",re)}};typeof(($=q.xr)==null?void 0:$.addEventListener)=="function"&&xe.connect(),O.set({xr:xe})}if(q.shadowMap){const J=q.shadowMap.enabled,re=q.shadowMap.type;if(q.shadowMap.enabled=!!x,Xt.boo(x))q.shadowMap.type=Na;else if(Xt.str(x)){var pe;const xe={basic:tv,percentage:hh,soft:Na,variance:Ri};q.shadowMap.type=(pe=xe[x])!=null?pe:Na}else Xt.obj(x)&&Object.assign(q.shadowMap,x);(J!==q.shadowMap.enabled||re!==q.shadowMap.type)&&(q.shadowMap.needsUpdate=!0)}const z=sx();z&&("enabled"in z?z.enabled=!w:"legacyMode"in z&&(z.legacyMode=w)),u||Eo(q,{outputEncoding:g?3e3:3001,toneMapping:E?ji:Mp}),O.legacy!==w&&O.set(()=>({legacy:w})),O.linear!==g&&O.set(()=>({linear:g})),O.flat!==E&&O.set(()=>({flat:E})),p&&!Xt.fun(p)&&!fx(p)&&!Xt.equ(p,q,To)&&Eo(q,p),y&&!O.events.handlers&&O.set({events:y(s)});const Z=JC(r,m);return Xt.equ(Z,O.size,To)||O.setSize(Z.width,Z.height,Z.updateStyle,Z.top,Z.left),C&&O.viewport.dpr!==ux(C)&&O.setDpr(C),O.frameloop!==I&&O.setFrameloop(I),O.onPointerMissed||O.set({onPointerMissed:b}),L&&!Xt.equ(L,O.performance,To)&&O.set(J=>({performance:{...J.performance,...L}})),c=S,u=!0,this},render(d){return u||this.configure(),lh.updateContainer(fn.jsx(jC,{store:s,children:d,onCreated:c,rootElement:r}),a,null,()=>{}),s},unmount(){gx(r)}}}function jC({store:r,children:e,onCreated:t,rootElement:n}){return Sl(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),fn.jsx(px.Provider,{value:r,children:e})}function gx(r,e){const t=Vo.get(r),n=t?.fiber;if(n){const i=t?.store.getState();i&&(i.internal.active=!1),lh.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,a,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(a=s.renderLists)==null||a.dispose==null||a.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),NC(i),Vo.delete(r)}catch{}},500)})}}lh.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:We.version});const Yf={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function QC(r){const{handlePointer:e}=HC(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Yf).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(a=>({events:{...a.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([a,c])=>{const[u,h]=Yf[a];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,a])=>{if(n&&n.connected instanceof HTMLElement){const[c]=Yf[s];n.connected.removeEventListener(c,a)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}function yp(r,e,t){var n,i,s,a,c;e==null&&(e=100);function u(){var d=Date.now()-a;d<e&&d>=0?n=setTimeout(u,e-d):(n=null,t||(c=r.apply(s,i),s=i=null))}var h=function(){s=this,i=arguments,a=Date.now();var d=t&&!n;return n||(n=setTimeout(u,e)),d&&(c=r.apply(s,i),s=i=null),c};return h.clear=function(){n&&(clearTimeout(n),n=null)},h.flush=function(){n&&(c=r.apply(s,i),s=i=null,clearTimeout(n),n=null)},h}yp.debounce=yp;var $C=yp;const O0=K0($C);var eR=Object.defineProperty,tR=Object.defineProperties,nR=Object.getOwnPropertyDescriptors,N0=Object.getOwnPropertySymbols,iR=Object.prototype.hasOwnProperty,rR=Object.prototype.propertyIsEnumerable,F0=(r,e,t)=>e in r?eR(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,z0=(r,e)=>{for(var t in e||(e={}))iR.call(e,t)&&F0(r,t,e[t]);if(N0)for(var t of N0(e))rR.call(e,t)&&F0(r,t,e[t]);return r},sR=(r,e)=>tR(r,nR(e)),B0,k0;typeof window<"u"&&((B0=window.document)!=null&&B0.createElement||((k0=window.navigator)==null?void 0:k0.product)==="ReactNative")?We.useLayoutEffect:We.useEffect;function _x(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=r.child;for(;n;){const i=_x(n,e,t);if(i)return i;n=n.sibling}}function vx(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const H0=console.error;console.error=function(){const r=[...arguments].join("");if(r?.startsWith("Warning:")&&r.includes("useContext")){console.error=H0;return}return H0.apply(this,arguments)};const dm=vx(We.createContext(null));class yx extends We.Component{render(){return We.createElement(dm.Provider,{value:this._reactInternals},this.props.children)}}function oR(){const r=We.useContext(dm);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=We.useId();return We.useMemo(()=>{for(const n of[r,r?.alternate]){if(!n)continue;const i=_x(n,!1,s=>{let a=s.memoizedState;for(;a;){if(a.memoizedState===e)return!0;a=a.next}});if(i)return i}},[r,e])}function aR(){const r=oR(),[e]=We.useState(()=>new Map);e.clear();let t=r;for(;t;){if(t.type&&typeof t.type=="object"){const i=t.type._context===void 0&&t.type.Provider===t.type?t.type:t.type._context;i&&i!==dm&&!e.has(i)&&e.set(i,We.useContext(vx(i)))}t=t.return}return e}function lR(){const r=aR();return We.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>We.createElement(e,null,We.createElement(t.Provider,sR(z0({},n),{value:r.get(t)}))),e=>We.createElement(yx,z0({},e))),[r])}function cR({debounce:r,scroll:e,polyfill:t,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=t||typeof window<"u"&&window.ResizeObserver,[s,a]=We.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0});if(!i)return s.width=1280,s.height=800,[()=>{},s,()=>{}];const c=We.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:s,orientationHandler:null}),u=r?typeof r=="number"?r:r.scroll:null,h=r?typeof r=="number"?r:r.resize:null,d=We.useRef(!1);We.useEffect(()=>(d.current=!0,()=>void(d.current=!1)));const[p,m,_]=We.useMemo(()=>{const g=()=>{if(!c.current.element)return;const{left:E,top:w,width:T,height:I,bottom:C,right:L,x:U,y:R}=c.current.element.getBoundingClientRect(),b={left:E,top:w,width:T,height:I,bottom:C,right:L,x:U,y:R};c.current.element instanceof HTMLElement&&n&&(b.height=c.current.element.offsetHeight,b.width=c.current.element.offsetWidth),Object.freeze(b),d.current&&!fR(c.current.lastBounds,b)&&a(c.current.lastBounds=b)};return[g,h?O0(g,h):g,u?O0(g,u):g]},[a,n,u,h]);function y(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(g=>g.removeEventListener("scroll",_,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function S(){var g;c.current.element&&(c.current.resizeObserver=new i(m),(g=c.current.resizeObserver)==null||g.observe(c.current.element),e&&c.current.scrollContainers&&c.current.scrollContainers.forEach(E=>E.addEventListener("scroll",_,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{_()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const x=g=>{!g||g===c.current.element||(y(),c.current.element=g,c.current.scrollContainers=xx(g),S())};return hR(_,!!e),uR(m),We.useEffect(()=>{y(),S()},[e,_,m]),We.useEffect(()=>y,[]),[x,s,p]}function uR(r){We.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function hR(r,e){We.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function xx(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...xx(r.parentElement)]}const dR=["x","y","top","bottom","left","right","width","height"],fR=(r,e)=>dR.every(t=>r[t]===e[t]),pR=We.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:a=QC,eventSource:c,eventPrefix:u,shadows:h,linear:d,flat:p,legacy:m,orthographic:_,frameloop:y,dpr:S,performance:x,raycaster:g,camera:E,scene:w,onPointerMissed:T,onCreated:I,...C},L){We.useMemo(()=>rx(EC),[]);const U=lR(),[R,b]=cR({scroll:!0,debounce:{scroll:50,resize:0},...n}),O=We.useRef(null),q=We.useRef(null);We.useImperativeHandle(L,()=>O.current);const Y=ax(T),[Q,ae]=We.useState(!1),[$,pe]=We.useState(!1);if(Q)throw Q;if($)throw $;const z=We.useRef(null);Sl(()=>{const J=O.current;b.width>0&&b.height>0&&J&&(z.current||(z.current=KC(J)),z.current.configure({gl:s,events:a,shadows:h,linear:d,flat:p,legacy:m,orthographic:_,frameloop:y,dpr:S,performance:x,raycaster:g,camera:E,scene:w,size:b,onPointerMissed:(...re)=>Y.current==null?void 0:Y.current(...re),onCreated:re=>{re.events.connect==null||re.events.connect(c?DC(c)?c.current:c:q.current),u&&re.setEvents({compute:(xe,Be)=>{const ne=xe[u+"X"],ge=xe[u+"Y"];Be.pointer.set(ne/Be.size.width*2-1,-(ge/Be.size.height)*2+1),Be.raycaster.setFromCamera(Be.pointer,Be.camera)}}),I?.(re)}}),z.current.render(fn.jsx(U,{children:fn.jsx(lx,{set:pe,children:fn.jsx(We.Suspense,{fallback:fn.jsx(UC,{set:ae}),children:e})})})))}),We.useEffect(()=>{const J=O.current;if(J)return()=>gx(J)},[]);const Z=c?"none":"auto";return fn.jsx("div",{ref:q,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:Z,...i},...C,children:fn.jsx("div",{ref:R,style:{width:"100%",height:"100%"},children:fn.jsx("canvas",{ref:O,style:{display:"block"},children:t})})})}),mR=We.forwardRef(function(e,t){return fn.jsx(yx,{children:fn.jsx(pR,{...e,ref:t})})});function xp(){return xp=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},xp.apply(null,arguments)}/*!
 * camera-controls
 * https://github.com/yomotsu/camera-controls
 * (c) 2017 @yomotsu
 * Released under the MIT License.
 */const jt={LEFT:1,RIGHT:2,MIDDLE:4},le=Object.freeze({NONE:0,ROTATE:1,TRUCK:2,OFFSET:4,DOLLY:8,ZOOM:16,TOUCH_ROTATE:32,TOUCH_TRUCK:64,TOUCH_OFFSET:128,TOUCH_DOLLY:256,TOUCH_ZOOM:512,TOUCH_DOLLY_TRUCK:1024,TOUCH_DOLLY_OFFSET:2048,TOUCH_DOLLY_ROTATE:4096,TOUCH_ZOOM_TRUCK:8192,TOUCH_ZOOM_OFFSET:16384,TOUCH_ZOOM_ROTATE:32768}),wo={NONE:0,IN:1,OUT:-1};function xs(r){return r.isPerspectiveCamera}function Vr(r){return r.isOrthographicCamera}const Ao=Math.PI*2,V0=Math.PI/2,Sx=1e-5,Ca=Math.PI/180;function Ci(r,e,t){return Math.max(e,Math.min(t,r))}function Wt(r,e=Sx){return Math.abs(r)<e}function zt(r,e,t=Sx){return Wt(r-e,t)}function G0(r,e){return Math.round(r/e)*e}function Ra(r){return isFinite(r)?r:r<0?-Number.MAX_VALUE:Number.MAX_VALUE}function Pa(r){return Math.abs(r)<Number.MAX_VALUE?r:r*(1/0)}function mu(r,e,t,n,i=1/0,s){n=Math.max(1e-4,n);const a=2/n,c=a*s,u=1/(1+c+.48*c*c+.235*c*c*c);let h=r-e;const d=e,p=i*n;h=Ci(h,-p,p),e=r-h;const m=(t.value+a*h)*s;t.value=(t.value-a*m)*u;let _=e+(h+m)*u;return d-r>0==_>d&&(_=d,t.value=(_-d)/s),_}function W0(r,e,t,n,i=1/0,s,a){n=Math.max(1e-4,n);const c=2/n,u=c*s,h=1/(1+u+.48*u*u+.235*u*u*u);let d=e.x,p=e.y,m=e.z,_=r.x-d,y=r.y-p,S=r.z-m;const x=d,g=p,E=m,w=i*n,T=w*w,I=_*_+y*y+S*S;if(I>T){const ae=Math.sqrt(I);_=_/ae*w,y=y/ae*w,S=S/ae*w}d=r.x-_,p=r.y-y,m=r.z-S;const C=(t.x+c*_)*s,L=(t.y+c*y)*s,U=(t.z+c*S)*s;t.x=(t.x-c*C)*h,t.y=(t.y-c*L)*h,t.z=(t.z-c*U)*h,a.x=d+(_+C)*h,a.y=p+(y+L)*h,a.z=m+(S+U)*h;const R=x-r.x,b=g-r.y,O=E-r.z,q=a.x-x,Y=a.y-g,Q=a.z-E;return R*q+b*Y+O*Q>0&&(a.x=x,a.y=g,a.z=E,t.x=(a.x-x)/s,t.y=(a.y-g)/s,t.z=(a.z-E)/s),a}function qf(r,e){e.set(0,0),r.forEach(t=>{e.x+=t.clientX,e.y+=t.clientY}),e.x/=r.length,e.y/=r.length}function Zf(r,e){return Vr(r)?(console.warn(`${e} is not supported in OrthographicCamera`),!0):!1}class gR{constructor(){this._listeners={}}addEventListener(e,t){const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}removeAllEventListeners(e){if(!e){this._listeners={};return}Array.isArray(this._listeners[e])&&(this._listeners[e].length=0)}dispatchEvent(e){const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,a=i.length;s<a;s++)i[s].call(this,e)}}}var Jf;const _R="2.9.0",gu=1/8,vR=/Mac/.test((Jf=globalThis?.navigator)===null||Jf===void 0?void 0:Jf.platform);let lt,X0,_u,Kf,jn,yt,Ft,bo,Ia,Yi,qi,Ss,Y0,q0,xi,La,Co,Z0,jf,J0,Qf,$f,vu,ep=class Sp extends gR{static install(e){lt=e.THREE,X0=Object.freeze(new lt.Vector3(0,0,0)),_u=Object.freeze(new lt.Vector3(0,1,0)),Kf=Object.freeze(new lt.Vector3(0,0,1)),jn=new lt.Vector2,yt=new lt.Vector3,Ft=new lt.Vector3,bo=new lt.Vector3,Ia=new lt.Vector3,Yi=new lt.Vector3,qi=new lt.Vector3,Ss=new lt.Vector3,Y0=new lt.Vector3,q0=new lt.Vector3,xi=new lt.Spherical,La=new lt.Spherical,Co=new lt.Box3,Z0=new lt.Box3,jf=new lt.Sphere,J0=new lt.Quaternion,Qf=new lt.Quaternion,$f=new lt.Matrix4,vu=new lt.Raycaster}static get ACTION(){return le}constructor(e,t){super(),this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.minDistance=Number.EPSILON,this.maxDistance=1/0,this.infinityDolly=!1,this.minZoom=.01,this.maxZoom=1/0,this.smoothTime=.25,this.draggingSmoothTime=.125,this.maxSpeed=1/0,this.azimuthRotateSpeed=1,this.polarRotateSpeed=1,this.dollySpeed=1,this.dollyDragInverted=!1,this.truckSpeed=2,this.dollyToCursor=!1,this.dragToOffset=!1,this.verticalDragToForward=!1,this.boundaryFriction=0,this.restThreshold=.01,this.colliderMeshes=[],this.cancel=()=>{},this._enabled=!0,this._state=le.NONE,this._viewport=null,this._changedDolly=0,this._changedZoom=0,this._hasRested=!0,this._boundaryEnclosesCamera=!1,this._needsUpdate=!0,this._updatedLastTime=!1,this._elementRect=new DOMRect,this._isDragging=!1,this._dragNeedsUpdate=!0,this._activePointers=[],this._lockedPointer=null,this._interactiveArea=new DOMRect(0,0,1,1),this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._isUserControllingOffset=!1,this._isUserControllingZoom=!1,this._lastDollyDirection=wo.NONE,this._thetaVelocity={value:0},this._phiVelocity={value:0},this._radiusVelocity={value:0},this._targetVelocity=new lt.Vector3,this._focalOffsetVelocity=new lt.Vector3,this._zoomVelocity={value:0},this._truckInternal=(g,E,w)=>{let T,I;if(xs(this._camera)){const C=yt.copy(this._camera.position).sub(this._target),L=this._camera.getEffectiveFOV()*Ca,U=C.length()*Math.tan(L*.5);T=this.truckSpeed*g*U/this._elementRect.height,I=this.truckSpeed*E*U/this._elementRect.height}else if(Vr(this._camera)){const C=this._camera;T=g*(C.right-C.left)/C.zoom/this._elementRect.width,I=E*(C.top-C.bottom)/C.zoom/this._elementRect.height}else return;this.verticalDragToForward?(w?this.setFocalOffset(this._focalOffsetEnd.x+T,this._focalOffsetEnd.y,this._focalOffsetEnd.z,!0):this.truck(T,0,!0),this.forward(-I,!0)):w?this.setFocalOffset(this._focalOffsetEnd.x+T,this._focalOffsetEnd.y+I,this._focalOffsetEnd.z,!0):this.truck(T,I,!0)},this._rotateInternal=(g,E)=>{const w=Ao*this.azimuthRotateSpeed*g/this._elementRect.height,T=Ao*this.polarRotateSpeed*E/this._elementRect.height;this.rotate(w,T,!0)},this._dollyInternal=(g,E,w)=>{const T=Math.pow(.95,-g*this.dollySpeed),I=this._sphericalEnd.radius,C=this._sphericalEnd.radius*T,L=Ci(C,this.minDistance,this.maxDistance),U=L-C;this.infinityDolly&&this.dollyToCursor?this._dollyToNoClamp(C,!0):this.infinityDolly&&!this.dollyToCursor?(this.dollyInFixed(U,!0),this._dollyToNoClamp(L,!0)):this._dollyToNoClamp(L,!0),this.dollyToCursor&&(this._changedDolly+=(this.infinityDolly?C:L)-I,this._dollyControlCoord.set(E,w)),this._lastDollyDirection=Math.sign(-g)},this._zoomInternal=(g,E,w)=>{const T=Math.pow(.95,g*this.dollySpeed),I=this._zoom,C=this._zoom*T;this.zoomTo(C,!0),this.dollyToCursor&&(this._changedZoom+=C-I,this._dollyControlCoord.set(E,w))},typeof lt>"u"&&console.error("camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information."),this._camera=e,this._yAxisUpSpace=new lt.Quaternion().setFromUnitVectors(this._camera.up,_u),this._yAxisUpSpaceInverse=this._yAxisUpSpace.clone().invert(),this._state=le.NONE,this._target=new lt.Vector3,this._targetEnd=this._target.clone(),this._focalOffset=new lt.Vector3,this._focalOffsetEnd=this._focalOffset.clone(),this._spherical=new lt.Spherical().setFromVector3(yt.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace)),this._sphericalEnd=this._spherical.clone(),this._lastDistance=this._spherical.radius,this._zoom=this._camera.zoom,this._zoomEnd=this._zoom,this._lastZoom=this._zoom,this._nearPlaneCorners=[new lt.Vector3,new lt.Vector3,new lt.Vector3,new lt.Vector3],this._updateNearPlaneCorners(),this._boundary=new lt.Box3(new lt.Vector3(-1/0,-1/0,-1/0),new lt.Vector3(1/0,1/0,1/0)),this._cameraUp0=this._camera.up.clone(),this._target0=this._target.clone(),this._position0=this._camera.position.clone(),this._zoom0=this._zoom,this._focalOffset0=this._focalOffset.clone(),this._dollyControlCoord=new lt.Vector2,this.mouseButtons={left:le.ROTATE,middle:le.DOLLY,right:le.TRUCK,wheel:xs(this._camera)?le.DOLLY:Vr(this._camera)?le.ZOOM:le.NONE},this.touches={one:le.TOUCH_ROTATE,two:xs(this._camera)?le.TOUCH_DOLLY_TRUCK:Vr(this._camera)?le.TOUCH_ZOOM_TRUCK:le.NONE,three:le.TOUCH_TRUCK};const n=new lt.Vector2,i=new lt.Vector2,s=new lt.Vector2,a=g=>{if(!this._enabled||!this._domElement)return;if(this._interactiveArea.left!==0||this._interactiveArea.top!==0||this._interactiveArea.width!==1||this._interactiveArea.height!==1){const T=this._domElement.getBoundingClientRect(),I=g.clientX/T.width,C=g.clientY/T.height;if(I<this._interactiveArea.left||I>this._interactiveArea.right||C<this._interactiveArea.top||C>this._interactiveArea.bottom)return}const E=g.pointerType!=="mouse"?null:(g.buttons&jt.LEFT)===jt.LEFT?jt.LEFT:(g.buttons&jt.MIDDLE)===jt.MIDDLE?jt.MIDDLE:(g.buttons&jt.RIGHT)===jt.RIGHT?jt.RIGHT:null;if(E!==null){const T=this._findPointerByMouseButton(E);T&&this._disposePointer(T)}if((g.buttons&jt.LEFT)===jt.LEFT&&this._lockedPointer)return;const w={pointerId:g.pointerId,clientX:g.clientX,clientY:g.clientY,deltaX:0,deltaY:0,mouseButton:E};this._activePointers.push(w),this._domElement.ownerDocument.removeEventListener("pointermove",c,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",u),this._domElement.ownerDocument.addEventListener("pointermove",c,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",u),this._isDragging=!0,m(g)},c=g=>{g.cancelable&&g.preventDefault();const E=g.pointerId,w=this._lockedPointer||this._findPointerById(E);if(w){if(w.clientX=g.clientX,w.clientY=g.clientY,w.deltaX=g.movementX,w.deltaY=g.movementY,this._state=0,g.pointerType==="touch")switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else(!this._isDragging&&this._lockedPointer||this._isDragging&&(g.buttons&jt.LEFT)===jt.LEFT)&&(this._state=this._state|this.mouseButtons.left),this._isDragging&&(g.buttons&jt.MIDDLE)===jt.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),this._isDragging&&(g.buttons&jt.RIGHT)===jt.RIGHT&&(this._state=this._state|this.mouseButtons.right);_()}},u=g=>{const E=this._findPointerById(g.pointerId);if(!(E&&E===this._lockedPointer)){if(E&&this._disposePointer(E),g.pointerType==="touch")switch(this._activePointers.length){case 0:this._state=le.NONE;break;case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else this._state=le.NONE;y()}};let h=-1;const d=g=>{if(!this._domElement||!this._enabled||this.mouseButtons.wheel===le.NONE)return;if(this._interactiveArea.left!==0||this._interactiveArea.top!==0||this._interactiveArea.width!==1||this._interactiveArea.height!==1){const C=this._domElement.getBoundingClientRect(),L=g.clientX/C.width,U=g.clientY/C.height;if(L<this._interactiveArea.left||L>this._interactiveArea.right||U<this._interactiveArea.top||U>this._interactiveArea.bottom)return}if(g.preventDefault(),this.dollyToCursor||this.mouseButtons.wheel===le.ROTATE||this.mouseButtons.wheel===le.TRUCK){const C=performance.now();h-C<1e3&&this._getClientRect(this._elementRect),h=C}const E=vR?-1:-3,w=g.deltaMode===1?g.deltaY/E:g.deltaY/(E*10),T=this.dollyToCursor?(g.clientX-this._elementRect.x)/this._elementRect.width*2-1:0,I=this.dollyToCursor?(g.clientY-this._elementRect.y)/this._elementRect.height*-2+1:0;switch(this.mouseButtons.wheel){case le.ROTATE:{this._rotateInternal(g.deltaX,g.deltaY),this._isUserControllingRotate=!0;break}case le.TRUCK:{this._truckInternal(g.deltaX,g.deltaY,!1),this._isUserControllingTruck=!0;break}case le.OFFSET:{this._truckInternal(g.deltaX,g.deltaY,!0),this._isUserControllingOffset=!0;break}case le.DOLLY:{this._dollyInternal(-w,T,I),this._isUserControllingDolly=!0;break}case le.ZOOM:{this._zoomInternal(-w,T,I),this._isUserControllingZoom=!0;break}}this.dispatchEvent({type:"control"})},p=g=>{if(!(!this._domElement||!this._enabled)){if(this.mouseButtons.right===Sp.ACTION.NONE){const E=g instanceof PointerEvent?g.pointerId:0,w=this._findPointerById(E);w&&this._disposePointer(w),this._domElement.ownerDocument.removeEventListener("pointermove",c,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",u);return}g.preventDefault()}},m=g=>{if(!this._enabled)return;if(qf(this._activePointers,jn),this._getClientRect(this._elementRect),n.copy(jn),i.copy(jn),this._activePointers.length>=2){const w=jn.x-this._activePointers[1].clientX,T=jn.y-this._activePointers[1].clientY,I=Math.sqrt(w*w+T*T);s.set(0,I);const C=(this._activePointers[0].clientX+this._activePointers[1].clientX)*.5,L=(this._activePointers[0].clientY+this._activePointers[1].clientY)*.5;i.set(C,L)}if(this._state=0,!g)this._lockedPointer&&(this._state=this._state|this.mouseButtons.left);else if("pointerType"in g&&g.pointerType==="touch")switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else!this._lockedPointer&&(g.buttons&jt.LEFT)===jt.LEFT&&(this._state=this._state|this.mouseButtons.left),(g.buttons&jt.MIDDLE)===jt.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),(g.buttons&jt.RIGHT)===jt.RIGHT&&(this._state=this._state|this.mouseButtons.right);((this._state&le.ROTATE)===le.ROTATE||(this._state&le.TOUCH_ROTATE)===le.TOUCH_ROTATE||(this._state&le.TOUCH_DOLLY_ROTATE)===le.TOUCH_DOLLY_ROTATE||(this._state&le.TOUCH_ZOOM_ROTATE)===le.TOUCH_ZOOM_ROTATE)&&(this._sphericalEnd.theta=this._spherical.theta,this._sphericalEnd.phi=this._spherical.phi,this._thetaVelocity.value=0,this._phiVelocity.value=0),((this._state&le.TRUCK)===le.TRUCK||(this._state&le.TOUCH_TRUCK)===le.TOUCH_TRUCK||(this._state&le.TOUCH_DOLLY_TRUCK)===le.TOUCH_DOLLY_TRUCK||(this._state&le.TOUCH_ZOOM_TRUCK)===le.TOUCH_ZOOM_TRUCK)&&(this._targetEnd.copy(this._target),this._targetVelocity.set(0,0,0)),((this._state&le.DOLLY)===le.DOLLY||(this._state&le.TOUCH_DOLLY)===le.TOUCH_DOLLY||(this._state&le.TOUCH_DOLLY_TRUCK)===le.TOUCH_DOLLY_TRUCK||(this._state&le.TOUCH_DOLLY_OFFSET)===le.TOUCH_DOLLY_OFFSET||(this._state&le.TOUCH_DOLLY_ROTATE)===le.TOUCH_DOLLY_ROTATE)&&(this._sphericalEnd.radius=this._spherical.radius,this._radiusVelocity.value=0),((this._state&le.ZOOM)===le.ZOOM||(this._state&le.TOUCH_ZOOM)===le.TOUCH_ZOOM||(this._state&le.TOUCH_ZOOM_TRUCK)===le.TOUCH_ZOOM_TRUCK||(this._state&le.TOUCH_ZOOM_OFFSET)===le.TOUCH_ZOOM_OFFSET||(this._state&le.TOUCH_ZOOM_ROTATE)===le.TOUCH_ZOOM_ROTATE)&&(this._zoomEnd=this._zoom,this._zoomVelocity.value=0),((this._state&le.OFFSET)===le.OFFSET||(this._state&le.TOUCH_OFFSET)===le.TOUCH_OFFSET||(this._state&le.TOUCH_DOLLY_OFFSET)===le.TOUCH_DOLLY_OFFSET||(this._state&le.TOUCH_ZOOM_OFFSET)===le.TOUCH_ZOOM_OFFSET)&&(this._focalOffsetEnd.copy(this._focalOffset),this._focalOffsetVelocity.set(0,0,0)),this.dispatchEvent({type:"controlstart"})},_=()=>{if(!this._enabled||!this._dragNeedsUpdate)return;this._dragNeedsUpdate=!1,qf(this._activePointers,jn);const E=this._domElement&&this._domElement.ownerDocument.pointerLockElement===this._domElement?this._lockedPointer||this._activePointers[0]:null,w=E?-E.deltaX:i.x-jn.x,T=E?-E.deltaY:i.y-jn.y;if(i.copy(jn),((this._state&le.ROTATE)===le.ROTATE||(this._state&le.TOUCH_ROTATE)===le.TOUCH_ROTATE||(this._state&le.TOUCH_DOLLY_ROTATE)===le.TOUCH_DOLLY_ROTATE||(this._state&le.TOUCH_ZOOM_ROTATE)===le.TOUCH_ZOOM_ROTATE)&&(this._rotateInternal(w,T),this._isUserControllingRotate=!0),(this._state&le.DOLLY)===le.DOLLY||(this._state&le.ZOOM)===le.ZOOM){const I=this.dollyToCursor?(n.x-this._elementRect.x)/this._elementRect.width*2-1:0,C=this.dollyToCursor?(n.y-this._elementRect.y)/this._elementRect.height*-2+1:0,L=this.dollyDragInverted?-1:1;(this._state&le.DOLLY)===le.DOLLY?(this._dollyInternal(L*T*gu,I,C),this._isUserControllingDolly=!0):(this._zoomInternal(L*T*gu,I,C),this._isUserControllingZoom=!0)}if((this._state&le.TOUCH_DOLLY)===le.TOUCH_DOLLY||(this._state&le.TOUCH_ZOOM)===le.TOUCH_ZOOM||(this._state&le.TOUCH_DOLLY_TRUCK)===le.TOUCH_DOLLY_TRUCK||(this._state&le.TOUCH_ZOOM_TRUCK)===le.TOUCH_ZOOM_TRUCK||(this._state&le.TOUCH_DOLLY_OFFSET)===le.TOUCH_DOLLY_OFFSET||(this._state&le.TOUCH_ZOOM_OFFSET)===le.TOUCH_ZOOM_OFFSET||(this._state&le.TOUCH_DOLLY_ROTATE)===le.TOUCH_DOLLY_ROTATE||(this._state&le.TOUCH_ZOOM_ROTATE)===le.TOUCH_ZOOM_ROTATE){const I=jn.x-this._activePointers[1].clientX,C=jn.y-this._activePointers[1].clientY,L=Math.sqrt(I*I+C*C),U=s.y-L;s.set(0,L);const R=this.dollyToCursor?(i.x-this._elementRect.x)/this._elementRect.width*2-1:0,b=this.dollyToCursor?(i.y-this._elementRect.y)/this._elementRect.height*-2+1:0;(this._state&le.TOUCH_DOLLY)===le.TOUCH_DOLLY||(this._state&le.TOUCH_DOLLY_ROTATE)===le.TOUCH_DOLLY_ROTATE||(this._state&le.TOUCH_DOLLY_TRUCK)===le.TOUCH_DOLLY_TRUCK||(this._state&le.TOUCH_DOLLY_OFFSET)===le.TOUCH_DOLLY_OFFSET?(this._dollyInternal(U*gu,R,b),this._isUserControllingDolly=!0):(this._zoomInternal(U*gu,R,b),this._isUserControllingZoom=!0)}((this._state&le.TRUCK)===le.TRUCK||(this._state&le.TOUCH_TRUCK)===le.TOUCH_TRUCK||(this._state&le.TOUCH_DOLLY_TRUCK)===le.TOUCH_DOLLY_TRUCK||(this._state&le.TOUCH_ZOOM_TRUCK)===le.TOUCH_ZOOM_TRUCK)&&(this._truckInternal(w,T,!1),this._isUserControllingTruck=!0),((this._state&le.OFFSET)===le.OFFSET||(this._state&le.TOUCH_OFFSET)===le.TOUCH_OFFSET||(this._state&le.TOUCH_DOLLY_OFFSET)===le.TOUCH_DOLLY_OFFSET||(this._state&le.TOUCH_ZOOM_OFFSET)===le.TOUCH_ZOOM_OFFSET)&&(this._truckInternal(w,T,!0),this._isUserControllingOffset=!0),this.dispatchEvent({type:"control"})},y=()=>{qf(this._activePointers,jn),i.copy(jn),this._dragNeedsUpdate=!1,(this._activePointers.length===0||this._activePointers.length===1&&this._activePointers[0]===this._lockedPointer)&&(this._isDragging=!1),this._activePointers.length===0&&this._domElement&&(this._domElement.ownerDocument.removeEventListener("pointermove",c,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",u),this.dispatchEvent({type:"controlend"}))};this.lockPointer=()=>{!this._enabled||!this._domElement||(this.cancel(),this._lockedPointer={pointerId:-1,clientX:0,clientY:0,deltaX:0,deltaY:0,mouseButton:null},this._activePointers.push(this._lockedPointer),this._domElement.ownerDocument.removeEventListener("pointermove",c,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",u),this._domElement.requestPointerLock(),this._domElement.ownerDocument.addEventListener("pointerlockchange",S),this._domElement.ownerDocument.addEventListener("pointerlockerror",x),this._domElement.ownerDocument.addEventListener("pointermove",c,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",u),m())},this.unlockPointer=()=>{var g,E,w;this._lockedPointer!==null&&(this._disposePointer(this._lockedPointer),this._lockedPointer=null),(g=this._domElement)===null||g===void 0||g.ownerDocument.exitPointerLock(),(E=this._domElement)===null||E===void 0||E.ownerDocument.removeEventListener("pointerlockchange",S),(w=this._domElement)===null||w===void 0||w.ownerDocument.removeEventListener("pointerlockerror",x),this.cancel()};const S=()=>{this._domElement&&this._domElement.ownerDocument.pointerLockElement===this._domElement||this.unlockPointer()},x=()=>{this.unlockPointer()};this._addAllEventListeners=g=>{this._domElement=g,this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none",this._domElement.addEventListener("pointerdown",a),this._domElement.addEventListener("pointercancel",u),this._domElement.addEventListener("wheel",d,{passive:!1}),this._domElement.addEventListener("contextmenu",p)},this._removeAllEventListeners=()=>{this._domElement&&(this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect="",this._domElement.removeEventListener("pointerdown",a),this._domElement.removeEventListener("pointercancel",u),this._domElement.removeEventListener("wheel",d,{passive:!1}),this._domElement.removeEventListener("contextmenu",p),this._domElement.ownerDocument.removeEventListener("pointermove",c,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",u),this._domElement.ownerDocument.removeEventListener("pointerlockchange",S),this._domElement.ownerDocument.removeEventListener("pointerlockerror",x))},this.cancel=()=>{this._state!==le.NONE&&(this._state=le.NONE,this._activePointers.length=0,y())},t&&this.connect(t),this.update(0)}get camera(){return this._camera}set camera(e){this._camera=e,this.updateCameraUp(),this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0}get enabled(){return this._enabled}set enabled(e){this._enabled=e,this._domElement&&(e?(this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none"):(this.cancel(),this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect=""))}get active(){return!this._hasRested}get currentAction(){return this._state}get distance(){return this._spherical.radius}set distance(e){this._spherical.radius===e&&this._sphericalEnd.radius===e||(this._spherical.radius=e,this._sphericalEnd.radius=e,this._needsUpdate=!0)}get azimuthAngle(){return this._spherical.theta}set azimuthAngle(e){this._spherical.theta===e&&this._sphericalEnd.theta===e||(this._spherical.theta=e,this._sphericalEnd.theta=e,this._needsUpdate=!0)}get polarAngle(){return this._spherical.phi}set polarAngle(e){this._spherical.phi===e&&this._sphericalEnd.phi===e||(this._spherical.phi=e,this._sphericalEnd.phi=e,this._needsUpdate=!0)}get boundaryEnclosesCamera(){return this._boundaryEnclosesCamera}set boundaryEnclosesCamera(e){this._boundaryEnclosesCamera=e,this._needsUpdate=!0}set interactiveArea(e){this._interactiveArea.width=Ci(e.width,0,1),this._interactiveArea.height=Ci(e.height,0,1),this._interactiveArea.x=Ci(e.x,0,1-this._interactiveArea.width),this._interactiveArea.y=Ci(e.y,0,1-this._interactiveArea.height)}addEventListener(e,t){super.addEventListener(e,t)}removeEventListener(e,t){super.removeEventListener(e,t)}rotate(e,t,n=!1){return this.rotateTo(this._sphericalEnd.theta+e,this._sphericalEnd.phi+t,n)}rotateAzimuthTo(e,t=!1){return this.rotateTo(e,this._sphericalEnd.phi,t)}rotatePolarTo(e,t=!1){return this.rotateTo(this._sphericalEnd.theta,e,t)}rotateTo(e,t,n=!1){this._isUserControllingRotate=!1;const i=Ci(e,this.minAzimuthAngle,this.maxAzimuthAngle),s=Ci(t,this.minPolarAngle,this.maxPolarAngle);this._sphericalEnd.theta=i,this._sphericalEnd.phi=s,this._sphericalEnd.makeSafe(),this._needsUpdate=!0,n||(this._spherical.theta=this._sphericalEnd.theta,this._spherical.phi=this._sphericalEnd.phi);const a=!n||zt(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&zt(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold);return this._createOnRestPromise(a)}dolly(e,t=!1){return this.dollyTo(this._sphericalEnd.radius-e,t)}dollyTo(e,t=!1){return this._isUserControllingDolly=!1,this._lastDollyDirection=wo.NONE,this._changedDolly=0,this._dollyToNoClamp(Ci(e,this.minDistance,this.maxDistance),t)}_dollyToNoClamp(e,t=!1){const n=this._sphericalEnd.radius;if(this.colliderMeshes.length>=1){const a=this._collisionTest(),c=zt(a,this._spherical.radius);if(!(n>e)&&c)return Promise.resolve();this._sphericalEnd.radius=Math.min(e,a)}else this._sphericalEnd.radius=e;this._needsUpdate=!0,t||(this._spherical.radius=this._sphericalEnd.radius);const s=!t||zt(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(s)}dollyInFixed(e,t=!1){this._targetEnd.add(this._getCameraDirection(Ia).multiplyScalar(e)),t||this._target.copy(this._targetEnd);const n=!t||zt(this._target.x,this._targetEnd.x,this.restThreshold)&&zt(this._target.y,this._targetEnd.y,this.restThreshold)&&zt(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(n)}zoom(e,t=!1){return this.zoomTo(this._zoomEnd+e,t)}zoomTo(e,t=!1){this._isUserControllingZoom=!1,this._zoomEnd=Ci(e,this.minZoom,this.maxZoom),this._needsUpdate=!0,t||(this._zoom=this._zoomEnd);const n=!t||zt(this._zoom,this._zoomEnd,this.restThreshold);return this._changedZoom=0,this._createOnRestPromise(n)}pan(e,t,n=!1){return console.warn("`pan` has been renamed to `truck`"),this.truck(e,t,n)}truck(e,t,n=!1){this._camera.updateMatrix(),Yi.setFromMatrixColumn(this._camera.matrix,0),qi.setFromMatrixColumn(this._camera.matrix,1),Yi.multiplyScalar(e),qi.multiplyScalar(-t);const i=yt.copy(Yi).add(qi),s=Ft.copy(this._targetEnd).add(i);return this.moveTo(s.x,s.y,s.z,n)}forward(e,t=!1){yt.setFromMatrixColumn(this._camera.matrix,0),yt.crossVectors(this._camera.up,yt),yt.multiplyScalar(e);const n=Ft.copy(this._targetEnd).add(yt);return this.moveTo(n.x,n.y,n.z,t)}elevate(e,t=!1){return yt.copy(this._camera.up).multiplyScalar(e),this.moveTo(this._targetEnd.x+yt.x,this._targetEnd.y+yt.y,this._targetEnd.z+yt.z,t)}moveTo(e,t,n,i=!1){this._isUserControllingTruck=!1;const s=yt.set(e,t,n).sub(this._targetEnd);this._encloseToBoundary(this._targetEnd,s,this.boundaryFriction),this._needsUpdate=!0,i||this._target.copy(this._targetEnd);const a=!i||zt(this._target.x,this._targetEnd.x,this.restThreshold)&&zt(this._target.y,this._targetEnd.y,this.restThreshold)&&zt(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(a)}lookInDirectionOf(e,t,n,i=!1){const c=yt.set(e,t,n).sub(this._targetEnd).normalize().multiplyScalar(-this._sphericalEnd.radius).add(this._targetEnd);return this.setPosition(c.x,c.y,c.z,i)}fitToBox(e,t,{cover:n=!1,paddingLeft:i=0,paddingRight:s=0,paddingBottom:a=0,paddingTop:c=0}={}){const u=[],h=e.isBox3?Co.copy(e):Co.setFromObject(e);h.isEmpty()&&(console.warn("camera-controls: fitTo() cannot be used with an empty box. Aborting"),Promise.resolve());const d=G0(this._sphericalEnd.theta,V0),p=G0(this._sphericalEnd.phi,V0);u.push(this.rotateTo(d,p,t));const m=yt.setFromSpherical(this._sphericalEnd).normalize(),_=J0.setFromUnitVectors(m,Kf),y=zt(Math.abs(m.y),1);y&&_.multiply(Qf.setFromAxisAngle(_u,d)),_.multiply(this._yAxisUpSpaceInverse);const S=Z0.makeEmpty();Ft.copy(h.min).applyQuaternion(_),S.expandByPoint(Ft),Ft.copy(h.min).setX(h.max.x).applyQuaternion(_),S.expandByPoint(Ft),Ft.copy(h.min).setY(h.max.y).applyQuaternion(_),S.expandByPoint(Ft),Ft.copy(h.max).setZ(h.min.z).applyQuaternion(_),S.expandByPoint(Ft),Ft.copy(h.min).setZ(h.max.z).applyQuaternion(_),S.expandByPoint(Ft),Ft.copy(h.max).setY(h.min.y).applyQuaternion(_),S.expandByPoint(Ft),Ft.copy(h.max).setX(h.min.x).applyQuaternion(_),S.expandByPoint(Ft),Ft.copy(h.max).applyQuaternion(_),S.expandByPoint(Ft),S.min.x-=i,S.min.y-=a,S.max.x+=s,S.max.y+=c,_.setFromUnitVectors(Kf,m),y&&_.premultiply(Qf.invert()),_.premultiply(this._yAxisUpSpace);const x=S.getSize(yt),g=S.getCenter(Ft).applyQuaternion(_);if(xs(this._camera)){const E=this.getDistanceToFitBox(x.x,x.y,x.z,n);u.push(this.moveTo(g.x,g.y,g.z,t)),u.push(this.dollyTo(E,t)),u.push(this.setFocalOffset(0,0,0,t))}else if(Vr(this._camera)){const E=this._camera,w=E.right-E.left,T=E.top-E.bottom,I=n?Math.max(w/x.x,T/x.y):Math.min(w/x.x,T/x.y);u.push(this.moveTo(g.x,g.y,g.z,t)),u.push(this.zoomTo(I,t)),u.push(this.setFocalOffset(0,0,0,t))}return Promise.all(u)}fitToSphere(e,t){const n=[],s="isObject3D"in e?Sp.createBoundingSphere(e,jf):jf.copy(e);if(n.push(this.moveTo(s.center.x,s.center.y,s.center.z,t)),xs(this._camera)){const a=this.getDistanceToFitSphere(s.radius);n.push(this.dollyTo(a,t))}else if(Vr(this._camera)){const a=this._camera.right-this._camera.left,c=this._camera.top-this._camera.bottom,u=2*s.radius,h=Math.min(a/u,c/u);n.push(this.zoomTo(h,t))}return n.push(this.setFocalOffset(0,0,0,t)),Promise.all(n)}setLookAt(e,t,n,i,s,a,c=!1){this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._lastDollyDirection=wo.NONE,this._changedDolly=0;const u=Ft.set(i,s,a),h=yt.set(e,t,n);this._targetEnd.copy(u),this._sphericalEnd.setFromVector3(h.sub(u).applyQuaternion(this._yAxisUpSpace)),this.normalizeRotations(),this._needsUpdate=!0,c||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const d=!c||zt(this._target.x,this._targetEnd.x,this.restThreshold)&&zt(this._target.y,this._targetEnd.y,this.restThreshold)&&zt(this._target.z,this._targetEnd.z,this.restThreshold)&&zt(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&zt(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&zt(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(d)}lerpLookAt(e,t,n,i,s,a,c,u,h,d,p,m,_,y=!1){this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._lastDollyDirection=wo.NONE,this._changedDolly=0;const S=yt.set(i,s,a),x=Ft.set(e,t,n);xi.setFromVector3(x.sub(S).applyQuaternion(this._yAxisUpSpace));const g=bo.set(d,p,m),E=Ft.set(c,u,h);La.setFromVector3(E.sub(g).applyQuaternion(this._yAxisUpSpace)),this._targetEnd.copy(S.lerp(g,_));const w=La.theta-xi.theta,T=La.phi-xi.phi,I=La.radius-xi.radius;this._sphericalEnd.set(xi.radius+I*_,xi.phi+T*_,xi.theta+w*_),this.normalizeRotations(),this._needsUpdate=!0,y||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const C=!y||zt(this._target.x,this._targetEnd.x,this.restThreshold)&&zt(this._target.y,this._targetEnd.y,this.restThreshold)&&zt(this._target.z,this._targetEnd.z,this.restThreshold)&&zt(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&zt(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&zt(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(C)}setPosition(e,t,n,i=!1){return this.setLookAt(e,t,n,this._targetEnd.x,this._targetEnd.y,this._targetEnd.z,i)}setTarget(e,t,n,i=!1){const s=this.getPosition(yt),a=this.setLookAt(s.x,s.y,s.z,e,t,n,i);return this._sphericalEnd.phi=Ci(this._sphericalEnd.phi,this.minPolarAngle,this.maxPolarAngle),a}setFocalOffset(e,t,n,i=!1){this._isUserControllingOffset=!1,this._focalOffsetEnd.set(e,t,n),this._needsUpdate=!0,i||this._focalOffset.copy(this._focalOffsetEnd);const s=!i||zt(this._focalOffset.x,this._focalOffsetEnd.x,this.restThreshold)&&zt(this._focalOffset.y,this._focalOffsetEnd.y,this.restThreshold)&&zt(this._focalOffset.z,this._focalOffsetEnd.z,this.restThreshold);return this._createOnRestPromise(s)}setOrbitPoint(e,t,n){this._camera.updateMatrixWorld(),Yi.setFromMatrixColumn(this._camera.matrixWorldInverse,0),qi.setFromMatrixColumn(this._camera.matrixWorldInverse,1),Ss.setFromMatrixColumn(this._camera.matrixWorldInverse,2);const i=yt.set(e,t,n),s=i.distanceTo(this._camera.position),a=i.sub(this._camera.position);Yi.multiplyScalar(a.x),qi.multiplyScalar(a.y),Ss.multiplyScalar(a.z),yt.copy(Yi).add(qi).add(Ss),yt.z=yt.z+s,this.dollyTo(s,!1),this.setFocalOffset(-yt.x,yt.y,-yt.z,!1),this.moveTo(e,t,n,!1)}setBoundary(e){if(!e){this._boundary.min.set(-1/0,-1/0,-1/0),this._boundary.max.set(1/0,1/0,1/0),this._needsUpdate=!0;return}this._boundary.copy(e),this._boundary.clampPoint(this._targetEnd,this._targetEnd),this._needsUpdate=!0}setViewport(e,t,n,i){if(e===null){this._viewport=null;return}this._viewport=this._viewport||new lt.Vector4,typeof e=="number"?this._viewport.set(e,t,n,i):this._viewport.copy(e)}getDistanceToFitBox(e,t,n,i=!1){if(Zf(this._camera,"getDistanceToFitBox"))return this._spherical.radius;const s=e/t,a=this._camera.getEffectiveFOV()*Ca,c=this._camera.aspect;return((i?s>c:s<c)?t:e/c)*.5/Math.tan(a*.5)+n*.5}getDistanceToFitSphere(e){if(Zf(this._camera,"getDistanceToFitSphere"))return this._spherical.radius;const t=this._camera.getEffectiveFOV()*Ca,n=Math.atan(Math.tan(t*.5)*this._camera.aspect)*2,i=1<this._camera.aspect?t:n;return e/Math.sin(i*.5)}getTarget(e,t=!0){return(e&&e.isVector3?e:new lt.Vector3).copy(t?this._targetEnd:this._target)}getPosition(e,t=!0){return(e&&e.isVector3?e:new lt.Vector3).setFromSpherical(t?this._sphericalEnd:this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(t?this._targetEnd:this._target)}getSpherical(e,t=!0){return(e||new lt.Spherical).copy(t?this._sphericalEnd:this._spherical)}getFocalOffset(e,t=!0){return(e&&e.isVector3?e:new lt.Vector3).copy(t?this._focalOffsetEnd:this._focalOffset)}normalizeRotations(){this._sphericalEnd.theta=this._sphericalEnd.theta%Ao,this._sphericalEnd.theta<0&&(this._sphericalEnd.theta+=Ao),this._spherical.theta+=Ao*Math.round((this._sphericalEnd.theta-this._spherical.theta)/Ao)}stop(){this._focalOffset.copy(this._focalOffsetEnd),this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd),this._zoom=this._zoomEnd}reset(e=!1){if(!zt(this._camera.up.x,this._cameraUp0.x)||!zt(this._camera.up.y,this._cameraUp0.y)||!zt(this._camera.up.z,this._cameraUp0.z)){this._camera.up.copy(this._cameraUp0);const n=this.getPosition(yt);this.updateCameraUp(),this.setPosition(n.x,n.y,n.z)}const t=[this.setLookAt(this._position0.x,this._position0.y,this._position0.z,this._target0.x,this._target0.y,this._target0.z,e),this.setFocalOffset(this._focalOffset0.x,this._focalOffset0.y,this._focalOffset0.z,e),this.zoomTo(this._zoom0,e)];return Promise.all(t)}saveState(){this._cameraUp0.copy(this._camera.up),this.getTarget(this._target0),this.getPosition(this._position0),this._zoom0=this._zoom,this._focalOffset0.copy(this._focalOffset)}updateCameraUp(){this._yAxisUpSpace.setFromUnitVectors(this._camera.up,_u),this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert()}applyCameraUp(){const e=yt.subVectors(this._target,this._camera.position).normalize(),t=Ft.crossVectors(e,this._camera.up);this._camera.up.crossVectors(t,e).normalize(),this._camera.updateMatrixWorld();const n=this.getPosition(yt);this.updateCameraUp(),this.setPosition(n.x,n.y,n.z)}update(e){const t=this._sphericalEnd.theta-this._spherical.theta,n=this._sphericalEnd.phi-this._spherical.phi,i=this._sphericalEnd.radius-this._spherical.radius,s=Y0.subVectors(this._targetEnd,this._target),a=q0.subVectors(this._focalOffsetEnd,this._focalOffset),c=this._zoomEnd-this._zoom;if(Wt(t))this._thetaVelocity.value=0,this._spherical.theta=this._sphericalEnd.theta;else{const p=this._isUserControllingRotate?this.draggingSmoothTime:this.smoothTime;this._spherical.theta=mu(this._spherical.theta,this._sphericalEnd.theta,this._thetaVelocity,p,1/0,e),this._needsUpdate=!0}if(Wt(n))this._phiVelocity.value=0,this._spherical.phi=this._sphericalEnd.phi;else{const p=this._isUserControllingRotate?this.draggingSmoothTime:this.smoothTime;this._spherical.phi=mu(this._spherical.phi,this._sphericalEnd.phi,this._phiVelocity,p,1/0,e),this._needsUpdate=!0}if(Wt(i))this._radiusVelocity.value=0,this._spherical.radius=this._sphericalEnd.radius;else{const p=this._isUserControllingDolly?this.draggingSmoothTime:this.smoothTime;this._spherical.radius=mu(this._spherical.radius,this._sphericalEnd.radius,this._radiusVelocity,p,this.maxSpeed,e),this._needsUpdate=!0}if(Wt(s.x)&&Wt(s.y)&&Wt(s.z))this._targetVelocity.set(0,0,0),this._target.copy(this._targetEnd);else{const p=this._isUserControllingTruck?this.draggingSmoothTime:this.smoothTime;W0(this._target,this._targetEnd,this._targetVelocity,p,this.maxSpeed,e,this._target),this._needsUpdate=!0}if(Wt(a.x)&&Wt(a.y)&&Wt(a.z))this._focalOffsetVelocity.set(0,0,0),this._focalOffset.copy(this._focalOffsetEnd);else{const p=this._isUserControllingOffset?this.draggingSmoothTime:this.smoothTime;W0(this._focalOffset,this._focalOffsetEnd,this._focalOffsetVelocity,p,this.maxSpeed,e,this._focalOffset),this._needsUpdate=!0}if(Wt(c))this._zoomVelocity.value=0,this._zoom=this._zoomEnd;else{const p=this._isUserControllingZoom?this.draggingSmoothTime:this.smoothTime;this._zoom=mu(this._zoom,this._zoomEnd,this._zoomVelocity,p,1/0,e)}if(this.dollyToCursor){if(xs(this._camera)&&this._changedDolly!==0){const p=this._spherical.radius-this._lastDistance,m=this._camera,_=this._getCameraDirection(Ia),y=yt.copy(_).cross(m.up).normalize();y.lengthSq()===0&&(y.x=1);const S=Ft.crossVectors(y,_),x=this._sphericalEnd.radius*Math.tan(m.getEffectiveFOV()*Ca*.5),E=(this._sphericalEnd.radius-p-this._sphericalEnd.radius)/this._sphericalEnd.radius,w=bo.copy(this._targetEnd).add(y.multiplyScalar(this._dollyControlCoord.x*x*m.aspect)).add(S.multiplyScalar(this._dollyControlCoord.y*x)),T=yt.copy(this._targetEnd).lerp(w,E),I=this._lastDollyDirection===wo.IN&&this._spherical.radius<=this.minDistance,C=this._lastDollyDirection===wo.OUT&&this.maxDistance<=this._spherical.radius;if(this.infinityDolly&&(I||C)){this._sphericalEnd.radius-=p,this._spherical.radius-=p;const U=Ft.copy(_).multiplyScalar(-p);T.add(U)}this._boundary.clampPoint(T,T);const L=Ft.subVectors(T,this._targetEnd);this._targetEnd.copy(T),this._target.add(L),this._changedDolly-=p,Wt(this._changedDolly)&&(this._changedDolly=0)}else if(Vr(this._camera)&&this._changedZoom!==0){const p=this._zoom-this._lastZoom,m=this._camera,_=yt.set(this._dollyControlCoord.x,this._dollyControlCoord.y,(m.near+m.far)/(m.near-m.far)).unproject(m),y=Ft.set(0,0,-1).applyQuaternion(m.quaternion),S=bo.copy(_).add(y.multiplyScalar(-_.dot(m.up))),g=-(this._zoom-p-this._zoom)/this._zoom,E=this._getCameraDirection(Ia),w=this._targetEnd.dot(E),T=yt.copy(this._targetEnd).lerp(S,g),I=T.dot(E),C=E.multiplyScalar(I-w);T.sub(C),this._boundary.clampPoint(T,T);const L=Ft.subVectors(T,this._targetEnd);this._targetEnd.copy(T),this._target.add(L),this._changedZoom-=p,Wt(this._changedZoom)&&(this._changedZoom=0)}}this._camera.zoom!==this._zoom&&(this._camera.zoom=this._zoom,this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0),this._dragNeedsUpdate=!0;const u=this._collisionTest();this._spherical.radius=Math.min(this._spherical.radius,u),this._spherical.makeSafe(),this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target),this._camera.lookAt(this._target),(!Wt(this._focalOffset.x)||!Wt(this._focalOffset.y)||!Wt(this._focalOffset.z))&&(this._camera.updateMatrixWorld(),Yi.setFromMatrixColumn(this._camera.matrix,0),qi.setFromMatrixColumn(this._camera.matrix,1),Ss.setFromMatrixColumn(this._camera.matrix,2),Yi.multiplyScalar(this._focalOffset.x),qi.multiplyScalar(-this._focalOffset.y),Ss.multiplyScalar(this._focalOffset.z),yt.copy(Yi).add(qi).add(Ss),this._camera.position.add(yt)),this._boundaryEnclosesCamera&&this._encloseToBoundary(this._camera.position.copy(this._target),yt.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse),1);const d=this._needsUpdate;return d&&!this._updatedLastTime?(this._hasRested=!1,this.dispatchEvent({type:"wake"}),this.dispatchEvent({type:"update"})):d?(this.dispatchEvent({type:"update"}),Wt(t,this.restThreshold)&&Wt(n,this.restThreshold)&&Wt(i,this.restThreshold)&&Wt(s.x,this.restThreshold)&&Wt(s.y,this.restThreshold)&&Wt(s.z,this.restThreshold)&&Wt(a.x,this.restThreshold)&&Wt(a.y,this.restThreshold)&&Wt(a.z,this.restThreshold)&&Wt(c,this.restThreshold)&&!this._hasRested&&(this._hasRested=!0,this.dispatchEvent({type:"rest"}))):!d&&this._updatedLastTime&&this.dispatchEvent({type:"sleep"}),this._lastDistance=this._spherical.radius,this._lastZoom=this._zoom,this._updatedLastTime=d,this._needsUpdate=!1,d}toJSON(){return JSON.stringify({enabled:this._enabled,minDistance:this.minDistance,maxDistance:Ra(this.maxDistance),minZoom:this.minZoom,maxZoom:Ra(this.maxZoom),minPolarAngle:this.minPolarAngle,maxPolarAngle:Ra(this.maxPolarAngle),minAzimuthAngle:Ra(this.minAzimuthAngle),maxAzimuthAngle:Ra(this.maxAzimuthAngle),smoothTime:this.smoothTime,draggingSmoothTime:this.draggingSmoothTime,dollySpeed:this.dollySpeed,truckSpeed:this.truckSpeed,dollyToCursor:this.dollyToCursor,verticalDragToForward:this.verticalDragToForward,target:this._targetEnd.toArray(),position:yt.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),zoom:this._zoomEnd,focalOffset:this._focalOffsetEnd.toArray(),target0:this._target0.toArray(),position0:this._position0.toArray(),zoom0:this._zoom0,focalOffset0:this._focalOffset0.toArray()})}fromJSON(e,t=!1){const n=JSON.parse(e);this.enabled=n.enabled,this.minDistance=n.minDistance,this.maxDistance=Pa(n.maxDistance),this.minZoom=n.minZoom,this.maxZoom=Pa(n.maxZoom),this.minPolarAngle=n.minPolarAngle,this.maxPolarAngle=Pa(n.maxPolarAngle),this.minAzimuthAngle=Pa(n.minAzimuthAngle),this.maxAzimuthAngle=Pa(n.maxAzimuthAngle),this.smoothTime=n.smoothTime,this.draggingSmoothTime=n.draggingSmoothTime,this.dollySpeed=n.dollySpeed,this.truckSpeed=n.truckSpeed,this.dollyToCursor=n.dollyToCursor,this.verticalDragToForward=n.verticalDragToForward,this._target0.fromArray(n.target0),this._position0.fromArray(n.position0),this._zoom0=n.zoom0,this._focalOffset0.fromArray(n.focalOffset0),this.moveTo(n.target[0],n.target[1],n.target[2],t),xi.setFromVector3(yt.fromArray(n.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace)),this.rotateTo(xi.theta,xi.phi,t),this.dollyTo(xi.radius,t),this.zoomTo(n.zoom,t),this.setFocalOffset(n.focalOffset[0],n.focalOffset[1],n.focalOffset[2],t),this._needsUpdate=!0}connect(e){if(this._domElement){console.warn("camera-controls is already connected.");return}e.setAttribute("data-camera-controls-version",_R),this._addAllEventListeners(e),this._getClientRect(this._elementRect)}disconnect(){this.cancel(),this._removeAllEventListeners(),this._domElement&&(this._domElement.removeAttribute("data-camera-controls-version"),this._domElement=void 0)}dispose(){this.removeAllEventListeners(),this.disconnect()}_getTargetDirection(e){return e.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse)}_getCameraDirection(e){return this._getTargetDirection(e).negate()}_findPointerById(e){return this._activePointers.find(t=>t.pointerId===e)}_findPointerByMouseButton(e){return this._activePointers.find(t=>t.mouseButton===e)}_disposePointer(e){this._activePointers.splice(this._activePointers.indexOf(e),1)}_encloseToBoundary(e,t,n){const i=t.lengthSq();if(i===0)return e;const s=Ft.copy(t).add(e),c=this._boundary.clampPoint(s,bo).sub(s),u=c.lengthSq();if(u===0)return e.add(t);if(u===i)return e;if(n===0)return e.add(t).add(c);{const h=1+n*u/t.dot(c);return e.add(Ft.copy(t).multiplyScalar(h)).add(c.multiplyScalar(1-n))}}_updateNearPlaneCorners(){if(xs(this._camera)){const e=this._camera,t=e.near,n=e.getEffectiveFOV()*Ca,i=Math.tan(n*.5)*t,s=i*e.aspect;this._nearPlaneCorners[0].set(-s,-i,0),this._nearPlaneCorners[1].set(s,-i,0),this._nearPlaneCorners[2].set(s,i,0),this._nearPlaneCorners[3].set(-s,i,0)}else if(Vr(this._camera)){const e=this._camera,t=1/e.zoom,n=e.left*t,i=e.right*t,s=e.top*t,a=e.bottom*t;this._nearPlaneCorners[0].set(n,s,0),this._nearPlaneCorners[1].set(i,s,0),this._nearPlaneCorners[2].set(i,a,0),this._nearPlaneCorners[3].set(n,a,0)}}_collisionTest(){let e=1/0;if(!(this.colliderMeshes.length>=1)||Zf(this._camera,"_collisionTest"))return e;const n=this._getTargetDirection(Ia);$f.lookAt(X0,n,this._camera.up);for(let i=0;i<4;i++){const s=Ft.copy(this._nearPlaneCorners[i]);s.applyMatrix4($f);const a=bo.addVectors(this._target,s);vu.set(a,n),vu.far=this._spherical.radius+1;const c=vu.intersectObjects(this.colliderMeshes);c.length!==0&&c[0].distance<e&&(e=c[0].distance)}return e}_getClientRect(e){if(!this._domElement)return;const t=this._domElement.getBoundingClientRect();return e.x=t.left,e.y=t.top,this._viewport?(e.x+=this._viewport.x,e.y+=t.height-this._viewport.w-this._viewport.y,e.width=this._viewport.z,e.height=this._viewport.w):(e.width=t.width,e.height=t.height),e}_createOnRestPromise(e){return e?Promise.resolve():(this._hasRested=!1,this.dispatchEvent({type:"transitionstart"}),new Promise(t=>{const n=()=>{this.removeEventListener("rest",n),t()};this.addEventListener("rest",n)}))}_addAllEventListeners(e){}_removeAllEventListeners(){}get dampingFactor(){return console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead."),0}set dampingFactor(e){console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead.")}get draggingDampingFactor(){return console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead."),0}set draggingDampingFactor(e){console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.")}static createBoundingSphere(e,t=new lt.Sphere){const n=t,i=n.center;Co.makeEmpty(),e.traverseVisible(a=>{a.isMesh&&Co.expandByObject(a)}),Co.getCenter(i);let s=0;return e.traverseVisible(a=>{if(!a.isMesh)return;const c=a,u=c.geometry.clone();u.applyMatrix4(c.matrixWorld);const d=u.attributes.position;for(let p=0,m=d.count;p<m;p++)yt.fromBufferAttribute(d,p),s=Math.max(s,i.distanceToSquared(yt))}),n.radius=Math.sqrt(s),n}};const yR=We.forwardRef((r,e)=>{We.useMemo(()=>{const I={Box3:Nn,MathUtils:{clamp:Vv.clamp},Matrix4:rt,Quaternion:Wn,Raycaster:cm,Sphere:An,Spherical:Qy,Vector2:fe,Vector3:F,Vector4:Pt};ep.install({THREE:I}),rx({CameraControlsImpl:ep})},[]);const{camera:t,domElement:n,makeDefault:i,onStart:s,onEnd:a,onChange:c,regress:u,...h}=r,d=pr(I=>I.camera),p=pr(I=>I.gl),m=pr(I=>I.invalidate),_=pr(I=>I.events),y=pr(I=>I.setEvents),S=pr(I=>I.set),x=pr(I=>I.get),g=pr(I=>I.performance),E=t||d,w=n||_.connected||p.domElement,T=We.useMemo(()=>new ep(E),[E]);return qC((I,C)=>{T.enabled&&T.update(C)},-1),We.useEffect(()=>(T.connect(w),()=>void T.disconnect()),[w,T]),We.useEffect(()=>{const I=U=>{m(),u&&g.regress(),c&&c(U)},C=U=>{s&&s(U)},L=U=>{a&&a(U)};return T.addEventListener("update",I),T.addEventListener("controlstart",C),T.addEventListener("controlend",L),T.addEventListener("control",I),T.addEventListener("transitionstart",I),T.addEventListener("wake",I),()=>{T.removeEventListener("update",I),T.removeEventListener("controlstart",C),T.removeEventListener("controlend",L),T.removeEventListener("control",I),T.removeEventListener("transitionstart",I),T.removeEventListener("wake",I)}},[T,s,a,m,y,u,c]),We.useEffect(()=>{if(i){const I=x().controls;return S({controls:T}),()=>S({controls:I})}},[i,T]),We.createElement("primitive",xp({ref:e,object:T},h))}),xR=()=>{const{controls:r}=pr(),e=We.useRef(),t=.2;return We.useEffect(()=>{r&&(r.fitToBox(e.current,!0,{paddingTop:t,paddingLeft:t,paddingBottom:t,paddingRight:t}),r.rotateTo(Math.PI/-.4,Math.PI/2.5,!0))},[r]),fn.jsxs(fn.Fragment,{children:[fn.jsxs("mesh",{ref:e,children:[fn.jsx("boxGeometry",{}),fn.jsx("meshNormalMaterial",{})]}),fn.jsx(yR,{makeDefault:!0})]})},TR=()=>fn.jsx(mR,{camera:{position:[10,-20,5],fov:45},style:{height:"100%",width:"100%"},children:fn.jsx(xR,{})});export{TR as default};
